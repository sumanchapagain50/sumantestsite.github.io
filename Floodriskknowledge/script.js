const cube = document.getElementById('cube');
const scene = document.getElementById('scene');
const descriptionBox = document.getElementById('description');
const faceTitle = document.getElementById('face-title');
const submitBtn = document.getElementById('submit-btn');
const resetBtn = document.getElementById('reset-btn');
const scoreDisplay = document.getElementById('score');
const hazardSelect = document.getElementById('hazard-select');
const gameLevelSelect = document.getElementById('gamelevel-select');
const languageSelect = document.getElementById('lang-select');
const startBtn = document.getElementById('start-btn');
const voiceToggle = document.getElementById('voice-toggle');
const dropBoxes = document.querySelectorAll('.drop-box');
const sidebarLeft = document.getElementById('sidebar-left');
const hamburgerToggle = document.getElementById('hamburger-toggle');
const rotateHorizontalBtn = document.querySelector('button[onclick="rotateCube(\'horizontal\')"]');
const rotateVerticalBtn = document.querySelector('button[onclick="rotateCube(\'vertical\')"]');
const fullscreenBtn = document.getElementById('fullscreen-btn');
const languageSplash = document.getElementById('language-splash');
const langEnglishBtn = document.getElementById('lang-english-btn');
const langNepaliBtn = document.getElementById('lang-nepali-btn');
const container = document.querySelector('.container');
const sidebarRight = document.querySelector('.sidebar-right');


// Disable right-click
document.addEventListener('contextmenu', function (e) {
  e.preventDefault();
  alert(currentLanguage === 'Nepali' ? 'рджрд╛рдпрд╛рдБ рдХреНрд▓рд┐рдХ рдпреЛ рдкреГрд╖реНрдардорд╛ рдирд┐рд╖реЗрдз рдЧрд░рд┐рдПрдХреЛ рдЫред' : 'Right-click is disabled on this page.');
});


// Block certain key combinations
document.addEventListener('keydown', function (e) {
  if (
    (e.ctrlKey && (e.key === 's' || e.key === 'S' || e.key === 'u' || e.key === 'U')) ||
    (e.ctrlKey && e.shiftKey && (e.key === 'I' || e.key === 'i')) ||
    e.key === 'F12'
  ) {
    e.preventDefault();
    alert(currentLanguage === 'Nepali' ? 'рдпреЛ рдХрд╛рд░реНрдп рдпреЛ рдкреГрд╖реНрдардорд╛ рдирд┐рд╖реЗрдз рдЧрд░рд┐рдПрдХреЛ рдЫред' : 'This action is blocked on this page.');
  }
});


window.addEventListener('DOMContentLoaded', () => {
  const audio = document.getElementById('bgSound');
  const muteBtn = document.getElementById('muteBtn');

audio.volume = 0.05;

  // Try playing the audio
  const playAudio = () => {
    audio.play().catch(() => {
      // Handle autoplay restrictions
    });
  };
  playAudio();

  // Fallback to play after user interaction
  document.body.addEventListener('click', playAudio, { once: true });

  // Mute/unmute toggle
  muteBtn.addEventListener('click', () => {
    audio.muted = !audio.muted;
    muteBtn.textContent = audio.muted ? 'ЁЯФЗ' : 'ЁЯФК';
  });
});



let gameStarted = false;
let gameSubmitted = false;
let rotationX = -30;
let rotationY = -30;
let isDraggingCube = false;
let dragStart = { x: 0, y: 0 };
let currentRotation = { x: rotationX, y: rotationY };
let droppedTilesMap = {};
let tilePoints = {};
let visibleScore = false;
let selectedTile = null;
let originalPositions = {};
let currentLanguage = 'English'; // Default language
let lastTapTime = 0;
let lastTappedTile = null;

const faceTitles = {
  front: { English: "Mitigation", Nepali: "рдиреНрдпреВрдиреАрдХрд░рдг" },
  back: { English: "Vulnerability", Nepali: "рд╕рдВрдХрдЯрд╛рд╕рдиреНрдирддрд╛" },
  right: { English: "Capacity", Nepali: "рдХреНрд╖рдорддрд╛" },
  left: { English: "Preparedness", Nepali: "рдкреВрд░реНрд╡рддрдпрд╛рд░реА" },
  top: { English: "Response", Nepali: "рдкреНрд░рддрд┐рдХрд╛рд░реНрдп" },
  bottom: { English: "Recovery", Nepali: "рдкреБрдирд░реНрд▓рд╛рдн" }
};

const hazardActions = {
  Flood: {
    Mitigation: [
  { text: { English: "Construct Dykes", Nepali: "рдбрд╛рдИрдХ рдирд┐рд░реНрдорд╛рдг рдЧрд░реНрдиреБ" }, point: 9 },
  { text: { English: "Improve Drainage", Nepali: "рдврд▓ рдирд┐рдХрд╛рд╕рдорд╛ рд╕реБрдзрд╛рд░ рдЧрд░реНрдиреБ" }, point: 8 },
  { text: { English: "Raised Homes", Nepali: "рдШрд░рд╣рд░реВ рдЙрдЪреЛ рдмрдирд╛рдЙрдиреБ" }, point: 8 },
  { text: { English: "Rainwater Harvesting", Nepali: "рд╡рд░реНрд╖рд╛рдХреЛ рдкрд╛рдиреА рд╕рдВрдХрд▓рди" }, point: 1 },
  { text: { English: "Permeable Pavements", Nepali: "рдкрд╛рдиреА рд╕реЛрд╕реНрдиреЗ рд╕рдбрдХрд╣рд░реБ" }, point: 4 },
  { text: { English: "River Widening", Nepali: "рдирджреА рдЪреМрдбрд╛ рдЧрд░рд┐рдиреБ" }, point: 10 },
  { text: { English: "Wetland Restoration", Nepali: "рд╕рд┐рдорд╕рд╛рд░ рдкреБрдирд░реНрд╕реНрдерд╛рдкрдирд╛" }, point: 9 },
  { text: { English: "Flood Barriers", Nepali: "рдмрд╛рдвреА рдЕрд╡рд░реЛрдзрдХрд╣рд░реВ" }, point: 8 },
  { text: { English: "Reforestation", Nepali: "рдмреГрдХреНрд╖рд╛рд░реЛрдкрдг" }, point: 7 },
  { text: { English: "Flood-Resistant Crops", Nepali: "рдмрд╛рдвреА рдкреНрд░рддрд┐рд░реЛрдзреА рдмрд╛рд▓реАрд╣рд░реВ" }, point: 6 },
  { text: { English: "Early Warning Systems", Nepali: "рдкреВрд░реНрд╡рд╕реВрдЪрдирд╛ рдкреНрд░рдгрд╛рд▓реАрд╣рд░реВ" }, point: 10 },
  { text: { English: "Retention Ponds", Nepali: "рдкреЛрдЦрд░реАрд╣рд░реВ" }, point: 8 },
  { text: { English: "Floodplain Zoning", Nepali: "рдмрд╛рдвреА рдХреНрд╖реЗрддреНрд░ рд╡рд░реНрдЧрд┐рдХрд░рдг" }, point: 9 },
  { text: { English: "Dredging Rivers", Nepali: "рдирджреАрд╣рд░реВ рдЦрдирди" }, point: 7 },
  { text: { English: "Green Infrastructure", Nepali: "рд╣рд░рд┐рдд рдкреВрд░реНрд╡рд╛рдзрд╛рд░" }, point: 8 },
  { text: { English: "Flood Walls", Nepali: "рдмрд╛рдвреА рдкреНрд░рддрд┐рд░реЛрдзреА рдкрд░реНрдЦрд╛рд▓рд╣рд░реВ" }, point: 8 },
  { text: { English: "Channel Diversion", Nepali: "рдирд╛рд▓рд╛ рдлрд░реНрдХрд╛рдЙрдиреБ" }, point: 7 },
  { text: { English: "Stormwater Pumps", Nepali: "рдмрд╛рдвреАрдХреЛ рдкрд╛рдиреА рддрд╛рдиреНрдиреБ" }, point: 6 },
  { text: { English: "Soil Bioengineering", Nepali: "рдЬреИрд╡рд┐рдХ рддрдЯрдмрдиреНрдз" }, point: 7 },
  { text: { English: "Flood Gates", Nepali: "рдирд╣рд░рдХрд╛ рдвреЛрдХрд╛рд╣рд░реВ" }, point: 8 },
],
Vulnerability: [
  { text: { English: "Low-Income Areas", Nepali: "рдЖрдп рдХрдо рднрдПрдХрд╛ рдХреНрд╖реЗрддреНрд░рд╣рд░реВ" }, point: 7 },
  { text: { English: "Informal Settlements", Nepali: "рдЕрдиреМрдкрдЪрд╛рд░рд┐рдХ рдмрд╕реНрддреАрд╣рд░реВ" }, point: 8 },
  { text: { English: "No Insurance", Nepali: "рдмреАрдорд╛ рдирд╣реБрдиреБ" }, point: 9 },
  { text: { English: "Elderly Population", Nepali: "рд╡реГрджреНрдзрд╣рд░реБрдХреЛ рдЬрдирд╕рдВрдЦреНрдпрд╛" }, point: 10 },
  { text: { English: "Children in School", Nepali: "рд╕реНрдХреВрд▓реЗ рд╡рд┐рджреНрдпрд╛рд░реНрдереАрд╣рд░реВ" }, point: 9 },
  { text: { English: "Disabled People", Nepali: "рдЕрдкрд╛рдЩреНрдЧрддрд╛ рднрдПрдХрд╛ рд╡реНрдпрдХреНрддрд┐рд╣рд░реВ" }, point: 10 },
  { text: { English: "Poor Infrastructure", Nepali: "рдХрдордЬреЛрд░ рдкреВрд░реНрд╡рд╛рдзрд╛рд░" }, point: 8 },
  { text: { English: "Dense Urban Areas", Nepali: "рдШрдирд╛ рд╢рд╣рд░реА рдХреНрд╖реЗрддреНрд░рд╣рд░реВ" }, point: 7 },
  { text: { English: "Lack of Evacuation Routes", Nepali: "рдирд┐рдХрд╛рд╕ рдорд╛рд░реНрдЧрд╣рд░реВрдХреЛ рдЕрднрд╛рд╡" }, point: 9 },
  { text: { English: "Unprotected Farmland", Nepali: "рдЕрд╕реБрд░рдХреНрд╖рд┐рдд рдЦреЗрддрдмрд╛рд░реА" }, point: 6 },
  { text: { English: "Single-Story Homes", Nepali: "рдПрдХ рддрд▓реНрд▓рд╛рдХреЛ рдШрд░рд╣рд░реВ" }, point: 8 },
  { text: { English: "Overcrowded Shelters", Nepali: "рдЕрддрд┐ рднреАрдбрднрд╛рдб рдЖрд╢реНрд░рдпрд╕реНрдерд▓рд╣рд░реВ" }, point: 7 },
  { text: { English: "Limited Healthcare Access", Nepali: "рд╕реАрдорд┐рдд рд╕реНрд╡рд╛рд╕реНрдереНрдп рд╕реЗрд╡рд╛рдХреЛ рдкрд╣реБрдБрдЪ" }, point: 9 },
  { text: { English: "Unstable Riverbanks", Nepali: "рдЕрд╕реНрдерд┐рд░ рдирджреА рдХрд┐рдирд╛рд░рд╣рд░реВ" }, point: 8 },
  { text: { English: "Lack of Early Warning", Nepali: "рдкреВрд░реНрд╡ рд╕реВрдЪрдирд╛рдХреЛ рдЕрднрд╛рд╡" }, point: 10 },
  { text: { English: "High Population Density", Nepali: "рдЙрдЪреНрдЪ рдЬрдирдШрдирддреНрд╡" }, point: 8 },
  { text: { English: "Poor Communication Systems", Nepali: "рдХрдордЬреЛрд░ рд╕рдВрдЪрд╛рд░ рдкреНрд░рдгрд╛рд▓реАрд╣рд░реВ" }, point: 7 },
  { text: { English: "Dependent Populations", Nepali: "рдирд┐рд░реНрднрд░ рдЬрдирд╕рдВрдЦреНрдпрд╛" }, point: 9 },
  { text: { English: "Inadequate Drainage", Nepali: "рдЕрдкрд░реНрдпрд╛рдкреНрдд рдирд┐рдХрд╛рд╕" }, point: 8 },
  { text: { English: "Unreinforced Buildings", Nepali: "рдЕрдкреНрд░рдмрд▓рд┐рдд рднрд╡рдирд╣рд░реВ" }, point: 9 },
],
    Capacity: [
  { text: { English: "Boats", Nepali: "рдбреБрдЩреНрдЧрд╛рд╣рд░реВ" }, point: 10 },
  { text: { English: "First Aid Kits", Nepali: "рдкреНрд░рд╛рдердорд┐рдХ рдЙрдкрдЪрд╛рд░ рд╕рд╛рдорд╛рдЧреНрд░реА" }, point: 7 },
  { text: { English: "Life Jackets", Nepali: "рд▓рд╛рдЗрдл рдЬреНрдпрд╛рдХреЗрдЯ" }, point: 10 },
  { text: { English: "Rescue Teams", Nepali: "рдЙрджреНрдзрд╛рд░ рдЯреЛрд▓реА" }, point: 10 },
  { text: { English: "Food Stockpiles", Nepali: "рдЦрд╛рджреНрдп рднрдгреНрдбрд╛рд░" }, point: 7 },
  { text: { English: "Rescue Drills", Nepali: "рдЙрджреНрдзрд╛рд░ рдЕрднреНрдпрд╛рд╕" }, point: 6 },
  { text: { English: "Emergency Shelters", Nepali: "рдЖрдХрд╕реНрдорд┐рдХ рдЖрд╢реНрд░рдпрд╕реНрдерд▓" }, point: 9 },
  { text: { English: "Water Purification Units", Nepali: "рдкрд╛рдиреА рд╢реБрджреНрдзреАрдХрд░рдг рдкреНрд░рдгрд╛рд▓реА" }, point: 8 },
  { text: { English: "Mobile Medical Units", Nepali: "рдЪрд┐рдХрд┐рддреНрд╕рд╛ рд╕реЗрд╡рд╛" }, point: 9 },
  { text: { English: "Communication Radios", Nepali: "рд╕рдВрдЪрд╛рд░ рдпрдиреНрддреНрд░" }, point: 7 },
  { text: { English: "Sandbags", Nepali: "рдмрд╛рд▓реБрд╡рд╛рдХрд╛ рдмреЛрд░рд╛" }, point: 6 },
  { text: { English: "Backup Generators", Nepali: "рд╡реИрдХрд▓реНрдкрд┐рдХ рдЬреЗрдиреЗрд░реЗрдЯрд░" }, point: 8 },
  { text: { English: "Water Pumps", Nepali: "рдкрд╛рдиреАрдХреЛ рдкрдореНрдк" }, point: 7 },
  { text: { English: "Community Volunteers", Nepali: "рд╕рд╛рдореБрджрд╛рдпрд┐рдХ рд╕реНрд╡рдпрдВрд╕реЗрд╡рдХрд╣рд░реВ" }, point: 8 },
  { text: { English: "Emergency Vehicles", Nepali: "рдЖрдХрд╕реНрдорд┐рдХ рд╕рд╡рд╛рд░реА рд╕рд╛рдзрдирд╣рд░реВ" }, point: 9 },
  { text: { English: "Temporary Bridges", Nepali: "рдЕрд╕реНрдерд╛рдпреА рдкреБрд▓рд╣рд░реВ" }, point: 7 },
  { text: { English: "Warning Sirens", Nepali: "рдЪреЗрддрд╛рд╡рдиреА рд╕рд╛рдЗрд░рдирд╣рд░реВ" }, point: 8 },
  { text: { English: "Evacuation Maps", Nepali: "рдирд┐рдХрд╛рд╕ рдирдХреНрд╢рд╛рд╣рд░реВ" }, point: 7 },
  { text: { English: "Trained Medics", Nepali: "рдкреНрд░рд╢рд┐рдХреНрд╖рд┐рдд рд╕реНрд╡рд╛рд╕реНрдереНрдпрдХрд░реНрдореАрд╣рд░реВ" }, point: 9 },
  { text: { English: "Relief Supply Kits", Nepali: "рд░рд╛рд╣рдд рдЖрдкреВрд░реНрддрд┐ рдХрд┐рдЯрд╣рд░реВ" }, point: 6 },
],
Preparedness: [
  { text: { English: "Evacuation Plans", Nepali: "рдирд┐рдХрд╛рд╕ рдпреЛрдЬрдирд╛рд╣рд░реВ" }, point: 10 },
  { text: { English: "Mock Drills", Nepali: "рдордХ рдбреНрд░рд┐рд▓рд╣рд░реВ" }, point: 10 },
  { text: { English: "Community Groups", Nepali: "рд╕рд╛рдореБрджрд╛рдпрд┐рдХ рд╕рдореВрд╣рд╣рд░реВ" }, point: 9 },
  { text: { English: "Flood Awareness", Nepali: "рдмрд╛рдвреА рдЬрд╛рдЧрд░реВрдХрддрд╛" }, point: 10 },
  { text: { English: "School Education", Nepali: "рд╕реНрдХреВрд▓ рд╢рд┐рдХреНрд╖рд╛" }, point: 9 },
  { text: { English: "SMS Alerts", Nepali: "рдПрд╕рдПрдордПрд╕ рдЪреЗрддрд╛рд╡рдиреАрд╣рд░реВ" }, point: 7 },
  { text: { English: "Emergency Kits", Nepali: "рдЖрдХрд╕реНрдорд┐рдХ рдХрд┐рдЯрд╣рд░реВ" }, point: 8 },
  { text: { English: "Flood Mapping", Nepali: "рдмрд╛рдвреА рдирдХреНрд╢рд╛рдВрдХрди" }, point: 9 },
  { text: { English: "Local Training", Nepali: "рд╕реНрдерд╛рдиреАрдп рддрд╛рд▓рд┐рдо" }, point: 8 },
  { text: { English: "Warning Systems", Nepali: "рдЪреЗрддрд╛рд╡рдиреА рдкреНрд░рдгрд╛рд▓реАрд╣рд░реВ" }, point: 10 },
  { text: { English: "Safe Routes", Nepali: "рд╕реБрд░рдХреНрд╖рд┐рдд рдорд╛рд░реНрдЧрд╣рд░реВ" }, point: 9 },
  { text: { English: "Public Workshops", Nepali: "рд╕рд╛рд░реНрд╡рдЬрдирд┐рдХ рдХрд╛рд░реНрдпрд╢рд╛рд▓рд╛рд╣рд░реВ" }, point: 7 },
  { text: { English: "Volunteer Networks", Nepali: "рд╕реНрд╡рдпрдВрд╕реЗрд╡рдХ рдиреЗрдЯрд╡рд░реНрдХрд╣рд░реВ" }, point: 8 },
  { text: { English: "Flood Drills", Nepali: "рдмрд╛рдвреА рдЕрднреНрдпрд╛рд╕рд╣рд░реВ" }, point: 8 },
  { text: { English: "Risk Assessments", Nepali: "рдЬреЛрдЦрд┐рдо рдореВрд▓реНрдпрд╛рдВрдХрди" }, point: 9 },
  { text: { English: "Community Sirens", Nepali: "рд╕рд╛рдореБрджрд╛рдпрд┐рдХ рд╕рд╛рдЗрд░рдирд╣рд░реВ" }, point: 7 },
  { text: { English: "Emergency Contacts", Nepali: "рдЖрдХрд╕реНрдорд┐рдХ рд╕рдореНрдкрд░реНрдХрд╣рд░реВ" }, point: 6 },
  { text: { English: "Flood Shelters", Nepali: "рдмрд╛рдвреА рдЖрд╢реНрд░рдпрд╕реНрдерд▓рд╣рд░реВ" }, point: 9 },
  { text: { English: "Weather Monitoring", Nepali: "рдореМрд╕рдо рдирд┐рдЧрд░рд╛рдиреА" }, point: 8 },
  { text: { English: "Response Plans", Nepali: "рдкреНрд░рддрд┐рдХреНрд░рд┐рдпрд╛ рдпреЛрдЬрдирд╛рд╣рд░реВ" }, point: 9 },
],
Response: [
  { text: { English: "Immediate Rescue", Nepali: "рддрддреНрдХрд╛рд▓ рдЙрджреНрдзрд╛рд░" }, point: 10 },
  { text: { English: "Temporary Shelter", Nepali: "рдЕрд╕реНрдерд╛рдпреА рдЖрд╢реНрд░рдп" }, point: 9 },
  { text: { English: "Medical Aid", Nepali: "рдЪрд┐рдХрд┐рддреНрд╕рд╛ рд╕рд╣рд╛рдпрддрд╛" }, point: 9 },
  { text: { English: "Food Distribution", Nepali: "рдЦрд╛рджреНрдп рд╡рд┐рддрд░рдг" }, point: 9 },
  { text: { English: "Water Supply", Nepali: "рдкрд╛рдиреА рдЖрдкреВрд░реНрддрд┐" }, point: 8 },
  { text: { English: "Family Tracing", Nepali: "рдкрд░рд┐рд╡рд╛рд░ рдЦреЛрдЬреА" }, point: 6 },
  { text: { English: "Emergency Transport", Nepali: "рдЖрдХрд╕реНрдорд┐рдХ рдкрд░рд┐рд╡рд╣рди" }, point: 8 },
  { text: { English: "Communication Systems", Nepali: "рд╕рдВрдЪрд╛рд░ рдкреНрд░рдгрд╛рд▓реАрд╣рд░реВ" }, point: 7 },
  { text: { English: "Relief Camps", Nepali: "рд░рд╛рд╣рдд рд╢рд┐рд╡рд┐рд░рд╣рд░реВ" }, point: 9 },
  { text: { English: "Search and Rescue", Nepali: "рдЦреЛрдЬ рд░ рдЙрджреНрдзрд╛рд░" }, point: 10 },
  { text: { English: "Water Purification", Nepali: "рдкрд╛рдиреА рд╢реБрджреНрдзреАрдХрд░рдг" }, point: 8 },
  { text: { English: "Power Restoration", Nepali: "рд╡рд┐рджреНрдпреБрддреН рдкреБрдирд░реНрд╕реНрдерд╛рдкрдирд╛" }, point: 7 },
  { text: { English: "Debris Removal", Nepali: "рдлреЛрд╣реЛрд░ рд╣рдЯрд╛рдЙрдиреЗ" }, point: 6 },
  { text: { English: "Volunteer Coordination", Nepali: "рд╕реНрд╡рдпрдВрд╕реЗрд╡рдХ рд╕рдордиреНрд╡рдп" }, point: 7 },
  { text: { English: "Mobile Clinics", Nepali: "рдореЛрдмрд╛рдЗрд▓ рдХреНрд▓рд┐рдирд┐рдХрд╣рд░реВ" }, point: 9 },
  { text: { English: "Psychological Support", Nepali: "рдордиреЛрд╡реИрдЬреНрдЮрд╛рдирд┐рдХ рд╕рдорд░реНрдерди" }, point: 6 },
  { text: { English: "Road Clearing", Nepali: "рд╕рдбрдХ рд╕рдлрд╛рдЗ" }, point: 7 },
  { text: { English: "Sanitation Services", Nepali: "рд╕рд░рд╕рдлрд╛рдЗ рд╕реЗрд╡рд╛рд╣рд░реВ" }, point: 8 },
  { text: { English: "Emergency Broadcasts", Nepali: "рдЖрдХрд╕реНрдорд┐рдХ рдкреНрд░рд╕рд╛рд░рдгрд╣рд░реВ" }, point: 7 },
  { text: { English: "Relief Supplies", Nepali: "рд░рд╛рд╣рдд рд╕рд╛рдордЧреНрд░реАрд╣рд░реВ" }, point: 8 },
],
Recovery: [
  { text: { English: "Rebuild Homes", Nepali: "рдШрд░рд╣рд░реВ рдкреБрдирд░реНрдирд┐рд░реНрдорд╛рдг" }, point: 9 },
  { text: { English: "Restore Schools", Nepali: "рд╕реНрдХреВрд▓рд╣рд░реВ рдкреБрдирд░реНрд╕реНрдерд╛рдкрдирд╛" }, point: 7 },
  { text: { English: "Compensation", Nepali: "рдХреНрд╖рддрд┐рдкреВрд░реНрддрд┐" }, point: 8 },
  { text: { English: "Drainage Fix", Nepali: "рдирд┐рдХрд╛рд╕ рдорд░реНрдордд" }, point: 7 },
  { text: { English: "Livelihood Support", Nepali: "рдЬреАрд╡рд┐рдХреЛрдкрд╛рд░реНрдЬрди рд╕рдорд░реНрдерди" }, point: 8 },
  { text: { English: "Cash for Work", Nepali: "рдХрд╛рдордХрд╛ рд▓рд╛рдЧрд┐ рдирдЧрдж" }, point: 6 },
  { text: { English: "Infrastructure Repair", Nepali: "рдкреВрд░реНрд╡рд╛рдзрд╛рд░ рдорд░реНрдордд" }, point: 9 },
  { text: { English: "Health Services", Nepali: "рд╕реНрд╡рд╛рд╕реНрдереНрдп рд╕реЗрд╡рд╛рд╣рд░реВ" }, point: 8 },
  { text: { English: "Agricultural Recovery", Nepali: "рдХреГрд╖рд┐ рдкреБрдирд░реНрдкреНрд░рд╛рдкреНрддрд┐" }, point: 7 },
  { text: { English: "Water System Repair", Nepali: "рдкрд╛рдиреА рдкреНрд░рдгрд╛рд▓реА рдорд░реНрдордд" }, point: 8 },
  { text: { English: "Community Rebuilding", Nepali: "рд╕рд╛рдореБрджрд╛рдпрд┐рдХ рдкреБрдирд░реНрдирд┐рд░реНрдорд╛рдг" }, point: 9 },
  { text: { English: "Mental Health Support", Nepali: "рдорд╛рдирд╕рд┐рдХ рд╕реНрд╡рд╛рд╕реНрдереНрдп рд╕рдорд░реНрдерди" }, point: 6 },
  { text: { English: "Road Reconstruction", Nepali: "рд╕рдбрдХ рдкреБрдирд░реНрдирд┐рд░реНрдорд╛рдг" }, point: 8 },
  { text: { English: "Economic Aid", Nepali: "рдЖрд░реНрдерд┐рдХ рд╕рд╣рд╛рдпрддрд╛" }, point: 7 },
  { text: { English: "School Supplies", Nepali: "рд╕реНрдХреВрд▓ рд╕рд╛рдордЧреНрд░реАрд╣рд░реВ" }, point: 6 },
  { text: { English: "Flood Defense Upgrades", Nepali: "рдмрд╛рдвреА рд░рдХреНрд╖рд╛ рд╕реБрдзрд╛рд░рд╣рд░реВ" }, point: 9 },
  { text: { English: "Business Recovery Grants", Nepali: "рд╡реНрдпрд╡рд╕рд╛рдп рдкреБрдирд░реНрдкреНрд░рд╛рдкреНрддрд┐ рдЕрдиреБрджрд╛рди" }, point: 7 },
  { text: { English: "Sanitation Restoration", Nepali: "рд╕рд░рд╕рдлрд╛рдЗ рдкреБрдирд░реНрд╕реНрдерд╛рдкрдирд╛" }, point: 8 },
  { text: { English: "Livestock Replacement", Nepali: "рдкрд╢реБрдзрди рдкреНрд░рддрд┐рд╕реНрдерд╛рдкрди" }, point: 6 },
  { text: { English: "Public Awareness", Nepali: "рд╕рд╛рд░реНрд╡рдЬрдирд┐рдХ рдЬрд╛рдЧрд░реВрдХрддрд╛" }, point: 7 },
]
  },
  Heatwave: {
    Mitigation: [
  { text: { English: "Install Green Roofs", Nepali: "рд╣рд░рд┐рдд рдЫрддрд╣рд░реВ рд╕реНрдерд╛рдкрдирд╛ рдЧрд░реНрдиреБрд╣реЛрд╕реН" }, point: 8 },
  { text: { English: "Plant Shade Trees", Nepali: "рдЫрд╛рдпрд╛рджрд╛рд░ рд░реВрдЦрд╣рд░реВ рд░реЛрдкреНрдиреБрд╣реЛрд╕реН" }, point: 7 },
  { text: { English: "Use Reflective Pavements", Nepali: "рдкреНрд░рддрд┐рдмрд┐рдореНрдмрд┐рдд рд╕рдбрдХрд╣рд░реВ рдкреНрд░рдпреЛрдЧ рдЧрд░реНрдиреБрд╣реЛрд╕реН" }, point: 9 },
  { text: { English: "Improve Building Insulation", Nepali: "рднрд╡рди рдЗрдиреНрд╕реБрд▓реЗрд╢рди рд╕реБрдзрд╛рд░ рдЧрд░реНрдиреБрд╣реЛрд╕реН" }, point: 8 },
  { text: { English: "Promote Cool Roofs", Nepali: "рдЪрд┐рд╕реЛ рдЫрддрд╣рд░реВ рдкреНрд░реЛрддреНрд╕рд╛рд╣рди рдЧрд░реНрдиреБрд╣реЛрд╕реН" }, point: 7 },
  { text: { English: "Create Urban Green Spaces", Nepali: "рд╢рд╣рд░реА рд╣рд░рд┐рдд рд╕реНрдерд╛рдирд╣рд░реВ рд╕рд┐рд░реНрдЬрдирд╛ рдЧрд░реНрдиреБрд╣реЛрд╕реН" }, point: 6 },
  { text: { English: "Install Solar Shades", Nepali: "рд╕реМрд░реНрдп рдЫрд╛рдпрд╛рд╣рд░реВ рд╕реНрдерд╛рдкрдирд╛ рдЧрд░реНрдиреБрд╣реЛрд╕реН" }, point: 7 },
  { text: { English: "Use Energy-Efficient Cooling", Nepali: "рдКрд░реНрдЬрд╛-рдХреБрд╢рд▓ рд╢реАрддрд▓рди рдкреНрд░рдпреЛрдЧ рдЧрд░реНрдиреБрд╣реЛрд╕реН" }, point: 8 },
  { text: { English: "Increase Ventilation Systems", Nepali: "рд╣рд╛рд╡рд╛ рд╕рдВрдЪрд╛рд░ рдкреНрд░рдгрд╛рд▓реАрд╣рд░реВ рдмрдврд╛рдЙрдиреБрд╣реЛрд╕реН" }, point: 7 },
  { text: { English: "Promote Light-Colored Buildings", Nepali: "рд╣рд▓реНрдХрд╛ рд░рдЩрдХрд╛ рднрд╡рдирд╣рд░реВ рдкреНрд░реЛрддреНрд╕рд╛рд╣рди рдЧрд░реНрдиреБрд╣реЛрд╕реН" }, point: 6 },
  { text: { English: "Urban Heat Mapping", Nepali: "рд╢рд╣рд░реА рддрд╛рдк рдирдХреНрд╢рд╛рдВрдХрди" }, point: 8 },
  { text: { English: "Install Mist Systems", Nepali: "рдорд┐рд╕реНрдЯ рдкреНрд░рдгрд╛рд▓реАрд╣рд░реВ рд╕реНрдерд╛рдкрдирд╛ рдЧрд░реНрдиреБрд╣реЛрд╕реН" }, point: 6 },
  { text: { English: "Enhance Public Fountains", Nepali: "рд╕рд╛рд░реНрд╡рдЬрдирд┐рдХ рдлреЛрд╣рд░рд╛рд╣рд░реВ рд╕реБрдзрд╛рд░ рдЧрд░реНрдиреБрд╣реЛрд╕реН" }, point: 5 },
  { text: { English: "Reflective Window Films", Nepali: "рдкреНрд░рддрд┐рдмрд┐рдореНрдмрд┐рдд рдЭреНрдпрд╛рд▓ рдлрд┐рд▓реНрдорд╣рд░реВ" }, point: 7 },
  { text: { English: "Promote Green Walls", Nepali: "рд╣рд░рд┐рдд рдкрд░реНрдЦрд╛рд▓рд╣рд░реВ рдкреНрд░реЛрддреНрд╕рд╛рд╣рди рдЧрд░реНрдиреБрд╣реЛрд╕реН" }, point: 6 },
  { text: { English: "Heat-Resistant Materials", Nepali: "рддрд╛рдк рдкреНрд░рддрд┐рд░реЛрдзреА рд╕рд╛рдордЧреНрд░реАрд╣рд░реВ" }, point: 8 },
  { text: { English: "Shade Structures", Nepali: "рдЫрд╛рдпрд╛рджрд╛рд░ рд╕рдВрд░рдЪрдирд╛рд╣рд░реВ" }, point: 7 },
  { text: { English: "Cool Pavement Coatings", Nepali: "рдЪрд┐рд╕реЛ рд╕рдбрдХ рдХреЛрдЯрд┐рдВрдЧрд╣рд░реВ" }, point: 8 },
  { text: { English: "Public Water Stations", Nepali: "рд╕рд╛рд░реНрд╡рдЬрдирд┐рдХ рдкрд╛рдиреА рд╕реНрдЯреЗрд╢рдирд╣рд░реВ" }, point: 6 },
  { text: { English: "Urban Forestry Programs", Nepali: "рд╢рд╣рд░реА рд╡рди рдХрд╛рд░реНрдпрдХреНрд░рдорд╣рд░реВ" }, point: 7 },
],
Vulnerability: [
  { text: { English: "Elderly Residents", Nepali: "рд╡реГрджреНрдз рдмрд╛рд╕рд┐рдиреНрджрд╛рд╣рд░реВ" }, point: 10 },
  { text: { English: "Low-Income Communities", Nepali: "рдХрдо рдЖрдп рднрдПрдХрд╛ рд╕рдореБрджрд╛рдпрд╣рд░реВ" }, point: 8 },
  { text: { English: "Children", Nepali: "рдмрд╛рд▓рдмрд╛рд▓рд┐рдХрд╛рд╣рд░реВ" }, point: 9 },
  { text: { English: "Homeless Population", Nepali: "рдШрд░рдмрд╛рд░рд╡рд┐рд╣реАрди рдЬрдирд╕рдВрдЦреНрдпрд╛" }, point: 9 },
  { text: { English: "Poor Housing Conditions", Nepali: "рдХрдордЬреЛрд░ рдЖрд╡рд╛рд╕ рдЕрд╡рд╕реНрдерд╛рд╣рд░реВ" }, point: 8 },
  { text: { English: "Limited Cooling Access", Nepali: "рд╕реАрдорд┐рдд рд╢реАрддрд▓рди рдкрд╣реБрдБрдЪ" }, point: 9 },
  { text: { English: "Outdoor Workers", Nepali: "рдмрд╛рд╣рд┐рд░реА рдХрд╛рдорджрд╛рд░рд╣рд░реВ" }, point: 8 },
  { text: { English: "Chronic Illness", Nepali: "рджреАрд░реНрдШрдХрд╛рд▓реАрди рд░реЛрдЧрд╣рд░реВ" }, point: 10 },
  { text: { English: "Dense Urban Areas", Nepali: "рдШрдирд╛ рд╢рд╣рд░реА рдХреНрд╖реЗрддреНрд░рд╣рд░реВ" }, point: 7 },
  { text: { English: "Lack of Green Spaces", Nepali: "рд╣рд░рд┐рдд рд╕реНрдерд╛рдирд╣рд░реВрдХреЛ рдЕрднрд╛рд╡" }, point: 7 },
  { text: { English: "No Air Conditioning", Nepali: "рд╡рд╛рддрд╛рдиреБрдХреВрд▓рди рдирднрдПрдХреЛ" }, point: 9 },
  { text: { English: "High-Rise Buildings", Nepali: "рдЙрдЪреНрдЪ рднрд╡рдирд╣рд░реВ" }, point: 7 },
  { text: { English: "Limited Water Access", Nepali: "рд╕реАрдорд┐рдд рдкрд╛рдиреА рдкрд╣реБрдБрдЪ" }, point: 8 },
  { text: { English: "Poor Ventilation", Nepali: "рдХрдордЬреЛрд░ рд╣рд╛рд╡рд╛ рд╕рдВрдЪрд╛рд░" }, point: 8 },
  { text: { English: "Disabled Individuals", Nepali: "рдЕрдкрд╛рдЩреНрдЧ рд╡реНрдпрдХреНрддрд┐рд╣рд░реВ" }, point: 9 },
  { text: { English: "Urban Heat Islands", Nepali: "рд╢рд╣рд░реА рддрд╛рдк рдЯрд╛рдкреБрд╣рд░реВ" }, point: 7 },
  { text: { English: "Lack of Shade", Nepali: "рдЫрд╛рдпрд╛рдХреЛ рдЕрднрд╛рд╡" }, point: 6 },
  { text: { English: "Overcrowded Housing", Nepali: "рдЕрддрд┐ рднреАрдбрднрд╛рдб рдЖрд╡рд╛рд╕" }, point: 7 },
  { text: { English: "Insufficient Healthcare", Nepali: "рдЕрдкрд░реНрдпрд╛рдкреНрдд рд╕реНрд╡рд╛рд╕реНрдереНрдп рд╕реЗрд╡рд╛" }, point: 8 },
  { text: { English: "No Early Warning", Nepali: "рдкреНрд░рд╛рд░рдореНрднрд┐рдХ рдЪреЗрддрд╛рд╡рдиреАрдХреЛ рдЕрднрд╛рд╡" }, point: 9 },
],
Capacity: [
  { text: { English: "Cooling Centers", Nepali: "рд╢реАрддрд▓рддрд╛ рдХреЗрдиреНрджреНрд░" }, point: 10 },
  { text: { English: "Portable Fans", Nepali: "рдкреЛрд░реНрдЯреЗрдмрд▓ рдкрдВрдЦрд╛" }, point: 7 },
  { text: { English: "Water Stations", Nepali: "рдкрд╛рдиреА рд╕реНрдЯреЗрд╢рдирд╣рд░реВ" }, point: 8 },
  { text: { English: "Medical Teams", Nepali: "рдЪрд┐рдХрд┐рддреНрд╕рд╛ рдЯреЛрд▓реАрд╣рд░реВ" }, point: 9 },
  { text: { English: "Emergency Kits", Nepali: "рдЖрдХрд╕реНрдорд┐рдХ рдХрд┐рдЯрд╣рд░реВ" }, point: 7 },
  { text: { English: "Shade Tents", Nepali: "рдЫрд╛рдпрд╛рджрд╛рд░ рдЯреЗрдиреНрдЯрд╣рд░реВ" }, point: 6 },
  { text: { English: "Hydration Packs", Nepali: "рд╣рд╛рдЗрдбреНрд░реЗрд╢рди рдкреНрдпрд╛рдХрд╣рд░реВ" }, point: 7 },
  { text: { English: "Mobile Cooling Units", Nepali: "рдореЛрдмрд╛рдЗрд▓ рд╢реАрддрд▓рди рдПрдХрд╛рдЗрд╣рд░реВ" }, point: 8 },
  { text: { English: "Community Volunteers", Nepali: "рд╕рд╛рдореБрджрд╛рдпрд┐рдХ рд╕реНрд╡рдпрдВрд╕реЗрд╡рдХрд╣рд░реВ" }, point: 8 },
  { text: { English: "Power Generators", Nepali: "рд╢рдХреНрддрд┐ рдЬреЗрдиреЗрд░реЗрдЯрд░рд╣рд░реВ" }, point: 7 },
  { text: { English: "Cooling Vests", Nepali: "рд╢реАрддрд▓рди рднреЗрд╕реНрдЯрд╣рд░реВ" }, point: 6 },
  { text: { English: "Public Transport AC", Nepali: "рд╕рд╛рд░реНрд╡рдЬрдирд┐рдХ рдпрд╛рддрд╛рдпрд╛рдд рд╡рд╛рддрд╛рдиреБрдХреВрд▓рди" }, point: 8 },
  { text: { English: "Heat Alert Systems", Nepali: "рддрд╛рдк рдЪреЗрддрд╛рд╡рдиреА рдкреНрд░рдгрд╛рд▓реАрд╣рд░реВ" }, point: 9 },
  { text: { English: "First Aid Supplies", Nepali: "рдкреНрд░рд╛рдердорд┐рдХ рдЙрдкрдЪрд╛рд░ рд╕рд╛рдордЧреНрд░реАрд╣рд░реВ" }, point: 7 },
  { text: { English: "Emergency Vehicles", Nepali: "рдЖрдХрд╕реНрдорд┐рдХ рд╕рд╡рд╛рд░реА рд╕рд╛рдзрдирд╣рд░реВ" }, point: 8 },
  { text: { English: "Cooling Shelters", Nepali: "рд╢реАрддрд▓рди рдЖрд╢реНрд░рдпрд╕реНрдерд▓рд╣рд░реВ" }, point: 9 },
  { text: { English: "Communication Radios", Nepali: "рд╕рдВрдЪрд╛рд░ рд░реЗрдбрд┐рдпреЛрд╣рд░реВ" }, point: 7 },
  { text: { English: "Water Tankers", Nepali: "рдкрд╛рдиреА рдЯреНрдпрд╛рдВрдХрд░рд╣рд░реВ" }, point: 8 },
  { text: { English: "Trained Responders", Nepali: "рдкреНрд░рд╢рд┐рдХреНрд╖рд┐рдд рдкреНрд░рддрд┐рдХреНрд░рд┐рдпрд╛рдХрд░реНрддрд╛рд╣рд░реВ" }, point: 9 },
  { text: { English: "Cooling Mats", Nepali: "рд╢реАрддрд▓рди рдореНрдпрд╛рдЯрд╣рд░реВ" }, point: 6 },
],
Preparedness: [
  { text: { English: "Heatwave Action Plans", Nepali: "рдЧрд░реНрдореАрдХреЛ рд▓рд╣рд░ рдХрд╛рд░реНрдп рдпреЛрдЬрдирд╛рд╣рд░реВ" }, point: 10 },
  { text: { English: "Public Awareness Campaigns", Nepali: "рд╕рд╛рд░реНрд╡рдЬрдирд┐рдХ рдЬрд╛рдЧрд░реВрдХрддрд╛ рдЕрднрд┐рдпрд╛рдирд╣рд░реВ" }, point: 9 },
  { text: { English: "Heatwave Drills", Nepali: "рдЧрд░реНрдореАрдХреЛ рд▓рд╣рд░ рдЕрднреНрдпрд╛рд╕рд╣рд░реВ" }, point: 8 },
  { text: { English: "Community Training", Nepali: "рд╕рд╛рдореБрджрд╛рдпрд┐рдХ рддрд╛рд▓рд┐рдо" }, point: 8 },
  { text: { English: "Early Warning Systems", Nepali: "рдкреНрд░рд╛рд░рдореНрднрд┐рдХ рдЪреЗрддрд╛рд╡рдиреА рдкреНрд░рдгрд╛рд▓реАрд╣рд░реВ" }, point: 10 },
  { text: { English: "School Education Programs", Nepali: "рд╕реНрдХреВрд▓ рд╢рд┐рдХреНрд╖рд╛ рдХрд╛рд░реНрдпрдХреНрд░рдорд╣рд░реВ" }, point: 7 },
  { text: { English: "Hydration Education", Nepali: "рд╣рд╛рдЗрдбреНрд░реЗрд╢рди рд╢рд┐рдХреНрд╖рд╛" }, point: 7 },
  { text: { English: "Cooling Center Maps", Nepali: "рд╢реАрддрд▓рди рдХреЗрдиреНрджреНрд░ рдирдХреНрд╢рд╛рд╣рд░реВ" }, point: 8 },
  { text: { English: "Volunteer Training", Nepali: "рд╕реНрд╡рдпрдВрд╕реЗрд╡рдХ рддрд╛рд▓рд┐рдо" }, point: 7 },
  { text: { English: "Heat Risk Assessments", Nepali: "рддрд╛рдк рдЬреЛрдЦрд┐рдо рдореВрд▓реНрдпрд╛рдВрдХрди" }, point: 9 },
  { text: { English: "Emergency Contact Lists", Nepali: "рдЖрдХрд╕реНрдорд┐рдХ рд╕рдореНрдкрд░реНрдХ рд╕реВрдЪреАрд╣рд░реВ" }, point: 6 },
  { text: { English: "Weather Monitoring", Nepali: "рдореМрд╕рдо рдирд┐рдЧрд░рд╛рдиреА" }, point: 8 },
  { text: { English: "Public Workshops", Nepali: "рд╕рд╛рд░реНрд╡рдЬрдирд┐рдХ рдХрд╛рд░реНрдпрд╢рд╛рд▓рд╛рд╣рд░реВ" }, point: 7 },
  { text: { English: "Cooling Shelter Plans", Nepali: "рд╢реАрддрд▓рди рдЖрд╢реНрд░рдп рдпреЛрдЬрдирд╛рд╣рд░реВ" }, point: 9 },
  { text: { English: "SMS Alert Systems", Nepali: "рдПрд╕рдПрдордПрд╕ рдЪреЗрддрд╛рд╡рдиреА рдкреНрд░рдгрд╛рд▓реАрд╣рд░реВ" }, point: 8 },
  { text: { English: "Community Response Teams", Nepali: "рд╕рд╛рдореБрджрд╛рдпрд┐рдХ рдкреНрд░рддрд┐рдХреНрд░рд┐рдпрд╛ рдЯреЛрд▓реАрд╣рд░реВ" }, point: 8 },
  { text: { English: "Heat Safety Guidelines", Nepali: "рддрд╛рдк рд╕реБрд░рдХреНрд╖рд╛ рджрд┐рд╢рд╛рдирд┐рд░реНрджреЗрд╢рд╣рд░реВ" }, point: 7 },
  { text: { English: "Urban Heat Mapping", Nepali: "рд╢рд╣рд░реА рддрд╛рдк рдирдХреНрд╢рд╛рдВрдХрди" }, point: 8 },
  { text: { English: "Emergency Supply Kits", Nepali: "рдЖрдХрд╕реНрдорд┐рдХ рдЖрдкреВрд░реНрддрд┐ рдХрд┐рдЯрд╣рд░реВ" }, point: 7 },
  { text: { English: "Local Heatwave Protocols", Nepali: "рд╕реНрдерд╛рдиреАрдп рдЧрд░реНрдореАрдХреЛ рд▓рд╣рд░ рдкреНрд░реЛрдЯреЛрдХрд▓рд╣рд░реВ" }, point: 9 },
],
Response: [
  { text: { English: "Open Cooling Centers", Nepali: "рд╢реАрддрд▓рди рдХреЗрдиреНрджреНрд░рд╣рд░реВ рдЦреЛрд▓реНрдиреБрд╣реЛрд╕реН" }, point: 10 },
  { text: { English: "Distribute Water", Nepali: "рдкрд╛рдиреА рд╡рд┐рддрд░рдг рдЧрд░реНрдиреБрд╣реЛрд╕реН" }, point: 9 },
  { text: { English: "Medical Assistance", Nepali: "рдЪрд┐рдХрд┐рддреНрд╕рд╛ рд╕рд╣рд╛рдпрддрд╛" }, point: 9 },
  { text: { English: "Emergency Transport", Nepali: "рдЖрдХрд╕реНрдорд┐рдХ рдкрд░рд┐рд╡рд╣рди" }, point: 8 },
  { text: { English: "Fan Distribution", Nepali: "рдкрдВрдЦрд╛ рд╡рд┐рддрд░рдг" }, point: 7 },
  { text: { English: "Mobile Clinics", Nepali: "рдореЛрдмрд╛рдЗрд▓ рдХреНрд▓рд┐рдирд┐рдХрд╣рд░реВ" }, point: 9 },
  { text: { English: "Heatstroke Treatment", Nepali: "рддрд╛рдкрдШрд╛рдд рдЙрдкрдЪрд╛рд░" }, point: 10 },
  { text: { English: "Public Hydration Points", Nepali: "рд╕рд╛рд░реНрд╡рдЬрдирд┐рдХ рд╣рд╛рдЗрдбреНрд░реЗрд╢рди рдмрд┐рдиреНрджреБрд╣рд░реВ" }, point: 8 },
  { text: { English: "Volunteer Deployment", Nepali: "рд╕реНрд╡рдпрдВрд╕реЗрд╡рдХ рдкрд░рд┐рдЪрд╛рд▓рди" }, point: 7 },
  { text: { English: "Emergency Broadcasts", Nepali: "рдЖрдХрд╕реНрдорд┐рдХ рдкреНрд░рд╕рд╛рд░рдгрд╣рд░реВ" }, point: 8 },
  { text: { English: "Shade Provision", Nepali: "рдЫрд╛рдпрд╛ рдкреНрд░рджрд╛рди" }, point: 6 },
  { text: { English: "Power Supply Support", Nepali: "рд╡рд┐рджреНрдпреБрддреН рдЖрдкреВрд░реНрддрд┐ рд╕рдорд░реНрдерди" }, point: 7 },
  { text: { English: "Cooling Shelter Setup", Nepali: "рд╢реАрддрд▓рди рдЖрд╢реНрд░рдп рд╕реНрдерд╛рдкрдирд╛" }, point: 9 },
  { text: { English: "Hydration Kits", Nepali: "рд╣рд╛рдЗрдбреНрд░реЗрд╢рди рдХрд┐рдЯрд╣рд░реВ" }, point: 7 },
  { text: { English: "Community Check-ins", Nepali: "рд╕рд╛рдореБрджрд╛рдпрд┐рдХ рдЬрд╛рдБрдЪрд╣рд░реВ" }, point: 6 },
  { text: { English: "Cooling Device Loans", Nepali: "рд╢реАрддрд▓рди рдЙрдкрдХрд░рдг рдЛрдг" }, point: 7 },
  { text: { English: "Heat Alert Updates", Nepali: "рддрд╛рдк рдЪреЗрддрд╛рд╡рдиреА рдЕрдкрдбреЗрдЯрд╣рд░реВ" }, point: 8 },
  { text: { English: "First Aid Stations", Nepali: "рдкреНрд░рд╛рдердорд┐рдХ рдЙрдкрдЪрд╛рд░ рд╕реНрдЯреЗрд╢рдирд╣рд░реВ" }, point: 8 },
  { text: { English: "Psychological Support", Nepali: "рдордиреЛрд╡реИрдЬреНрдЮрд╛рдирд┐рдХ рд╕рдорд░реНрдерди" }, point: 6 },
  { text: { English: "Water Tanker Deployment", Nepali: "рдкрд╛рдиреА рдЯреНрдпрд╛рдВрдХрд░ рдкрд░рд┐рдЪрд╛рд▓рди" }, point: 8 },
],
Recovery: [
  { text: { English: "Rebuild Cooling Systems", Nepali: "рд╢реАрддрд▓рди рдкреНрд░рдгрд╛рд▓реАрд╣рд░реВ рдкреБрдирд░реНрдирд┐рд░реНрдорд╛рдг" }, point: 9 },
  { text: { English: "Health Services", Nepali: "рд╕реНрд╡рд╛рд╕реНрдереНрдп рд╕реЗрд╡рд╛рд╣рд░реВ" }, point: 8 },
  { text: { English: "Economic Aid", Nepali: "рдЖрд░реНрдерд┐рдХ рд╕рд╣рд╛рдпрддрд╛" }, point: 7 },
  { text: { English: "Mental Health Support", Nepali: "рдорд╛рдирд╕рд┐рдХ рд╕реНрд╡рд╛рд╕реНрдереНрдп рд╕рдорд░реНрдерди" }, point: 6 },
  { text: { English: "Water System Repair", Nepali: "рдкрд╛рдиреА рдкреНрд░рдгрд╛рд▓реА рдорд░реНрдордд" }, point: 8 },
  { text: { English: "Business Recovery Grants", Nepali: "рд╡реНрдпрд╡рд╕рд╛рдп рдкреБрдирд░реНрдкреНрд░рд╛рдкреНрддрд┐ рдЕрдиреБрджрд╛рди" }, point: 7 },
  { text: { English: "Infrastructure Upgrades", Nepali: "рдкреВрд░реНрд╡рд╛рдзрд╛рд░ рд╕реБрдзрд╛рд░рд╣рд░реВ" }, point: 9 },
  { text: { English: "Public Awareness", Nepali: "рд╕рд╛рд░реНрд╡рдЬрдирд┐рдХ рдЬрд╛рдЧрд░реВрдХрддрд╛" }, point: 7 },
  { text: { English: "Shade Structure Repair", Nepali: "рдЫрд╛рдпрд╛рджрд╛рд░ рд╕рдВрд░рдЪрдирд╛ рдорд░реНрдордд" }, point: 6 },
  { text: { English: "Community Rebuilding", Nepali: "рд╕рд╛рдореБрджрд╛рдпрд┐рдХ рдкреБрдирд░реНрдирд┐рд░реНрдорд╛рдг" }, point: 8 },
  { text: { English: "Agricultural Support", Nepali: "рдХреГрд╖рд┐ рд╕рдорд░реНрдерди" }, point: 7 },
  { text: { English: "School Restoration", Nepali: "рд╕реНрдХреВрд▓ рдкреБрдирд░реНрд╕реНрдерд╛рдкрдирд╛" }, point: 7 },
  { text: { English: "Power Grid Repair", Nepali: "рд╡рд┐рджреНрдпреБрддреН рдЧреНрд░рд┐рдб рдорд░реНрдордд" }, point: 8 },
  { text: { English: "Cooling Device Distribution", Nepali: "рд╢реАрддрд▓рди рдЙрдкрдХрд░рдг рд╡рд┐рддрд░рдг" }, point: 6 },
  { text: { English: "Heat-Resistant Materials", Nepali: "рддрд╛рдк рдкреНрд░рддрд┐рд░реЛрдзреА рд╕рд╛рдордЧреНрд░реАрд╣рд░реВ" }, point: 8 },
  { text: { English: "Green Space Restoration", Nepali: "рд╣рд░рд┐рдд рд╕реНрдерд╛рди рдкреБрдирд░реНрд╕реНрдерд╛рдкрдирд╛" }, point: 7 },
  { text: { English: "Workforce Retraining", Nepali: "рдХрд╛рд░реНрдпрдмрд▓ рдкреБрди: рддрд╛рд▓рд┐рдо" }, point: 6 },
  { text: { English: "Sanitation Services", Nepali: "рд╕рд░рд╕рдлрд╛рдЗ рд╕реЗрд╡рд╛рд╣рд░реВ" }, point: 7 },
  { text: { English: "Insurance Compensation", Nepali: "рдмреАрдорд╛ рдХреНрд╖рддрд┐рдкреВрд░реНрддрд┐" }, point: 8 },
  { text: { English: "Urban Heat Mapping", Nepali: "рд╢рд╣рд░реА рддрд╛рдк рдирдХреНрд╢рд╛рдВрдХрди" }, point: 7 },
]
  }
};

const actionDescriptions = {
"Construct Dykes": { English: "Build embankments to prevent floodwater overflow.", Nepali: "рдмрд╛рдвреАрдХреЛ рдкрд╛рдиреА рдмрд╛рд╣рд┐рд░ рдирд┐рд╕реНрдХрдирдмрд╛рдЯ рд░реЛрдХреНрди рддрдЯрдмрдиреНрдз рдирд┐рд░реНрдорд╛рдг рдЧрд░реНрдиреБрд╣реЛрд╕реНред" },
"Improve Drainage": { English: "Enhance urban drainage systems to handle excess water.", Nepali: "рдЕрддрд┐рд░рд┐рдХреНрдд рдкрд╛рдиреА рд╕рдореНрд╣рд╛рд▓реНрди рд╢рд╣рд░реА рдирд┐рдХрд╛рд╕ рдкреНрд░рдгрд╛рд▓реА рд╕реБрдзрд╛рд░ рдЧрд░реНрдиреБрд╣реЛрд╕реНред" },
"Raised Homes": { English: "Raise buildings on stilts or foundations to avoid flood damage.", Nepali: "рдмрд╛рдвреАрдХреЛ рдХреНрд╖рддрд┐рдмрд╛рдЯ рдмрдЪреНрди рдШрд░рд╣рд░реВрд▓рд╛рдИ рдЦрдореНрдмрд╛ рд╡рд╛ рдЬрдЧрдорд╛ рдЙрдЪрд╛рд▓реНрдиреБрд╣реЛрд╕реНред" },
"Rainwater Harvesting": { English: "Collect and store rainwater to reduce runoff.", Nepali: "рдмрд╣рд╛рд╡ рдХрдо рдЧрд░реНрди рд╡рд░реНрд╖рд╛рдХреЛ рдкрд╛рдиреА рд╕рдВрдХрд▓рди рд░ рднрдгреНрдбрд╛рд░рдг рдЧрд░реНрдиреБрд╣реЛрд╕реНред" },
"Permeable Pavements": { English: "Use porous materials for roads to allow water infiltration.", Nepali: "рдкрд╛рдиреА рдкреНрд░рд╡реЗрд╢ рдЧрд░реНрди рджрд┐рди рд╕рдбрдХрд╣рд░реВрдХреЛ рд▓рд╛рдЧрд┐ рдЫрд┐рджреНрд░рдпреБрдХреНрдд рд╕рд╛рдордЧреНрд░реА рдкреНрд░рдпреЛрдЧ рдЧрд░реНрдиреБрд╣реЛрд╕реНред" },
"River Widening": { English: "Expand river channels to increase water-carrying capacity.", Nepali: "рдкрд╛рдиреА рдмреЛрдХреНрдиреЗ рдХреНрд╖рдорддрд╛ рдмрдврд╛рдЙрди рдирджреА рдЪреНрдпрд╛рдирд▓рд╣рд░реВ рд╡рд┐рд╕реНрддрд╛рд░ рдЧрд░реНрдиреБрд╣реЛрд╕реНред" },
"Wetland Restoration": { English: "Restore natural wetlands to absorb floodwater and reduce runoff.", Nepali: "рдмрд╛рдвреАрдХреЛ рдкрд╛рдиреА рдЕрд╡рд╢реЛрд╖рдг рдЧрд░реНрди рд░ рдмрд╣рд╛рд╡ рдХрдо рдЧрд░реНрди рдкреНрд░рд╛рдХреГрддрд┐рдХ рд╕рд┐рдорд╕рд╛рд░ рдХреНрд╖реЗрддреНрд░рд╣рд░реВ рдкреБрдирд░реНрд╕реНрдерд╛рдкрдирд╛ рдЧрд░реНрдиреБрд╣реЛрд╕реНред" },
"Flood Barriers": { English: "Install temporary or permanent barriers to block floodwater.", Nepali: "рдмрд╛рдвреАрдХреЛ рдкрд╛рдиреА рд░реЛрдХреНрди рдЕрд╕реНрдерд╛рдпреА рд╡рд╛ рд╕реНрдерд╛рдпреА рдЕрд╡рд░реЛрдзрд╣рд░реВ рд╕реНрдерд╛рдкрдирд╛ рдЧрд░реНрдиреБрд╣реЛрд╕реНред" },
"Reforestation": { English: "Plant trees in upstream areas to stabilize soil and reduce runoff.", Nepali: "рдорд╛рдЯреЛ рд╕реНрдерд┐рд░ рдЧрд░реНрди рд░ рдмрд╣рд╛рд╡ рдХрдо рдЧрд░реНрди рдорд╛рдерд┐рд▓реНрд▓реЛ рдХреНрд╖реЗрддреНрд░рд╣рд░реВрдорд╛ рд░реВрдЦрд╣рд░реВ рд░реЛрдкреНрдиреБрд╣реЛрд╕реНред" },
"Flood-Resistant Crops": { English: "Promote cultivation of crops that withstand flooding.", Nepali: "рдмрд╛рдвреА рд╕рд╣рди рд╕рдХреНрдиреЗ рдмрд╛рд▓реАрд╣рд░реВрдХреЛ рдЦреЗрддреАрд▓рд╛рдИ рдкреНрд░реЛрддреНрд╕рд╛рд╣рди рдЧрд░реНрдиреБрд╣реЛрд╕реНред" },
"Early Warning Systems": { English: "Implement systems to monitor and alert communities about floods.", Nepali: "рдмрд╛рдвреАрдХреЛ рдмрд╛рд░реЗрдорд╛ рд╕рдореБрджрд╛рдпрд╣рд░реВрд▓рд╛рдИ рдирд┐рдЧрд░рд╛рдиреА рд░ рдЪреЗрддрд╛рд╡рдиреА рджрд┐рдиреЗ рдкреНрд░рдгрд╛рд▓реАрд╣рд░реВ рд▓рд╛рдЧреВ рдЧрд░реНрдиреБрд╣реЛрд╕реНред" },
"Retention Ponds": { English: "Construct ponds to store excess rainwater and prevent flooding.", Nepali: "рдмрд╛рдвреА рд░реЛрдХреНрди рдЕрддрд┐рд░рд┐рдХреНрдд рд╡рд░реНрд╖рд╛рдХреЛ рдкрд╛рдиреА рднрдгреНрдбрд╛рд░рдг рдЧрд░реНрди рдкреЛрдЦрд░реАрд╣рд░реВ рдирд┐рд░реНрдорд╛рдг рдЧрд░реНрдиреБрд╣реЛрд╕реНред" },
"Floodplain Zoning": { English: "Restrict development in flood-prone areas to reduce risk.", Nepali: "рдЬреЛрдЦрд┐рдо рдХрдо рдЧрд░реНрди рдмрд╛рдвреАрдкреНрд░рд╡рдг рдХреНрд╖реЗрддреНрд░рд╣рд░реВрдорд╛ рд╡рд┐рдХрд╛рд╕ рдкреНрд░рддрд┐рдмрдиреНрдз рдЧрд░реНрдиреБрд╣реЛрд╕реНред" },
"Dredging Rivers": { English: "Remove sediment from riverbeds to increase water flow capacity.", Nepali: "рдкрд╛рдиреАрдХреЛ рдкреНрд░рд╡рд╛рд╣ рдХреНрд╖рдорддрд╛ рдмрдврд╛рдЙрди рдирджреАрдХреЛ рддрд▓рдЫрдЯ рд╣рдЯрд╛рдЙрдиреБрд╣реЛрд╕реНред" },
"Green Infrastructure": { English: "Develop parks and bioswales to absorb and manage stormwater.", Nepali: "рдЖрдБрдзреАрдХреЛ рдкрд╛рдиреА рдЕрд╡рд╢реЛрд╖рдг рд░ рд╡реНрдпрд╡рд╕реНрдерд╛рдкрди рдЧрд░реНрди рдкрд╛рд░реНрдХрд╣рд░реВ рд░ рдмрд╛рдпреЛрд╕реНрд╡реЗрд▓рд╣рд░реВ рд╡рд┐рдХрд╛рд╕ рдЧрд░реНрдиреБрд╣реЛрд╕реНред" },
"Flood Walls": { English: "Construct walls to protect specific areas from floodwater.", Nepali: "рдмрд╛рдвреАрдХреЛ рдкрд╛рдиреАрдмрд╛рдЯ рд╡рд┐рд╢рд┐рд╖реНрдЯ рдХреНрд╖реЗрддреНрд░рд╣рд░реВ рдЬреЛрдЧрд╛рдЙрди рдкрд░реНрдЦрд╛рд▓рд╣рд░реВ рдирд┐рд░реНрдорд╛рдг рдЧрд░реНрдиреБрд╣реЛрд╕реНред" },
"Channel Diversion": { English: "Redirect floodwater through alternate channels.", Nepali: "рдмрд╛рдвреАрдХреЛ рдкрд╛рдиреАрд▓рд╛рдИ рд╡реИрдХрд▓реНрдкрд┐рдХ рдЪреНрдпрд╛рдирд▓рд╣рд░реВ рдорд╛рд░реНрдлрдд рдбрд╛рдЗрднрд░реНрдЯ рдЧрд░реНрдиреБрд╣реЛрд╕реНред" },
"Stormwater Pumps": { English: "Install pumps to remove excess water during heavy rains.", Nepali: "рднрд╛рд░реА рд╡рд░реНрд╖рд╛рдорд╛ рдЕрддрд┐рд░рд┐рдХреНрдд рдкрд╛рдиреА рд╣рдЯрд╛рдЙрди рдкрдореНрдкрд╣рд░реВ рд╕реНрдерд╛рдкрдирд╛ рдЧрд░реНрдиреБрд╣реЛрд╕реНред" },
"Soil Bioengineering": { English: "Use plants and natural materials to stabilize riverbanks.", Nepali: "рдирджреА рдХрд┐рдирд╛рд░рд╣рд░реВ рд╕реНрдерд┐рд░ рдЧрд░реНрди рдмреЛрдЯрдмрд┐рд░реБрд╡рд╛ рд░ рдкреНрд░рд╛рдХреГрддрд┐рдХ рд╕рд╛рдордЧреНрд░реАрд╣рд░реВ рдкреНрд░рдпреЛрдЧ рдЧрд░реНрдиреБрд╣реЛрд╕реНред" },
"Flood Gates": { English: "Install gates to control water flow in flood-prone areas.", Nepali: "рдмрд╛рдвреАрдкреНрд░рд╡рдг рдХреНрд╖реЗрддреНрд░рд╣рд░реВрдорд╛ рдкрд╛рдиреАрдХреЛ рдкреНрд░рд╡рд╛рд╣ рдирд┐рдпрдиреНрддреНрд░рдг рдЧрд░реНрди рдвреЛрдХрд╛рд╣рд░реВ рд╕реНрдерд╛рдкрдирд╛ рдЧрд░реНрдиреБрд╣реЛрд╕реНред" },
"Low-Income Areas": { English: "Communities with limited financial resources vulnerable to flood impacts.", Nepali: "рдмрд╛рдвреАрдХреЛ рдкреНрд░рднрд╛рд╡рдорд╛ рдХрдордЬреЛрд░ рд╕реАрдорд┐рдд рд╡рд┐рддреНрддреАрдп рд╕реНрд░реЛрдд рднрдПрдХрд╛ рд╕рдореБрджрд╛рдпрд╣рд░реВред" },
"Informal Settlements": { English: "Unplanned housing areas with poor construction standards.", Nepali: "рдХрдордЬреЛрд░ рдирд┐рд░реНрдорд╛рдг рдорд╛рдкрджрдгреНрдб рднрдПрдХрд╛ рдЕрдирд┐рдпреЛрдЬрд┐рдд рдЖрд╡рд╛рд╕ рдХреНрд╖реЗрддреНрд░рд╣рд░реВред" },
"No Insurance": { English: "Lack of insurance coverage for flood-related losses.", Nepali: "рдмрд╛рдвреА рд╕рдореНрдмрдиреНрдзреА рд╣рд╛рдирд┐рдХрд╛ рд▓рд╛рдЧрд┐ рдмреАрдорд╛ рдХрднрд░реЗрдЬрдХреЛ рдЕрднрд╛рд╡ред" },
"Elderly Population": { English: "Older individuals with reduced mobility and health risks.", Nepali: "рдХрдо рдЧрддрд┐рд╢реАрд▓рддрд╛ рд░ рд╕реНрд╡рд╛рд╕реНрдереНрдп рдЬреЛрдЦрд┐рдо рднрдПрдХрд╛ рд╡реГрджреНрдз рд╡реНрдпрдХреНрддрд┐рд╣рд░реВред" },
"Children in School": { English: "Schoolchildren vulnerable during flood events.", Nepali: "рдмрд╛рдвреАрдХреЛ рд╕рдордпрдорд╛ рдХрдордЬреЛрд░ рд╕реНрдХреВрд▓рдХрд╛ рдмрдЪреНрдЪрд╛рд╣рд░реВред" },
"Disabled People": { English: "Individuals with disabilities facing evacuation challenges.", Nepali: "рдирд┐рдХрд╛рд╕ рдЪреБрдиреМрддреАрд╣рд░реВрдХреЛ рд╕рд╛рдордирд╛ рдЧрд░реНрдиреЗ рдЕрдкрд╛рдЩреНрдЧ рд╡реНрдпрдХреНрддрд┐рд╣рд░реВред" },
"Poor Infrastructure": { English: "Weak roads and utilities prone to flood damage.", Nepali: "рдмрд╛рдвреАрдХреЛ рдХреНрд╖рддрд┐рдкреНрд░рддрд┐ рдХрдордЬреЛрд░ рд╕рдбрдХ рд░ рдЙрдкрдпреЛрдЧрд┐рддрд╛рд╣рд░реВред" },
"Dense Urban Areas": { English: "Crowded city zones with high flood exposure.", Nepali: "рдЙрдЪреНрдЪ рдмрд╛рдвреА рдЬреЛрдЦрд┐рдо рднрдПрдХрд╛ рднреАрдбрднрд╛рдб рд╢рд╣рд░реА рдХреНрд╖реЗрддреНрд░рд╣рд░реВред" },
"Lack of Evacuation Routes": { English: "Absence of safe paths for flood evacuation.", Nepali: "рдмрд╛рдвреА рдирд┐рдХрд╛рд╕рдХрд╛ рд▓рд╛рдЧрд┐ рд╕реБрд░рдХреНрд╖рд┐рдд рдорд╛рд░реНрдЧрд╣рд░реВрдХреЛ рдЕрднрд╛рд╡ред" },
"Unprotected Farmland": { English: "Agricultural land exposed to flood damage.", Nepali: "рдмрд╛рдвреАрдХреЛ рдХреНрд╖рддрд┐рдкреНрд░рддрд┐ рдЦреБрд▓рд╛ рдХреГрд╖рд┐ рдЬрдорд┐рдиред" },
"Single-Story Homes": { English: "Homes with no upper floors for refuge during floods.", Nepali: "рдмрд╛рдвреАрдХреЛ рд╕рдордпрдорд╛ рдЖрд╢реНрд░рдпрдХрд╛ рд▓рд╛рдЧрд┐ рдорд╛рдерд┐рд▓реНрд▓реЛ рддрд▓реНрд▓рд╛ рдирднрдПрдХрд╛ рдШрд░рд╣рд░реВред" },
"Overcrowded Shelters": { English: "Shelters with limited capacity during floods.", Nepali: "рдмрд╛рдвреАрдХреЛ рд╕рдордпрдорд╛ рд╕реАрдорд┐рдд рдХреНрд╖рдорддрд╛ рднрдПрдХрд╛ рдЖрд╢реНрд░рдпрд╕реНрдерд▓рд╣рд░реВред" },
"Limited Healthcare Access": { English: "Restricted access to medical services during floods.", Nepali: "рдмрд╛рдвреАрдХреЛ рд╕рдордпрдорд╛ рдЪрд┐рдХрд┐рддреНрд╕рд╛ рд╕реЗрд╡рд╛рд╣рд░реВрдорд╛ рд╕реАрдорд┐рдд рдкрд╣реБрдБрдЪред" },
"Unstable Riverbanks": { English: "Riverbanks prone to erosion and collapse.", Nepali: "рдХреНрд╖рд░рдг рд░ рднрддреНрдХрдиреЗ рдкреНрд░рд╡реГрддреНрддрд┐рдХрд╛ рдирджреА рдХрд┐рдирд╛рд░рд╣рд░реВред" },
"Lack of Early Warning": { English: "No systems to alert communities of floods.", Nepali: "рдмрд╛рдвреАрдХреЛ рдЪреЗрддрд╛рд╡рдиреА рджрд┐рдиреЗ рдкреНрд░рдгрд╛рд▓реАрд╣рд░реВрдХреЛ рдЕрднрд╛рд╡ред" },
"High Population Density": { English: "Areas with many people increasing flood risk.", Nepali: "рдзреЗрд░реИ рдорд╛рдирд┐рд╕рд╣рд░реВ рднрдПрдХреЛ рдХреНрд╖реЗрддреНрд░рд╣рд░реВрд▓реЗ рдмрд╛рдвреА рдЬреЛрдЦрд┐рдо рдмрдврд╛рдЙрдБрдЫред" },
"Poor Communication Systems": { English: "Weak systems for sharing flood information.", Nepali: "рдмрд╛рдвреА рдЬрд╛рдирдХрд╛рд░реА рд╕рд╛рдЭрд╛ рдЧрд░реНрди рдХрдордЬреЛрд░ рдкреНрд░рдгрд╛рд▓реАрд╣рд░реВред" },
"Dependent Populations": { English: "Groups relying on others for flood response.", Nepali: "рдмрд╛рдвреА рдкреНрд░рддрд┐рдХреНрд░рд┐рдпрд╛рдХрд╛ рд▓рд╛рдЧрд┐ рдЕрд░реВрдорд╛ рдирд┐рд░реНрднрд░ рд╕рдореВрд╣рд╣рд░реВред" },
"Inadequate Drainage": { English: "Poor drainage systems causing water accumulation.", Nepali: "рдкрд╛рдиреА рдЬрдореНрдорд╛ рд╣реБрдиреЗ рдХрдордЬреЛрд░ рдирд┐рдХрд╛рд╕ рдкреНрд░рдгрд╛рд▓реАрд╣рд░реВред" },
"Unreinforced Buildings": { English: "Structures not built to withstand flood forces.", Nepali: "рдмрд╛рдвреАрдХреЛ рдмрд▓ рд╕рд╣рди рдирд╕рдХреНрдиреЗ рд╕рдВрд░рдЪрдирд╛рд╣рд░реВред" },
"Boats": { English: "Watercraft for rescue and transport during floods.", Nepali: "рдмрд╛рдвреАрдХреЛ рд╕рдордпрдорд╛ рдЙрджреНрдзрд╛рд░ рд░ рдпрд╛рддрд╛рдпрд╛рддрдХрд╛ рд▓рд╛рдЧрд┐ рдкрд╛рдиреАрдХрд╛ рд╕рд╛рдзрдирд╣рд░реВред" },
"First Aid Kits": { English: "Supplies for immediate medical assistance.", Nepali: "рддрддреНрдХрд╛рд▓ рдЪрд┐рдХрд┐рддреНрд╕рд╛ рд╕рд╣рд╛рдпрддрд╛рдХрд╛ рд▓рд╛рдЧрд┐ рд╕рд╛рдордЧреНрд░реАрд╣рд░реВред" },
"Life Jackets": { English: "Flotation devices to ensure safety in floodwater.", Nepali: "рдмрд╛рдвреАрдХреЛ рдкрд╛рдиреАрдорд╛ рд╕реБрд░рдХреНрд╖рд╛рдХрд╛ рд▓рд╛рдЧрд┐ рдлреНрд▓реЛрдЯреЗрд╢рди рдЙрдкрдХрд░рдгрд╣рд░реВред" },
"Rescue Teams": { English: "Trained personnel for flood rescue operations.", Nepali: "рдмрд╛рдвреА рдЙрджреНрдзрд╛рд░ рдХрд╛рд░реНрдпрд╣рд░реВрдХрд╛ рд▓рд╛рдЧрд┐ рдкреНрд░рд╢рд┐рдХреНрд╖рд┐рдд рдХрд░реНрдордЪрд╛рд░реАрд╣рд░реВред" },
"Food Stockpiles": { English: "Stored food reserves for emergency distribution.", Nepali: "рдЖрдХрд╕реНрдорд┐рдХ рд╡рд┐рддрд░рдгрдХрд╛ рд▓рд╛рдЧрд┐ рднрдгреНрдбрд╛рд░ рдЧрд░рд┐рдПрдХрд╛ рдЦрд╛рджреНрдп рднрдгреНрдбрд╛рд░рд╣рд░реВред" },
"Rescue Drills": { English: "Practice exercises for effective flood response.", Nepali: "рдкреНрд░рднрд╛рд╡реА рдмрд╛рдвреА рдкреНрд░рддрд┐рдХреНрд░рд┐рдпрд╛рдХрд╛ рд▓рд╛рдЧрд┐ рдЕрднреНрдпрд╛рд╕рд╣рд░реВред" },
"Emergency Shelters": { English: "Safe locations for displaced individuals during floods.", Nepali: "рдмрд╛рдвреАрдХреЛ рд╕рдордпрдорд╛ рд╡рд┐рд╕реНрдерд╛рдкрд┐рдд рд╡реНрдпрдХреНрддрд┐рд╣рд░реВрдХрд╛ рд▓рд╛рдЧрд┐ рд╕реБрд░рдХреНрд╖рд┐рдд рд╕реНрдерд╛рдирд╣рд░реВред" },
"Water Purification Units": { English: "Devices to provide clean drinking water during floods.", Nepali: "рдмрд╛рдвреАрдХреЛ рд╕рдордпрдорд╛ рд╕реНрд╡рдЪреНрдЫ рдкрд┐рдЙрдиреЗ рдкрд╛рдиреА рдкреНрд░рджрд╛рди рдЧрд░реНрдиреЗ рдЙрдкрдХрд░рдгрд╣рд░реВред" },
"Mobile Medical Units": { English: "Portable clinics for medical care in flood zones.", Nepali: "рдмрд╛рдвреА рдХреНрд╖реЗрддреНрд░рд╣рд░реВрдорд╛ рдЪрд┐рдХрд┐рддреНрд╕рд╛ рд╣реЗрд░рдЪрд╛рд╣рдХрд╛ рд▓рд╛рдЧрд┐ рдкреЛрд░реНрдЯреЗрдмрд▓ рдХреНрд▓рд┐рдирд┐рдХрд╣рд░реВред" },
"Communication Radios": { English: "Radios for coordination during flood emergencies.", Nepali: "рдмрд╛рдвреА рдЖрдкрддрдХрд╛рд▓рдорд╛ рд╕рдордиреНрд╡рдпрдХрд╛ рд▓рд╛рдЧрд┐ рд░реЗрдбрд┐рдпреЛрд╣рд░реВред" },
"Sandbags": { English: "Bags filled with sand to block floodwater.", Nepali: "рдмрд╛рдвреАрдХреЛ рдкрд╛рдиреА рд░реЛрдХреНрди рдмрд╛рд▓реБрд╡рд╛рд▓реЗ рднрд░рд┐рдПрдХрд╛ рдЭреЛрд▓рд╛рд╣рд░реВред" },
"Backup Generators": { English: "Power sources for critical operations during floods.", Nepali: "рдмрд╛рдвреАрдХреЛ рд╕рдордпрдорд╛ рдорд╣рддреНрд╡рдкреВрд░реНрдг рдХрд╛рд░реНрдпрд╣рд░реВрдХрд╛ рд▓рд╛рдЧрд┐ рд╢рдХреНрддрд┐ рд╕реНрд░реЛрддрд╣рд░реВред" },
"Water Pumps": { English: "Pumps to remove floodwater from affected areas.", Nepali: "рдкреНрд░рднрд╛рд╡рд┐рдд рдХреНрд╖реЗрддреНрд░рд╣рд░реВрдмрд╛рдЯ рдмрд╛рдвреАрдХреЛ рдкрд╛рдиреА рд╣рдЯрд╛рдЙрди рдкрдореНрдкрд╣рд░реВред" },
"Community Volunteers": { English: "Local volunteers trained for flood response.", Nepali: "рдмрд╛рдвреА рдкреНрд░рддрд┐рдХреНрд░рд┐рдпрд╛рдХрд╛ рд▓рд╛рдЧрд┐ рдкреНрд░рд╢рд┐рдХреНрд╖рд┐рдд рд╕реНрдерд╛рдиреАрдп рд╕реНрд╡рдпрдВрд╕реЗрд╡рдХрд╣рд░реВред" },
"Emergency Vehicles": { English: "Vehicles for rescue and relief transport.", Nepali: "рдЙрджреНрдзрд╛рд░ рд░ рд░рд╛рд╣рдд рдпрд╛рддрд╛рдпрд╛рддрдХрд╛ рд▓рд╛рдЧрд┐ рд╕рд╡рд╛рд░реА рд╕рд╛рдзрдирд╣рд░реВред" },
"Temporary Bridges": { English: "Portable bridges to maintain access during floods.", Nepali: "рдмрд╛рдвреАрдХреЛ рд╕рдордпрдорд╛ рдкрд╣реБрдБрдЪ рдХрд╛рдпрдо рд░рд╛рдЦреНрди рдЕрд╕реНрдерд╛рдпреА рдкреБрд▓рд╣рд░реВред" },
"Warning Sirens": { English: "Audible alerts to warn communities of floods.", Nepali: "рдмрд╛рдвреАрдХреЛ рдЪреЗрддрд╛рд╡рдиреА рджрд┐рди рд╕рдореБрджрд╛рдпрд╣рд░реВрд▓рд╛рдИ рд╕реБрдирд┐рдиреЗ рдЪреЗрддрд╛рд╡рдиреАрд╣рд░реВред" },
"Evacuation Maps": { English: "Maps guiding safe evacuation routes during floods.", Nepali: "рдмрд╛рдвреАрдХреЛ рд╕рдордпрдорд╛ рд╕реБрд░рдХреНрд╖рд┐рдд рдирд┐рдХрд╛рд╕ рдорд╛рд░реНрдЧрд╣рд░реВрдХреЛ рдорд╛рд░реНрдЧрджрд░реНрд╢рди рдЧрд░реНрдиреЗ рдирдХреНрд╢рд╛рд╣рд░реВред" },
"Trained Medics": { English: "Medical professionals trained for flood emergencies.", Nepali: "рдмрд╛рдвреА рдЖрдкрддрдХрд╛рд▓рдХрд╛ рд▓рд╛рдЧрд┐ рдкреНрд░рд╢рд┐рдХреНрд╖рд┐рдд рдЪрд┐рдХрд┐рддреНрд╕рд╛ рдкреЗрд╢реЗрд╡рд░рд╣рд░реВред" },
"Relief Supply Kits": { English: "Pre-packed kits with essential flood relief items.", Nepali: "рдЖрд╡рд╢реНрдпрдХ рдмрд╛рдвреА рд░рд╛рд╣рдд рд╡рд╕реНрддреБрд╣рд░реВ рд╕рд╣рд┐рддрдХреЛ рдкреВрд░реНрд╡-рдкреНрдпрд╛рдХ рдЧрд░рд┐рдПрдХреЛ рдХрд┐рдЯрд╣рд░реВред" },
"Evacuation Plans": { English: "Organized strategies for safe community evacuation during floods.", Nepali: "рдмрд╛рдвреАрдХреЛ рд╕рдордпрдорд╛ рд╕реБрд░рдХреНрд╖рд┐рдд рд╕рдореБрджрд╛рдп рдирд┐рдХрд╛рд╕рдХрд╛ рд▓рд╛рдЧрд┐ рд╕рдВрдЧрдард┐рдд рд░рдгрдиреАрддрд┐рд╣рд░реВред" },
"Mock Drills": { English: "Simulated exercises to practice flood response.", Nepali: "рдмрд╛рдвреА рдкреНрд░рддрд┐рдХреНрд░рд┐рдпрд╛рдХреЛ рдЕрднреНрдпрд╛рд╕ рдЧрд░реНрди рдирдХреНрдХрд▓реА рдЕрднреНрдпрд╛рд╕рд╣рд░реВред" },
"Community Groups": { English: "Local groups trained to coordinate flood preparedness.", Nepali: "рдмрд╛рдвреА рддрдпрд╛рд░реА рд╕рдордиреНрд╡рдп рдЧрд░реНрди рдкреНрд░рд╢рд┐рдХреНрд╖рд┐рдд рд╕реНрдерд╛рдиреАрдп рд╕рдореВрд╣рд╣рд░реВред" },
"Flood Awareness": { English: "Public education campaigns on flood risks and safety.", Nepali: "рдмрд╛рдвреА рдЬреЛрдЦрд┐рдо рд░ рд╕реБрд░рдХреНрд╖рд╛рдорд╛ рд╕рд╛рд░реНрд╡рдЬрдирд┐рдХ рд╢рд┐рдХреНрд╖рд╛ рдЕрднрд┐рдпрд╛рдирд╣рд░реВред" },
"School Education": { English: "Teaching students about flood preparedness and safety.", Nepali: "рд╡рд┐рджреНрдпрд╛рд░реНрдереАрд╣рд░реВрд▓рд╛рдИ рдмрд╛рдвреА рддрдпрд╛рд░реА рд░ рд╕реБрд░рдХреНрд╖рд╛ рдмрд╛рд░реЗ рд╢рд┐рдХреНрд╖рд╛ рджрд┐рдиреЗред" },
"SMS Alerts": { English: "Mobile notifications for flood warnings.", Nepali: "рдмрд╛рдвреА рдЪреЗрддрд╛рд╡рдиреАрдХрд╛ рд▓рд╛рдЧрд┐ рдореЛрдмрд╛рдЗрд▓ рд╕реВрдЪрдирд╛рд╣рд░реВред" },
"Emergency Kits": { English: "Pre-prepared kits with essential flood survival items.", Nepali: "рдмрд╛рдвреА рдмрд╛рдБрдЪреНрди рдЖрд╡рд╢реНрдпрдХ рд╡рд╕реНрддреБрд╣рд░реВ рд╕рд╣рд┐рддрдХреЛ рдкреВрд░реНрд╡-рддрдпрд╛рд░ рдХрд┐рдЯрд╣рд░реВред" },
"Flood Mapping": { English: "Creating maps to identify flood-prone areas.", Nepali: "рдмрд╛рдвреАрдкреНрд░рд╡рдг рдХреНрд╖реЗрддреНрд░рд╣рд░реВ рдкрд╣рд┐рдЪрд╛рди рдЧрд░реНрди рдирдХреНрд╢рд╛рд╣рд░реВ рдмрдирд╛рдЙрдиреЗред" },
"Local Training": { English: "Training residents in flood response techniques.", Nepali: "рдмрд╛рдвреА рдкреНрд░рддрд┐рдХреНрд░рд┐рдпрд╛ рдкреНрд░рд╡рд┐рдзрд┐рд╣рд░реВрдорд╛ рдмрд╛рд╕рд┐рдиреНрджрд╛рд╣рд░реВрд▓рд╛рдИ рддрд╛рд▓рд┐рдо рджрд┐рдиреЗред" },
"Warning Systems": { English: "Systems to alert communities about impending floods.", Nepali: "рдЖрдЧрд╛рдореА рдмрд╛рдвреАрдХреЛ рдмрд╛рд░реЗрдорд╛ рд╕рдореБрджрд╛рдпрд╣рд░реВрд▓рд╛рдИ рдЪреЗрддрд╛рд╡рдиреА рджрд┐рдиреЗ рдкреНрд░рдгрд╛рд▓реАрд╣рд░реВред" },
"Safe Routes": { English: "Designated paths for safe evacuation during floods.", Nepali: "рдмрд╛рдвреАрдХреЛ рд╕рдордпрдорд╛ рд╕реБрд░рдХреНрд╖рд┐рдд рдирд┐рдХрд╛рд╕рдХрд╛ рд▓рд╛рдЧрд┐ рддреЛрдХрд┐рдПрдХрд╛ рдорд╛рд░реНрдЧрд╣рд░реВред" },
"Public Workshops": { English: "Community sessions to teach flood preparedness.", Nepali: "рдмрд╛рдвреА рддрдпрд╛рд░реА рд╕рд┐рдХрд╛рдЙрди рд╕рд╛рдореБрджрд╛рдпрд┐рдХ рд╕рддреНрд░рд╣рд░реВред" },
"Volunteer Networks": { English: "Organized groups of volunteers for flood readiness.", Nepali: "рдмрд╛рдвреА рддрдпрд╛рд░реАрдХрд╛ рд▓рд╛рдЧрд┐ рд╕реНрд╡рдпрдВрд╕реЗрд╡рдХрд╣рд░реВрдХреЛ рд╕рдВрдЧрдард┐рдд рд╕рдореВрд╣рд╣рд░реВред" },
"Flood Drills": { English: "Practical exercises to simulate flood scenarios.", Nepali: "рдмрд╛рдвреА рдкрд░рд┐рджреГрд╢реНрдпрд╣рд░реВрдХреЛ рдирдХреНрдХрд▓ рдЧрд░реНрди рд╡реНрдпрд╛рд╡рд╣рд╛рд░рд┐рдХ рдЕрднреНрдпрд╛рд╕рд╣рд░реВред" },
"Risk Assessments": { English: "Evaluating flood risks to prioritize preparedness.", Nepali: "рддрдпрд╛рд░реАрд▓рд╛рдИ рдкреНрд░рд╛рдердорд┐рдХрддрд╛ рджрд┐рди рдмрд╛рдвреА рдЬреЛрдЦрд┐рдорд╣рд░реВрдХреЛ рдореВрд▓реНрдпрд╛рдВрдХрдиред" },
"Community Sirens": { English: "Audible alarms to warn of flood dangers.", Nepali: "рдмрд╛рдвреА рдЦрддрд░рд╛рд╣рд░реВрдХреЛ рдЪреЗрддрд╛рд╡рдиреА рджрд┐рди рд╕реБрдирд┐рдиреЗ рдЕрд▓рд╛рд░реНрдорд╣рд░реВред" },
"Emergency Contacts": { English: "List of contacts for flood emergency services.", Nepali: "рдмрд╛рдвреА рдЖрдкрддрдХрд╛рд▓реАрди рд╕реЗрд╡рд╛рд╣рд░реВрдХрд╛ рд▓рд╛рдЧрд┐ рд╕рдореНрдкрд░реНрдХрд╣рд░реВрдХреЛ рд╕реВрдЪреАред" },
"Flood Shelters": { English: "Designated safe locations for flood refuge.", Nepali: "рдмрд╛рдвреА рдЖрд╢реНрд░рдпрдХрд╛ рд▓рд╛рдЧрд┐ рддреЛрдХрд┐рдПрдХрд╛ рд╕реБрд░рдХреНрд╖рд┐рдд рд╕реНрдерд╛рдирд╣рд░реВред" },
"Weather Monitoring": { English: "Tracking weather patterns to predict floods.", Nepali: "рдмрд╛рдвреАрдХреЛ рднрд╡рд┐рд╖реНрдпрд╡рд╛рдгреА рдЧрд░реНрди рдореМрд╕рдо рдврд╛рдБрдЪрд╛рд╣рд░реВрдХреЛ рдирд┐рдЧрд░рд╛рдиреАред" },
"Response Plans": { English: "Detailed plans for coordinated flood response.", Nepali: "рд╕рдордиреНрд╡рд┐рдд рдмрд╛рдвреА рдкреНрд░рддрд┐рдХреНрд░рд┐рдпрд╛рдХрд╛ рд▓рд╛рдЧрд┐ рд╡рд┐рд╕реНрддреГрдд рдпреЛрдЬрдирд╛рд╣рд░реВред" },
"Immediate Rescue": { English: "Prompt operations to save people from floodwaters.", Nepali: "рдмрд╛рдвреАрдХреЛ рдкрд╛рдиреАрдмрд╛рдЯ рдорд╛рдирд┐рд╕рд╣рд░реВрд▓рд╛рдИ рдмрдЪрд╛рдЙрди рддрддреНрдХрд╛рд▓ рдХрд╛рд░реНрдпрд╣рд░реВред" },
"Temporary Shelter": { English: "Providing temporary housing for displaced individuals.", Nepali: "рд╡рд┐рд╕реНрдерд╛рдкрд┐рдд рд╡реНрдпрдХреНрддрд┐рд╣рд░реВрдХреЛ рд▓рд╛рдЧрд┐ рдЕрд╕реНрдерд╛рдпреА рдЖрд╡рд╛рд╕ рдкреНрд░рджрд╛рди рдЧрд░реНрдиреЗред" },
"Medical Aid": { English: "Emergency medical support for flood victims.", Nepali: "рдмрд╛рдвреА рдкреАрдбрд┐рддрд╣рд░реВрдХрд╛ рд▓рд╛рдЧрд┐ рдЖрдХрд╕реНрдорд┐рдХ рдЪрд┐рдХрд┐рддреНрд╕рд╛ рд╕рдорд░реНрдердиред" },
"Food Distribution": { English: "Supplying food to affected communities.", Nepali: "рдкреНрд░рднрд╛рд╡рд┐рдд рд╕рдореБрджрд╛рдпрд╣рд░реВрд▓рд╛рдИ рдЦрд╛рджреНрдп рдЖрдкреВрд░реНрддрд┐ рдЧрд░реНрдиреЗред" },
"Water Supply": { English: "Providing clean drinking water during floods.", Nepali: "рдмрд╛рдвреАрдХреЛ рд╕рдордпрдорд╛ рд╕реНрд╡рдЪреНрдЫ рдкрд┐рдЙрдиреЗ рдкрд╛рдиреА рдкреНрд░рджрд╛рди рдЧрд░реНрдиреЗред" },
"Family Tracing": { English: "Locating separated family members post-flood.", Nepali: "рдмрд╛рдвреА рдкрдЫрд┐ рдЫреБрдЯреНрдЯрд┐рдПрдХрд╛ рдкрд░рд┐рд╡рд╛рд░рдХрд╛ рд╕рджрд╕реНрдпрд╣рд░реВ рдЦреЛрдЬреНрдиреЗред" },
"Emergency Transport": { English: "Vehicles for moving people and supplies during floods.", Nepali: "рдмрд╛рдвреАрдХреЛ рд╕рдордпрдорд╛ рдорд╛рдирд┐рд╕ рд░ рд╕рд╛рдордЧреНрд░реАрд╣рд░реВ рд▓реИрдЬрд╛рди рд╕рд╡рд╛рд░реА рд╕рд╛рдзрдирд╣рд░реВред" },
"Communication Systems": { English: "Systems to coordinate flood response efforts.", Nepali: "рдмрд╛рдвреА рдкреНрд░рддрд┐рдХреНрд░рд┐рдпрд╛ рдкреНрд░рдпрд╛рд╕рд╣рд░реВ рд╕рдордиреНрд╡рдп рдЧрд░реНрди рдкреНрд░рдгрд╛рд▓реАрд╣рд░реВред" },
"Relief Camps": { English: "Organized camps for displaced flood victims.", Nepali: "рд╡рд┐рд╕реНрдерд╛рдкрд┐рдд рдмрд╛рдвреА рдкреАрдбрд┐рддрд╣рд░реВрдХрд╛ рд▓рд╛рдЧрд┐ рд╕рдВрдЧрдард┐рдд рд╢рд┐рд╡рд┐рд░рд╣рд░реВред" },
"Search and Rescue": { English: "Operations to locate and save trapped individuals.", Nepali: "рдлрд╕реЗрдХрд╛ рд╡реНрдпрдХреНрддрд┐рд╣рд░реВрд▓рд╛рдИ рдЦреЛрдЬреНрдиреЗ рд░ рдмрдЪрд╛рдЙрдиреЗ рдХрд╛рд░реНрдпрд╣рд░реВред" },
"Water Purification": { English: "Ensuring clean water through purification methods.", Nepali: "рд╢реБрджреНрдзреАрдХрд░рдг рд╡рд┐рдзрд┐рд╣рд░реВ рдорд╛рд░реНрдлрдд рд╕реНрд╡рдЪреНрдЫ рдкрд╛рдиреА рд╕реБрдирд┐рд╢реНрдЪрд┐рдд рдЧрд░реНрдиреЗред" },
"Power Restoration": { English: "Restoring electricity in flood-affected areas.", Nepali: "рдмрд╛рдвреА рдкреНрд░рднрд╛рд╡рд┐рдд рдХреНрд╖реЗрддреНрд░рд╣рд░реВрдорд╛ рд╡рд┐рджреНрдпреБрддреН рдкреБрдирд░реНрд╕реНрдерд╛рдкрдирд╛ рдЧрд░реНрдиреЗред" },
"Debris Removal": { English: "Clearing debris to facilitate rescue and recovery.", Nepali: "рдЙрджреНрдзрд╛рд░ рд░ рдкреБрдирд░реНрдкреНрд░рд╛рдкреНрддрд┐рдХрд╛ рд▓рд╛рдЧрд┐ рдлреЛрд╣реЛрд░ рд╣рдЯрд╛рдЙрдиреЗред" },
"Volunteer Coordination": { English: "Organizing volunteers for effective flood response.", Nepali: "рдкреНрд░рднрд╛рд╡реА рдмрд╛рдвреА рдкреНрд░рддрд┐рдХреНрд░рд┐рдпрд╛рдХрд╛ рд▓рд╛рдЧрд┐ рд╕реНрд╡рдпрдВрд╕реЗрд╡рдХрд╣рд░реВ рд╕рдВрдЧрдарди рдЧрд░реНрдиреЗред" },
"Mobile Clinics": { English: "Portable medical units for flood-affected areas.", Nepali: "рдмрд╛рдвреА рдкреНрд░рднрд╛рд╡рд┐рдд рдХреНрд╖реЗрддреНрд░рд╣рд░реВрдХрд╛ рд▓рд╛рдЧрд┐ рдкреЛрд░реНрдЯреЗрдмрд▓ рдЪрд┐рдХрд┐рддреНрд╕рд╛ рдПрдХрд╛рдЗрд╣рд░реВред" },
"Psychological Support": { English: "Mental health services for flood survivors.", Nepali: "рдмрд╛рдвреА рдмрд╛рдБрдЪреЗрдХрд╛рд╣рд░реВрдХрд╛ рд▓рд╛рдЧрд┐ рдорд╛рдирд╕рд┐рдХ рд╕реНрд╡рд╛рд╕реНрдереНрдп рд╕реЗрд╡рд╛рд╣рд░реВред" },
"Road Clearing": { English: "Removing obstacles to restore road access.", Nepali: "рд╕рдбрдХ рдкрд╣реБрдБрдЪ рдкреБрдирд░реНрд╕реНрдерд╛рдкрдирд╛ рдЧрд░реНрди рдЕрд╡рд░реЛрдзрд╣рд░реВ рд╣рдЯрд╛рдЙрдиреЗред" },
"Sanitation Services": { English: "Providing sanitation facilities to prevent disease.", Nepali: "рд░реЛрдЧ рд░реЛрдХрдерд╛рдо рдЧрд░реНрди рд╕рд░рд╕рдлрд╛рдЗ рд╕реБрд╡рд┐рдзрд╛рд╣рд░реВ рдкреНрд░рджрд╛рди рдЧрд░реНрдиреЗред" },
"Emergency Broadcasts": { English: "Broadcasting critical updates during floods.", Nepali: "рдмрд╛рдвреАрдХреЛ рд╕рдордпрдорд╛ рдорд╣рддреНрд╡рдкреВрд░реНрдг рдЕрдкрдбреЗрдЯрд╣рд░реВ рдкреНрд░рд╕рд╛рд░рдг рдЧрд░реНрдиреЗред" },
"Relief Supplies": { English: "Distributing essential items like blankets and clothes.", Nepali: "рдХрдореНрдмрд▓ рд░ рд▓реБрдЧрд╛ рдЬрд╕реНрддрд╛ рдЖрд╡рд╢реНрдпрдХ рд╡рд╕реНрддреБрд╣рд░реВ рд╡рд┐рддрд░рдг рдЧрд░реНрдиреЗред" },
"Rebuild Homes": { English: "Reconstructing damaged houses for flood victims.", Nepali: "рдмрд╛рдвреА рдкреАрдбрд┐рддрд╣рд░реВрдХрд╛ рд▓рд╛рдЧрд┐ рдХреНрд╖рддрд┐рдЧреНрд░рд╕реНрдд рдШрд░рд╣рд░реВ рдкреБрдирд░реНрдирд┐рд░реНрдорд╛рдгред" },
"Restore Schools": { English: "Repairing educational facilities to resume classes.", Nepali: "рдХрдХреНрд╖рд╛рд╣рд░реВ рдкреБрдирдГ рд╕реБрд░реБ рдЧрд░реНрди рд╢реИрдХреНрд╖рд┐рдХ рд╕реБрд╡рд┐рдзрд╛рд╣рд░реВ рдорд░реНрдорддред" },
"Compensation": { English: "Financial support for flood-related losses.", Nepali: "рдмрд╛рдвреА рд╕рдореНрдмрдиреНрдзреА рд╣рд╛рдирд┐рдХрд╛ рд▓рд╛рдЧрд┐ рдЖрд░реНрдерд┐рдХ рд╕рдорд░реНрдердиред" },
"Drainage Fix": { English: "Repairing drainage systems to prevent future flooding.", Nepali: "рднрд╡рд┐рд╖реНрдпрдХреЛ рдмрд╛рдвреА рд░реЛрдХреНрди рдирд┐рдХрд╛рд╕ рдкреНрд░рдгрд╛рд▓реАрд╣рд░реВ рдорд░реНрдорддред" },
"Livelihood Support": { English: "Aid to restore economic activities post-flood.", Nepali: "рдмрд╛рдвреА рдкрдЫрд┐ рдЖрд░реНрдерд┐рдХ рдЧрддрд┐рд╡рд┐рдзрд┐рд╣рд░реВ рдкреБрдирд░реНрд╕реНрдерд╛рдкрдирд╛ рдЧрд░реНрди рд╕рд╣рд╛рдпрддрд╛ред" },
"Cash for Work": { English: "Paid work programs for recovery efforts.", Nepali: "рдкреБрдирд░реНрдкреНрд░рд╛рдкреНрддрд┐ рдкреНрд░рдпрд╛рд╕рд╣рд░реВрдХрд╛ рд▓рд╛рдЧрд┐ рднреБрдХреНрддрд╛рдиреА рдХрд╛рд░реНрдп рдХрд╛рд░реНрдпрдХреНрд░рдорд╣рд░реВред" },
"Infrastructure Repair": { English: "Restoring roads, bridges, and utilities damaged by floods.", Nepali: "рдмрд╛рдвреАрд▓реЗ рдХреНрд╖рддрд┐рдЧреНрд░рд╕реНрдд рд╕рдбрдХ, рдкреБрд▓ рд░ рдЙрдкрдпреЛрдЧрд┐рддрд╛рд╣рд░реВ рдкреБрдирд░реНрд╕реНрдерд╛рдкрдирд╛ред" },
"Health Services": { English: "Providing medical care to address flood-related health issues.", Nepali: "рдмрд╛рдвреА рд╕рдореНрдмрдиреНрдзреА рд╕реНрд╡рд╛рд╕реНрдереНрдп рд╕рдорд╕реНрдпрд╛рд╣рд░реВ рд╕рдорд╛рдзрд╛рди рдЧрд░реНрди рдЪрд┐рдХрд┐рддреНрд╕рд╛ рд╕реЗрд╡рд╛ рдкреНрд░рджрд╛рдиред" },
"Agricultural Recovery": { English: "Restoring farmland and crops affected by floods.", Nepali: "рдмрд╛рдвреАрд▓реЗ рдкреНрд░рднрд╛рд╡рд┐рдд рдЦреЗрддрдмрд╛рд░реА рд░ рдмрд╛рд▓реАрд╣рд░реВ рдкреБрдирд░реНрд╕реНрдерд╛рдкрдирд╛ред" },
"Water System Repair": { English: "Fixing water supply systems damaged by floods.", Nepali: "рдмрд╛рдвреАрд▓реЗ рдХреНрд╖рддрд┐рдЧреНрд░рд╕реНрдд рдкрд╛рдиреА рдЖрдкреВрд░реНрддрд┐ рдкреНрд░рдгрд╛рд▓реАрд╣рд░реВ рдорд░реНрдорддред" },
"Community Rebuilding": { English: "Reconstructing community facilities and social structures.", Nepali: "рд╕рд╛рдореБрджрд╛рдпрд┐рдХ рд╕реБрд╡рд┐рдзрд╛рд╣рд░реВ рд░ рд╕рд╛рдорд╛рдЬрд┐рдХ рд╕рдВрд░рдЪрдирд╛рд╣рд░реВ рдкреБрдирд░реНрдирд┐рд░реНрдорд╛рдгред" },
"Mental Health Support": { English: "Counseling services for flood survivors' mental health.", Nepali: "рдмрд╛рдвреА рдмрд╛рдБрдЪреЗрдХрд╛рд╣рд░реВрдХреЛ рдорд╛рдирд╕рд┐рдХ рд╕реНрд╡рд╛рд╕реНрдереНрдпрдХрд╛ рд▓рд╛рдЧрд┐ рдкрд░рд╛рдорд░реНрд╢ рд╕реЗрд╡рд╛рд╣рд░реВред" },
"Road Reconstruction": { English: "Rebuilding roads to restore access post-flood.", Nepali: "рдмрд╛рдвреА рдкрдЫрд┐ рдкрд╣реБрдБрдЪ рдкреБрдирд░реНрд╕реНрдерд╛рдкрдирд╛ рдЧрд░реНрди рд╕рдбрдХрд╣рд░реВ рдкреБрдирд░реНрдирд┐рд░реНрдорд╛рдгред" },
"Economic Aid": { English: "Financial assistance to rebuild local economies.", Nepali: "рд╕реНрдерд╛рдиреАрдп рдЕрд░реНрдерддрдиреНрддреНрд░ рдкреБрдирд░реНрдирд┐рд░реНрдорд╛рдг рдЧрд░реНрди рдЖрд░реНрдерд┐рдХ рд╕рд╣рд╛рдпрддрд╛ред" },
"School Supplies": { English: "Providing materials to replace lost school resources.", Nepali: "рд╣рд░рд╛рдПрдХрд╛ рд╕реНрдХреВрд▓ рд╕реНрд░реЛрддрд╣рд░реВ рдкреНрд░рддрд┐рд╕реНрдерд╛рдкрди рдЧрд░реНрди рд╕рд╛рдордЧреНрд░реАрд╣рд░реВ рдкреНрд░рджрд╛рдиред" },
"Flood Defense Upgrades": { English: "Improving flood barriers and levees for future protection.", Nepali: "рднрд╡рд┐рд╖реНрдпрдХреЛ рд╕реБрд░рдХреНрд╖рд╛рдХрд╛ рд▓рд╛рдЧрд┐ рдмрд╛рдвреА рдЕрд╡рд░реЛрдз рд░ рддрдЯрдмрдиреНрдз рд╕реБрдзрд╛рд░ред" },
"Business Recovery Grants": { English: "Grants to help businesses recover from flood losses.", Nepali: "рдмрд╛рдвреА рд╣рд╛рдирд┐рдмрд╛рдЯ рд╡реНрдпрд╡рд╕рд╛рдпрд╣рд░реВ рдкреБрдирд░реНрдкреНрд░рд╛рдкреНрддрд┐рдХрд╛ рд▓рд╛рдЧрд┐ рдЕрдиреБрджрд╛рдиред" },
"Sanitation Restoration": { English: "Restoring sanitation systems to prevent disease outbreaks.", Nepali: "рд░реЛрдЧ рдкреНрд░рдХреЛрдк рд░реЛрдХреНрди рд╕рд░рд╕рдлрд╛рдЗ рдкреНрд░рдгрд╛рд▓реАрд╣рд░реВ рдкреБрдирд░реНрд╕реНрдерд╛рдкрдирд╛ред" },
"Livestock Replacement": { English: "Replacing lost livestock to restore agricultural livelihoods.", Nepali: "рдХреГрд╖рд┐ рдЬреАрд╡рд┐рдХреЛрдкрд╛рд░реНрдЬрди рдкреБрдирд░реНрд╕реНрдерд╛рдкрдирд╛ рдЧрд░реНрди рд╣рд░рд╛рдПрдХрд╛ рдкрд╢реБрдзрди рдкреНрд░рддрд┐рд╕реНрдерд╛рдкрдиред" },
"Public Awareness": { English: "Educating communities to prevent future flood impacts.", Nepali: "рднрд╡рд┐рд╖реНрдпрдХреЛ рдмрд╛рдвреА рдкреНрд░рднрд╛рд╡ рд░реЛрдХреНрди рд╕рдореБрджрд╛рдпрд╣рд░реВрд▓рд╛рдИ рд╢рд┐рдХреНрд╖рд┐рдд рдЧрд░реНрдиреЗред" },
"Install Green Roofs": { English: "Install vegetation on rooftops to reduce urban heat and provide insulation.", Nepali: "рд╢рд╣рд░реА рддрд╛рдк рдХрдо рдЧрд░реНрди рд░ рдЗрдиреНрд╕реБрд▓реЗрд╢рди рдкреНрд░рджрд╛рди рдЧрд░реНрди рдЫрддрдорд╛ рд╡рдирд╕реНрдкрддрд┐ рд╕реНрдерд╛рдкрдирд╛ рдЧрд░реНрдиреБрд╣реЛрд╕реНред" },
"Plant Shade Trees": { English: "Plant trees to provide shade and lower ambient temperatures.", Nepali: "рдЫрд╛рдпрд╛ рдкреНрд░рджрд╛рди рдЧрд░реНрди рд░ рд╡рд╛рддрд╛рд╡рд░рдгреАрдп рддрд╛рдкрдорд╛рди рдХрдо рдЧрд░реНрди рд░реВрдЦрд╣рд░реВ рд░реЛрдкреНрдиреБрд╣реЛрд╕реНред" },
"Use Reflective Pavements": { English: "Use reflective materials for roads to reduce heat absorption.", Nepali: "рддрд╛рдк рдЕрд╡рд╢реЛрд╖рдг рдХрдо рдЧрд░реНрди рд╕рдбрдХрд╣рд░реВрдорд╛ рдкреНрд░рддрд┐рдмрд┐рдореНрдмрд┐рдд рд╕рд╛рдордЧреНрд░реАрд╣рд░реВ рдкреНрд░рдпреЛрдЧ рдЧрд░реНрдиреБрд╣реЛрд╕реНред" },
"Improve Building Insulation": { English: "Enhance insulation to keep buildings cooler.", Nepali: "рднрд╡рдирд╣рд░реВрд▓рд╛рдИ рдЪрд┐рд╕реЛ рд░рд╛рдЦреНрди рдЗрдиреНрд╕реБрд▓реЗрд╢рди рд╕реБрдзрд╛рд░ рдЧрд░реНрдиреБрд╣реЛрд╕реНред" },
"Promote Cool Roofs": { English: "Encourage roofs that reflect sunlight to reduce heat.", Nepali: "рддрд╛рдк рдХрдо рдЧрд░реНрди рд╕реВрд░реНрдпрдХреЛ рдкреНрд░рдХрд╛рд╢ рдкреНрд░рддрд┐рдмрд┐рдореНрдмрд┐рдд рдЧрд░реНрдиреЗ рдЫрддрд╣рд░реВрд▓рд╛рдИ рдкреНрд░реЛрддреНрд╕рд╛рд╣рди рдЧрд░реНрдиреБрд╣реЛрд╕реНред" },
"Create Urban Green Spaces": { English: "Develop parks and green areas to cool cities.", Nepali: "рд╢рд╣рд░рд╣рд░реВрд▓рд╛рдИ рдЪрд┐рд╕реЛ рдмрдирд╛рдЙрди рдкрд╛рд░реНрдХрд╣рд░реВ рд░ рд╣рд░рд┐рдд рдХреНрд╖реЗрддреНрд░рд╣рд░реВ рд╡рд┐рдХрд╛рд╕ рдЧрд░реНрдиреБрд╣реЛрд╕реНред" },
"Install Solar Shades": { English: "Add shades to block sunlight from buildings.", Nepali: "рднрд╡рдирд╣рд░реВрдорд╛ рд╕реВрд░реНрдпрдХреЛ рдкреНрд░рдХрд╛рд╢ рд░реЛрдХреНрди рдЫрд╛рдпрд╛рд╣рд░реВ рдердкреНрдиреБрд╣реЛрд╕реНред" },
"Use Energy-Efficient Cooling": { English: "Implement efficient air conditioning to reduce heat.", Nepali: "рддрд╛рдк рдХрдо рдЧрд░реНрди рдХреБрд╢рд▓ рд╡рд╛рддрд╛рдиреБрдХреВрд▓рди рд▓рд╛рдЧреВ рдЧрд░реНрдиреБрд╣реЛрд╕реНред" },
"Increase Ventilation Systems": { English: "Improve airflow in buildings to lower temperatures.", Nepali: "рддрд╛рдкрдорд╛рди рдХрдо рдЧрд░реНрди рднрд╡рдирд╣рд░реВрдорд╛ рд╣рд╛рд╡рд╛ рдкреНрд░рд╡рд╛рд╣ рд╕реБрдзрд╛рд░ рдЧрд░реНрдиреБрд╣реЛрд╕реНред" },
"Promote Light-Colored Buildings": { English: "Encourage buildings with light colors to reflect heat.", Nepali: "рддрд╛рдк рдкреНрд░рддрд┐рдмрд┐рдореНрдмрд┐рдд рдЧрд░реНрди рд╣рд▓реНрдХрд╛ рд░рдЩрдХрд╛ рднрд╡рдирд╣рд░реВрд▓рд╛рдИ рдкреНрд░реЛрддреНрд╕рд╛рд╣рди рдЧрд░реНрдиреБрд╣реЛрд╕реНред" },
"Urban Heat Mapping": { English: "Map heat-prone areas to prioritize mitigation efforts.", Nepali: "рдиреНрдпреВрдиреАрдХрд░рдг рдкреНрд░рдпрд╛рд╕рд╣рд░реВрд▓рд╛рдИ рдкреНрд░рд╛рдердорд┐рдХрддрд╛ рджрд┐рди рддрд╛рдк-рдкреНрд░рд╡рдг рдХреНрд╖реЗрддреНрд░рд╣рд░реВрдХреЛ рдирдХреНрд╢рд╛рдВрдХрдиред" },
"Install Mist Systems": { English: "Set up misting systems in public areas for cooling.", Nepali: "рд╢реАрддрд▓рдирдХрд╛ рд▓рд╛рдЧрд┐ рд╕рд╛рд░реНрд╡рдЬрдирд┐рдХ рдХреНрд╖реЗрддреНрд░рд╣рд░реВрдорд╛ рдорд┐рд╕реНрдЯ рдкреНрд░рдгрд╛рд▓реАрд╣рд░реВ рд╕реНрдерд╛рдкрдирд╛ рдЧрд░реНрдиреБрд╣реЛрд╕реНред" },
"Enhance Public Fountains": { English: "Improve fountains to provide cooling in public spaces.", Nepali: "рд╕рд╛рд░реНрд╡рдЬрдирд┐рдХ рд╕реНрдерд╛рдирд╣рд░реВрдорд╛ рд╢реАрддрд▓рди рдкреНрд░рджрд╛рди рдЧрд░реНрди рдлреЛрд╣рд░рд╛рд╣рд░реВ рд╕реБрдзрд╛рд░ рдЧрд░реНрдиреБрд╣реЛрд╕реНред" },
"Reflective Window Films": { English: "Apply films to windows to reduce heat gain.", Nepali: "рддрд╛рдк рд╡реГрджреНрдзрд┐ рдХрдо рдЧрд░реНрди рдЭреНрдпрд╛рд▓рд╣рд░реВрдорд╛ рдлрд┐рд▓реНрдорд╣рд░реВ рд▓рд╛рдЧреВ рдЧрд░реНрдиреБрд╣реЛрд╕реНред" },
"Promote Green Walls": { English: "Encourage vertical gardens to cool building exteriors.", Nepali: "рднрд╡рдирдХреЛ рдмрд╛рд╣рд┐рд░реА рднрд╛рдЧрд▓рд╛рдИ рдЪрд┐рд╕реЛ рдмрдирд╛рдЙрди рдард╛рдбреЛ рдмрдЧреИрдВрдЪрд╛рд╣рд░реВрд▓рд╛рдИ рдкреНрд░реЛрддреНрд╕рд╛рд╣рди рдЧрд░реНрдиреБрд╣реЛрд╕реНред" },
"Heat-Resistant Materials": { English: "Use materials that withstand high temperatures in construction.", Nepali: "рдирд┐рд░реНрдорд╛рдгрдорд╛ рдЙрдЪреНрдЪ рддрд╛рдкрдорд╛рди рд╕рд╣рди рд╕рдХреНрдиреЗ рд╕рд╛рдордЧреНрд░реАрд╣рд░реВ рдкреНрд░рдпреЛрдЧ рдЧрд░реНрдиреБрд╣реЛрд╕реНред" },
"Shade Structures": { English: "Install awnings or canopies in public areas for shade.", Nepali: "рд╕рд╛рд░реНрд╡рдЬрдирд┐рдХ рдХреНрд╖реЗрддреНрд░рд╣рд░реВрдорд╛ рдЫрд╛рдпрд╛рдХрд╛ рд▓рд╛рдЧрд┐ рддреНрд░рд┐рдкрд╛рд▓ рд╡рд╛ рдХреНрдпрд╛рдиреЛрдкреАрд╣рд░реВ рд╕реНрдерд╛рдкрдирд╛ рдЧрд░реНрдиреБрд╣реЛрд╕реНред" },
"Cool Pavement Coatings": { English: "Apply coatings to roads to reflect heat.", Nepali: "рддрд╛рдк рдкреНрд░рддрд┐рдмрд┐рдореНрдмрд┐рдд рдЧрд░реНрди рд╕рдбрдХрд╣рд░реВрдорд╛ рдХреЛрдЯрд┐рдВрдЧрд╣рд░реВ рд▓рд╛рдЧреВ рдЧрд░реНрдиреБрд╣реЛрд╕реНред" },
"Public Water Stations": { English: "Set up water distribution points to combat dehydration.", Nepali: "рдбрд┐рд╣рд╛рдЗрдбреНрд░реЗрд╢рдирд╕рдБрдЧ рд▓рдбреНрди рдкрд╛рдиреА рд╡рд┐рддрд░рдг рдмрд┐рдиреНрджреБрд╣рд░реВ рд╕реНрдерд╛рдкрдирд╛ рдЧрд░реНрдиреБрд╣реЛрд╕реНред" },
"Urban Forestry Programs": { English: "Promote tree planting to increase urban canopy cover.", Nepali: "рд╢рд╣рд░реА рдЫрддреНрд░рдЫрд╛рдпрд╛рдБ рдмрдврд╛рдЙрди рд░реВрдЦ рд░реЛрдкрдгрд▓рд╛рдИ рдкреНрд░реЛрддреНрд╕рд╛рд╣рди рдЧрд░реНрдиреБрд╣реЛрд╕реНред" },
"Elderly Residents": { English: "Older individuals with higher susceptibility to heat-related illnesses.", Nepali: "рддрд╛рдк рд╕рдореНрдмрдиреНрдзреА рд░реЛрдЧрд╣рд░реВрдХреЛ рдЙрдЪреНрдЪ рдЬреЛрдЦрд┐рдо рднрдПрдХрд╛ рд╡реГрджреНрдз рд╡реНрдпрдХреНрддрд┐рд╣рд░реВред" },
"Low-Income Communities": { English: "Communities with limited resources to cope with heatwaves.", Nepali: "рдЧрд░реНрдореАрдХреЛ рд▓рд╣рд░рд╕рдБрдЧ рд╕рд╛рдордирд╛ рдЧрд░реНрди рд╕реАрдорд┐рдд рд╕реНрд░реЛрдд рднрдПрдХрд╛ рд╕рдореБрджрд╛рдпрд╣рд░реВред" },
"Children": { English: "Young individuals vulnerable to heat stress and dehydration.", Nepali: "рддрд╛рдк рддрдирд╛рд╡ рд░ рдбрд┐рд╣рд╛рдЗрдбреНрд░реЗрд╢рдирдкреНрд░рддрд┐ рдХрдордЬреЛрд░ рдмрд╛рд▓рдмрд╛рд▓рд┐рдХрд╛рд╣рд░реВред" },
"Homeless Population": { English: "Individuals without shelter exposed to extreme heat.", Nepali: "рдЪрд░рдо рддрд╛рдкрдорд╛ рдЙрдЬрд╛рдЧрд░ рднрдПрдХрд╛ рдЖрд╢реНрд░рдпрд╡рд┐рд╣реАрди рд╡реНрдпрдХреНрддрд┐рд╣рд░реВред" },
"Poor Housing Conditions": { English: "Homes with inadequate insulation or cooling systems.", Nepali: "рдЕрдкрд░реНрдпрд╛рдкреНрдд рдЗрдиреНрд╕реБрд▓реЗрд╢рди рд╡рд╛ рд╢реАрддрд▓рди рдкреНрд░рдгрд╛рд▓реА рднрдПрдХрд╛ рдШрд░рд╣рд░реВред" },
"Limited Cooling Access": { English: "Lack of access to cooling devices or facilities.", Nepali: "рд╢реАрддрд▓рди рдЙрдкрдХрд░рдгрд╣рд░реВ рд╡рд╛ рд╕реБрд╡рд┐рдзрд╛рд╣рд░реВрдорд╛ рдкрд╣реБрдБрдЪрдХреЛ рдЕрднрд╛рд╡ред" },
"Outdoor Workers": { English: "Workers exposed to heat during outdoor activities.", Nepali: "рдмрд╛рд╣рд┐рд░реА рдЧрддрд┐рд╡рд┐рдзрд┐рд╣рд░реВрдорд╛ рддрд╛рдкрдорд╛ рдЙрдЬрд╛рдЧрд░ рднрдПрдХрд╛ рдХрд╛рдорджрд╛рд░рд╣рд░реВред" },
"Chronic Illness": { English: "Individuals with health conditions worsened by heat.", Nepali: "рддрд╛рдкрд▓реЗ рдЦрд░рд╛рдм рд╣реБрдиреЗ рд╕реНрд╡рд╛рд╕реНрдереНрдп рдЕрд╡рд╕реНрдерд╛рд╣рд░реВ рднрдПрдХрд╛ рд╡реНрдпрдХреНрддрд┐рд╣рд░реВред" },
"Dense Urban Areas": { English: "Crowded cities with elevated heat retention.", Nepali: "рдЙрдЪреНрдЪ рддрд╛рдк рд╕рдВрд░рдХреНрд╖рдг рднрдПрдХрд╛ рднреАрдбрднрд╛рдб рд╢рд╣рд░рд╣рд░реВред" },
"Lack of Green Spaces": { English: "Areas without parks or trees to mitigate heat.", Nepali: "рддрд╛рдк рдХрдо рдЧрд░реНрди рдкрд╛рд░реНрдХ рд╡рд╛ рд░реВрдЦрд╣рд░реВ рдирднрдПрдХрд╛ рдХреНрд╖реЗрддреНрд░рд╣рд░реВред" },
"No Air Conditioning": { English: "Buildings without air conditioning during heatwaves.", Nepali: "рдЧрд░реНрдореАрдХреЛ рд▓рд╣рд░рдорд╛ рд╡рд╛рддрд╛рдиреБрдХреВрд▓рди рдирднрдПрдХрд╛ рднрд╡рдирд╣рд░реВред" },
"High-Rise Buildings": { English: "Tall buildings with heat-trapping upper floors.", Nepali: "рддрд╛рдк рдлрд╕рд╛рдЙрдиреЗ рдорд╛рдерд┐рд▓реНрд▓реЛ рддрд▓реНрд▓рд╛ рднрдПрдХрд╛ рдЕрдЧреНрд▓рд╛ рднрд╡рдирд╣рд░реВред" },
"Limited Water Access": { English: "Restricted access to drinking water during heatwaves.", Nepali: "рдЧрд░реНрдореАрдХреЛ рд▓рд╣рд░рдорд╛ рдкрд┐рдЙрдиреЗ рдкрд╛рдиреАрдорд╛ рд╕реАрдорд┐рдд рдкрд╣реБрдБрдЪред" },
"Poor Ventilation": { English: "Buildings with inadequate airflow increasing heat risk.", Nepali: "рдЕрдкрд░реНрдпрд╛рдкреНрдд рд╣рд╛рд╡рд╛ рдкреНрд░рд╡рд╛рд╣рд▓реЗ рддрд╛рдк рдЬреЛрдЦрд┐рдо рдмрдврд╛рдЙрдиреЗ рднрд╡рдирд╣рд░реВред" },
"Disabled Individuals": { English: "People with disabilities facing heat coping challenges.", Nepali: "рдЧрд░реНрдореА рд╕рд╛рдордирд╛ рдЧрд░реНрди рдЪреБрдиреМрддреАрд╣рд░реВрдХреЛ рд╕рд╛рдордирд╛ рдЧрд░реНрдиреЗ рдЕрдкрд╛рдЩреНрдЧ рд╡реНрдпрдХреНрддрд┐рд╣рд░реВред" },
"Urban Heat Islands": { English: "Urban areas with higher temperatures due to infrastructure.", Nepali: "рдкреВрд░реНрд╡рд╛рдзрд╛рд░рдХрд╛ рдХрд╛рд░рдг рдЙрдЪреНрдЪ рддрд╛рдкрдорд╛рди рднрдПрдХрд╛ рд╢рд╣рд░реА рдХреНрд╖реЗрддреНрд░рд╣рд░реВред" },
"Lack of Shade": { English: "Areas without structures or trees for heat relief.", Nepali: "рддрд╛рдк рд░рд╛рд╣рддрдХрд╛ рд▓рд╛рдЧрд┐ рд╕рдВрд░рдЪрдирд╛ рд╡рд╛ рд░реВрдЦрд╣рд░реВ рдирднрдПрдХрд╛ рдХреНрд╖реЗрддреНрд░рд╣рд░реВред" },
"Overcrowded Housing": { English: "Crowded homes with increased heat exposure risks.", Nepali: "рддрд╛рдк рдЬреЛрдЦрд┐рдо рдмрдврд╛рдЙрдиреЗ рднреАрдбрднрд╛рдб рдШрд░рд╣рд░реВред" },
"Insufficient Healthcare": { English: "Limited medical services for heat-related illnesses.", Nepali: "рддрд╛рдк рд╕рдореНрдмрдиреНрдзреА рд░реЛрдЧрд╣рд░реВрдХрд╛ рд▓рд╛рдЧрд┐ рд╕реАрдорд┐рдд рдЪрд┐рдХрд┐рддреНрд╕рд╛ рд╕реЗрд╡рд╛рд╣рд░реВред" },
"No Early Warning": { English: "Lack of systems to alert communities of heatwaves.", Nepali: "рдЧрд░реНрдореАрдХреЛ рд▓рд╣рд░рдХреЛ рдЪреЗрддрд╛рд╡рдиреА рджрд┐рдиреЗ рдкреНрд░рдгрд╛рд▓реАрд╣рд░реВрдХреЛ рдЕрднрд╛рд╡ред" },
"Cooling Centers": { English: "Designated facilities to provide relief from heat.", Nepali: "рдЧрд░реНрдореАрдмрд╛рдЯ рд░рд╛рд╣рдд рдкреНрд░рджрд╛рди рдЧрд░реНрди рддреЛрдХрд┐рдПрдХрд╛ рд╕реБрд╡рд┐рдзрд╛рд╣рд░реВред" },
"Portable Fans": { English: "Portable devices to improve air circulation.", Nepali: "рд╣рд╛рд╡рд╛ рд╕рдВрдЪрд╛рд░ рд╕реБрдзрд╛рд░ рдЧрд░реНрди рдкреЛрд░реНрдЯреЗрдмрд▓ рдЙрдкрдХрд░рдгрд╣рд░реВред" },
"Water Stations": { English: "Public points for distributing drinking water.", Nepali: "рдкрд┐рдЙрдиреЗ рдкрд╛рдиреА рд╡рд┐рддрд░рдгрдХрд╛ рд▓рд╛рдЧрд┐ рд╕рд╛рд░реНрд╡рдЬрдирд┐рдХ рдмрд┐рдиреНрджреБрд╣рд░реВред" },
"Medical Teams": { English: "Trained personnel for heat-related medical emergencies.", Nepali: "рддрд╛рдк рд╕рдореНрдмрдиреНрдзреА рдЪрд┐рдХрд┐рддреНрд╕рд╛ рдЖрдкрддрдХрд╛рд▓рдХрд╛ рд▓рд╛рдЧрд┐ рдкреНрд░рд╢рд┐рдХреНрд╖рд┐рдд рдХрд░реНрдордЪрд╛рд░реАрд╣рд░реВред" },
"Emergency Kits": { English: "Kits with essentials for heatwave survival.", Nepali: "рдЧрд░реНрдореАрдХреЛ рд▓рд╣рд░ рдмрд╛рдБрдЪреНрдирдХрд╛ рд▓рд╛рдЧрд┐ рдЖрд╡рд╢реНрдпрдХ рд╕рд╛рдордЧреНрд░реАрд╣рд░реВ рд╕рд╣рд┐рддрдХреЛ рдХрд┐рдЯрд╣рд░реВред" },
"Shade Tents": { English: "Temporary structures for shade in public areas.", Nepali: "рд╕рд╛рд░реНрд╡рдЬрдирд┐рдХ рдХреНрд╖реЗрддреНрд░рд╣рд░реВрдорд╛ рдЫрд╛рдпрд╛рдХрд╛ рд▓рд╛рдЧрд┐ рдЕрд╕реНрдерд╛рдпреА рд╕рдВрд░рдЪрдирд╛рд╣рд░реВред" },
"Hydration Packs": { English: "Portable water carriers for personal hydration.", Nepali: "рд╡реНрдпрдХреНрддрд┐рдЧрдд рд╣рд╛рдЗрдбреНрд░реЗрд╢рдирдХрд╛ рд▓рд╛рдЧрд┐ рдкреЛрд░реНрдЯреЗрдмрд▓ рдкрд╛рдиреА рдмреЛрдХреНрдиреЗрд╣рд░реВред" },
"Mobile Cooling Units": { English: "Portable air conditioners for emergency cooling.", Nepali: "рдЖрдХрд╕реНрдорд┐рдХ рд╢реАрддрд▓рдирдХрд╛ рд▓рд╛рдЧрд┐ рдкреЛрд░реНрдЯреЗрдмрд▓ рд╡рд╛рддрд╛рдиреБрдХреВрд▓рди рдПрдХрд╛рдЗрд╣рд░реВред" },
"Community Volunteers": { English: "Local volunteers trained for heatwave response.", Nepali: "рдЧрд░реНрдореАрдХреЛ рд▓рд╣рд░ рдкреНрд░рддрд┐рдХреНрд░рд┐рдпрд╛рдХрд╛ рд▓рд╛рдЧрд┐ рдкреНрд░рд╢рд┐рдХреНрд╖рд┐рдд рд╕реНрдерд╛рдиреАрдп рд╕реНрд╡рдпрдВрд╕реЗрд╡рдХрд╣рд░реВред" },
"Power Generators": { English: "Backup power for cooling systems during outages.", Nepali: "рд╡рд┐рджреНрдпреБрддреН рдЕрд╡рд░реЛрдзрдорд╛ рд╢реАрддрд▓рди рдкреНрд░рдгрд╛рд▓реАрд╣рд░реВрдХрд╛ рд▓рд╛рдЧрд┐ рдмреНрдпрд╛рдХрдЕрдк рд╢рдХреНрддрд┐ред" },
"Cooling Vests": { English: "Wearable garments to reduce body heat.", Nepali: "рд╢рд╛рд░реАрд░рд┐рдХ рддрд╛рдк рдХрдо рдЧрд░реНрди рд▓рдЧрд╛рдЙрдиреЗ рдХрдкрдбрд╛рд╣рд░реВред" },
"Public Transport AC": { English: "Air-conditioned public transport for commuter relief.", Nepali: "рдпрд╛рддреНрд░реА рд░рд╛рд╣рддрдХрд╛ рд▓рд╛рдЧрд┐ рд╡рд╛рддрд╛рдиреБрдХреВрд▓рд┐рдд рд╕рд╛рд░реНрд╡рдЬрдирд┐рдХ рдпрд╛рддрд╛рдпрд╛рддред" },
"Heat Alert Systems": { English: "Systems to warn communities of heatwave risks.", Nepali: "рдЧрд░реНрдореАрдХреЛ рд▓рд╣рд░ рдЬреЛрдЦрд┐рдорд╣рд░реВрдХреЛ рдЪреЗрддрд╛рд╡рдиреА рджрд┐рдиреЗ рдкреНрд░рдгрд╛рд▓реАрд╣рд░реВред" },
"First Aid Supplies": { English: "Medical supplies for heat-related emergencies.", Nepali: "рддрд╛рдк рд╕рдореНрдмрдиреНрдзреА рдЖрдкрддрдХрд╛рд▓рдХрд╛ рд▓рд╛рдЧрд┐ рдЪрд┐рдХрд┐рддреНрд╕рд╛ рд╕рд╛рдордЧреНрд░реАрд╣рд░реВред" },
"Emergency Vehicles": { English: "Vehicles for transporting people during heatwaves.", Nepali: "рдЧрд░реНрдореАрдХреЛ рд▓рд╣рд░рдорд╛ рдорд╛рдирд┐рд╕рд╣рд░реВ рд▓реИрдЬрд╛рди рд╕рд╡рд╛рд░реА рд╕рд╛рдзрдирд╣рд░реВред" },
"Cooling Shelters": { English: "Safe locations with cooling for heatwave relief.", Nepali: "рдЧрд░реНрдореАрдХреЛ рд▓рд╣рд░ рд░рд╛рд╣рддрдХрд╛ рд▓рд╛рдЧрд┐ рд╢реАрддрд▓рди рд╕рд╣рд┐рддрдХрд╛ рд╕реБрд░рдХреНрд╖рд┐рдд рд╕реНрдерд╛рдирд╣рд░реВред" },
"Communication Radios": { English: "Radios for coordinating heatwave response efforts.", Nepali: "рдЧрд░реНрдореАрдХреЛ рд▓рд╣рд░ рдкреНрд░рддрд┐рдХреНрд░рд┐рдпрд╛ рдкреНрд░рдпрд╛рд╕рд╣рд░реВ рд╕рдордиреНрд╡рдп рдЧрд░реНрди рд░реЗрдбрд┐рдпреЛрд╣рд░реВред" },
"Water Tankers": { English: "Vehicles delivering water to affected areas.", Nepali: "рдкреНрд░рднрд╛рд╡рд┐рдд рдХреНрд╖реЗрддреНрд░рд╣рд░реВрдорд╛ рдкрд╛рдиреА рдкреБрд░реНтАНрдпрд╛рдЙрдиреЗ рд╕рд╡рд╛рд░реА рд╕рд╛рдзрдирд╣рд░реВред" },
"Trained Responders": { English: "Personnel trained to handle heatwave emergencies.", Nepali: "рдЧрд░реНрдореАрдХреЛ рд▓рд╣рд░ рдЖрдкрддрдХрд╛рд▓ рд╕рдореНрд╣рд╛рд▓реНрди рдкреНрд░рд╢рд┐рдХреНрд╖рд┐рдд рдХрд░реНрдордЪрд╛рд░реАрд╣рд░реВред" },
"Cooling Mats": { English: "Portable mats to provide personal cooling relief.", Nepali: "рд╡реНрдпрдХреНрддрд┐рдЧрдд рд╢реАрддрд▓рди рд░рд╛рд╣рдд рдкреНрд░рджрд╛рди рдЧрд░реНрди рдкреЛрд░реНрдЯреЗрдмрд▓ рдореНрдпрд╛рдЯрд╣рд░реВред" },
"Heatwave Action Plans": { English: "Organized strategies for responding to heatwave events.", Nepali: "рдЧрд░реНрдореАрдХреЛ рд▓рд╣рд░ рдШрдЯрдирд╛рд╣рд░реВрдорд╛ рдкреНрд░рддрд┐рдХреНрд░рд┐рдпрд╛ рджрд┐рди рд╕рдВрдЧрдард┐рдд рд░рдгрдиреАрддрд┐рд╣рд░реВред" },
"Public Awareness Campaigns": { English: "Educating communities on heatwave risks and safety.", Nepali: "рдЧрд░реНрдореАрдХреЛ рд▓рд╣рд░ рдЬреЛрдЦрд┐рдо рд░ рд╕реБрд░рдХреНрд╖рд╛рдорд╛ рд╕рдореБрджрд╛рдпрд╣рд░реВрд▓рд╛рдИ рд╢рд┐рдХреНрд╖рд┐рдд рдЧрд░реНрдиреЗред" },
"Heatwave Drills": { English: "Simulated exercises to practice heatwave response.", Nepali: "рдЧрд░реНрдореАрдХреЛ рд▓рд╣рд░ рдкреНрд░рддрд┐рдХреНрд░рд┐рдпрд╛рдХреЛ рдЕрднреНрдпрд╛рд╕ рдЧрд░реНрди рдирдХреНрдХрд▓реА рдЕрднреНрдпрд╛рд╕рд╣рд░реВред" },
"Community Training": { English: "Training residents to prepare for heatwaves.", Nepali: "рдЧрд░реНрдореАрдХреЛ рд▓рд╣рд░рдХреЛ рддрдпрд╛рд░реАрдХрд╛ рд▓рд╛рдЧрд┐ рдмрд╛рд╕рд┐рдиреНрджрд╛рд╣рд░реВрд▓рд╛рдИ рддрд╛рд▓рд┐рдо рджрд┐рдиреЗред" },
"Early Warning Systems": { English: "Systems to alert communities of impending heatwaves.", Nepali: "рдЖрдЧрд╛рдореА рдЧрд░реНрдореАрдХреЛ рд▓рд╣рд░рдХреЛ рдЪреЗрддрд╛рд╡рдиреА рджрд┐рдиреЗ рдкреНрд░рдгрд╛рд▓реАрд╣рд░реВред" },
"School Education Programs": { English: "Teaching students about heatwave safety measures.", Nepali: "рдЧрд░реНрдореАрдХреЛ рд▓рд╣рд░ рд╕реБрд░рдХреНрд╖рд╛ рдЙрдкрд╛рдпрд╣рд░реВ рдмрд╛рд░реЗ рд╡рд┐рджреНрдпрд╛рд░реНрдереАрд╣рд░реВрд▓рд╛рдИ рд╕рд┐рдХрд╛рдЙрдиреЗред" },
"Hydration Education": { English: "Educating public on importance of hydration during heatwaves.", Nepali: "рдЧрд░реНрдореАрдХреЛ рд▓рд╣рд░рдорд╛ рд╣рд╛рдЗрдбреНрд░реЗрд╢рдирдХреЛ рдорд╣рддреНрд╡ рдмрд╛рд░реЗ рдЬрдирддрд╛рд▓рд╛рдИ рд╢рд┐рдХреНрд╖рд┐рдд рдЧрд░реНрдиреЗред" },
"Cooling Center Maps": { English: "Maps showing locations of cooling centers during heatwaves.", Nepali: "рдЧрд░реНрдореАрдХреЛ рд▓рд╣рд░рдорд╛ рд╢реАрддрд▓рди рдХреЗрдиреНрджреНрд░рд╣рд░реВрдХреЛ рд╕реНрдерд╛рди рджреЗрдЦрд╛рдЙрдиреЗ рдирдХреНрд╢рд╛рд╣рд░реВред" },
"Volunteer Training": { English: "Training volunteers for heatwave response coordination.", Nepali: "рдЧрд░реНрдореАрдХреЛ рд▓рд╣рд░ рдкреНрд░рддрд┐рдХреНрд░рд┐рдпрд╛ рд╕рдордиреНрд╡рдпрдХрд╛ рд▓рд╛рдЧрд┐ рд╕реНрд╡рдпрдВрд╕реЗрд╡рдХрд╣рд░реВрд▓рд╛рдИ рддрд╛рд▓рд┐рдо рджрд┐рдиреЗред" },
"Heat Risk Assessments": { English: "Evaluating heatwave risks to prioritize preparedness.", Nepali: "рддрдпрд╛рд░реАрд▓рд╛рдИ рдкреНрд░рд╛рдердорд┐рдХрддрд╛ рджрд┐рди рдЧрд░реНрдореАрдХреЛ рд▓рд╣рд░ рдЬреЛрдЦрд┐рдорд╣рд░реВрдХреЛ рдореВрд▓реНрдпрд╛рдВрдХрдиред" },
"Emergency Contact Lists": { English: "Lists of contacts for heatwave emergency services.", Nepali: "рдЧрд░реНрдореАрдХреЛ рд▓рд╣рд░ рдЖрдкрддрдХрд╛рд▓реАрди рд╕реЗрд╡рд╛рд╣рд░реВрдХрд╛ рд▓рд╛рдЧрд┐ рд╕рдореНрдкрд░реНрдХрд╣рд░реВрдХреЛ рд╕реВрдЪреАред" },
"Weather Monitoring": { English: "Tracking weather patterns to predict heatwaves.", Nepali: "рдЧрд░реНрдореАрдХреЛ рд▓рд╣рд░рдХреЛ рднрд╡рд┐рд╖реНрдпрд╡рд╛рдгреА рдЧрд░реНрди рдореМрд╕рдо рдврд╛рдБрдЪрд╛рд╣рд░реВрдХреЛ рдирд┐рдЧрд░рд╛рдиреАред" },
"Public Workshops": { English: "Workshops to teach heatwave preparedness strategies.", Nepali: "рдЧрд░реНрдореАрдХреЛ рд▓рд╣рд░ рддрдпрд╛рд░реА рд░рдгрдиреАрддрд┐рд╣рд░реВ рд╕рд┐рдХрд╛рдЙрди рдХрд╛рд░реНрдпрд╢рд╛рд▓рд╛рд╣рд░реВред" },
"Cooling Shelter Plans": { English: "Plans for establishing cooling shelters during heatwaves.", Nepali: "рдЧрд░реНрдореАрдХреЛ рд▓рд╣рд░рдорд╛ рд╢реАрддрд▓рди рдЖрд╢реНрд░рдпрд╣рд░реВ рд╕реНрдерд╛рдкрдирд╛ рдЧрд░реНрдиреЗ рдпреЛрдЬрдирд╛рд╣рд░реВред" },
"SMS Alert Systems": { English: "Mobile notifications for heatwave warnings.", Nepali: "рдЧрд░реНрдореАрдХреЛ рд▓рд╣рд░ рдЪреЗрддрд╛рд╡рдиреАрдХрд╛ рд▓рд╛рдЧрд┐ рдореЛрдмрд╛рдЗрд▓ рд╕реВрдЪрдирд╛рд╣рд░реВред" },
"Community Response Teams": { English: "Local teams trained for heatwave emergency response.", Nepali: "рдЧрд░реНрдореАрдХреЛ рд▓рд╣рд░ рдЖрдкрддрдХрд╛рд▓реАрди рдкреНрд░рддрд┐рдХреНрд░рд┐рдпрд╛рдХрд╛ рд▓рд╛рдЧрд┐ рдкреНрд░рд╢рд┐рдХреНрд╖рд┐рдд рд╕реНрдерд╛рдиреАрдп рдЯреЛрд▓реАрд╣рд░реВред" },
"Heat Safety Guidelines": { English: "Guidelines for safe practices during heatwaves.", Nepali: "рдЧрд░реНрдореАрдХреЛ рд▓рд╣рд░рдорд╛ рд╕реБрд░рдХреНрд╖рд┐рдд рдЕрднреНрдпрд╛рд╕рд╣рд░реВрдХрд╛ рд▓рд╛рдЧрд┐ рджрд┐рд╢рд╛рдирд┐рд░реНрджреЗрд╢рд╣рд░реВред" },
"Urban Heat Mapping": { English: "Mapping urban areas to identify heat-prone zones.", Nepali: "рддрд╛рдк-рдкреНрд░рд╡рдг рдХреНрд╖реЗрддреНрд░рд╣рд░реВ рдкрд╣рд┐рдЪрд╛рди рдЧрд░реНрди рд╢рд╣рд░реА рдХреНрд╖реЗрддреНрд░рд╣рд░реВрдХреЛ рдирдХреНрд╢рд╛рдВрдХрдиред" },
"Emergency Supply Kits": { English: "Kits with essentials for heatwave preparedness.", Nepali: "рдЧрд░реНрдореАрдХреЛ рд▓рд╣рд░ рддрдпрд╛рд░реАрдХрд╛ рд▓рд╛рдЧрд┐ рдЖрд╡рд╢реНрдпрдХ рд╕рд╛рдордЧреНрд░реАрд╣рд░реВ рд╕рд╣рд┐рддрдХреЛ рдХрд┐рдЯрд╣рд░реВред" },
"Local Heatwave Protocols": { English: "Localized procedures for heatwave response.", Nepali: "рдЧрд░реНрдореАрдХреЛ рд▓рд╣рд░ рдкреНрд░рддрд┐рдХреНрд░рд┐рдпрд╛рдХрд╛ рд▓рд╛рдЧрд┐ рд╕реНрдерд╛рдиреАрдп рдкреНрд░рдХреНрд░рд┐рдпрд╛рд╣рд░реВред" },
"Open Cooling Centers": { English: "Establish facilities for public heat relief.", Nepali: "рд╕рд╛рд░реНрд╡рдЬрдирд┐рдХ рддрд╛рдк рд░рд╛рд╣рддрдХрд╛ рд▓рд╛рдЧрд┐ рд╕реБрд╡рд┐рдзрд╛рд╣рд░реВ рд╕реНрдерд╛рдкрдирд╛ рдЧрд░реНрдиреБрд╣реЛрд╕реНред" },
"Distribute Water": { English: "Provide drinking water to prevent dehydration.", Nepali: "рдбрд┐рд╣рд╛рдЗрдбреНрд░реЗрд╢рди рд░реЛрдХреНрди рдкрд┐рдЙрдиреЗ рдкрд╛рдиреА рдкреНрд░рджрд╛рди рдЧрд░реНрдиреБрд╣реЛрд╕реНред" },
"Medical Assistance": { English: "Offer medical care for heat-related illnesses.", Nepali: "рддрд╛рдк рд╕рдореНрдмрдиреНрдзреА рд░реЛрдЧрд╣рд░реВрдХрд╛ рд▓рд╛рдЧрд┐ рдЪрд┐рдХрд┐рддреНрд╕рд╛ рд╣реЗрд░рдЪрд╛рд╣ рдкреНрд░рджрд╛рди рдЧрд░реНрдиреБрд╣реЛрд╕реНред" },
"Emergency Transport": { English: "Vehicles to move vulnerable people to safety.", Nepali: "рдЬреЛрдЦрд┐рдордорд╛ рд░рд╣реЗрдХрд╛ рдорд╛рдирд┐рд╕рд╣рд░реВрд▓рд╛рдИ рд╕реБрд░рдХреНрд╖рд┐рдд рд╕реНрдерд╛рдирдорд╛ рд▓реИрдЬрд╛рди рд╕рд╡рд╛рд░реА рд╕рд╛рдзрдирд╣рд░реВред" },
"Fan Distribution": { English: "Distribute fans to improve air circulation.", Nepali: "рд╣рд╛рд╡рд╛ рд╕рдВрдЪрд╛рд░ рд╕реБрдзрд╛рд░ рдЧрд░реНрди рдкрдВрдЦрд╛рд╣рд░реВ рд╡рд┐рддрд░рдг рдЧрд░реНрдиреБрд╣реЛрд╕реНред" },
"Mobile Clinics": { English: "Portable medical units for heatwave emergencies.", Nepali: "рдЧрд░реНрдореАрдХреЛ рд▓рд╣рд░ рдЖрдкрддрдХрд╛рд▓рдХрд╛ рд▓рд╛рдЧрд┐ рдкреЛрд░реНрдЯреЗрдмрд▓ рдЪрд┐рдХрд┐рддреНрд╕рд╛ рдПрдХрд╛рдЗрд╣рд░реВред" },
"Heatstroke Treatment": { English: "Immediate treatment for heatstroke victims.", Nepali: "рддрд╛рдкрдШрд╛рдд рдкреАрдбрд┐рддрд╣рд░реВрдХрд╛ рд▓рд╛рдЧрд┐ рддрддреНрдХрд╛рд▓ рдЙрдкрдЪрд╛рд░ред" },
"Public Hydration Points": { English: "Set up water stations in public areas.", Nepali: "рд╕рд╛рд░реНрд╡рдЬрдирд┐рдХ рдХреНрд╖реЗрддреНрд░рд╣рд░реВрдорд╛ рдкрд╛рдиреА рд╕реНрдЯреЗрд╢рдирд╣рд░реВ рд╕реНрдерд╛рдкрдирд╛ рдЧрд░реНрдиреБрд╣реЛрд╕реНред" },
"Volunteer Deployment": { English: "Deploy volunteers to assist during heatwaves.", Nepali: "рдЧрд░реНрдореАрдХреЛ рд▓рд╣рд░рдорд╛ рд╕рд╣рдпреЛрдЧ рдЧрд░реНрди рд╕реНрд╡рдпрдВрд╕реЗрд╡рдХрд╣рд░реВ рдкрд░рд┐рдЪрд╛рд▓рди рдЧрд░реНрдиреБрд╣реЛрд╕реНред" },
"Emergency Broadcasts": { English: "Broadcast updates for heatwave safety.", Nepali: "рдЧрд░реНрдореАрдХреЛ рд▓рд╣рд░ рд╕реБрд░рдХреНрд╖рд╛рдХрд╛ рд▓рд╛рдЧрд┐ рдЕрдкрдбреЗрдЯрд╣рд░реВ рдкреНрд░рд╕рд╛рд░рдг рдЧрд░реНрдиреБрд╣реЛрд╕реНред" },
"Shade Provision": { English: "Provide temporary shade in affected areas.", Nepali: "рдкреНрд░рднрд╛рд╡рд┐рдд рдХреНрд╖реЗрддреНрд░рд╣рд░реВрдорд╛ рдЕрд╕реНрдерд╛рдпреА рдЫрд╛рдпрд╛ рдкреНрд░рджрд╛рди рдЧрд░реНрдиреБрд╣реЛрд╕реНред" },
"Power Supply Support": { English: "Ensure power for cooling systems during heatwaves.", Nepali: "рдЧрд░реНрдореАрдХреЛ рд▓рд╣рд░рдорд╛ рд╢реАрддрд▓рди рдкреНрд░рдгрд╛рд▓реАрд╣рд░реВрдХрд╛ рд▓рд╛рдЧрд┐ рд╢рдХреНрддрд┐ рд╕реБрдирд┐рд╢реНрдЪрд┐рдд рдЧрд░реНрдиреБрд╣реЛрд╕реНред" },
"Cooling Shelter Setup": { English: "Establish shelters with cooling for heat relief.", Nepali: "рддрд╛рдк рд░рд╛рд╣рддрдХрд╛ рд▓рд╛рдЧрд┐ рд╢реАрддрд▓рди рд╕рд╣рд┐рддрдХрд╛ рдЖрд╢реНрд░рдпрд╣рд░реВ рд╕реНрдерд╛рдкрдирд╛ рдЧрд░реНрдиреБрд╣реЛрд╕реНред" },
"Hydration Kits": { English: "Distribute kits with water and hydration supplies.", Nepali: "рдкрд╛рдиреА рд░ рд╣рд╛рдЗрдбреНрд░реЗрд╢рди рд╕рд╛рдордЧреНрд░реАрд╣рд░реВ рд╕рд╣рд┐рддрдХрд╛ рдХрд┐рдЯрд╣рд░реВ рд╡рд┐рддрд░рдг рдЧрд░реНрдиреБрд╣реЛрд╕реНред" },
"Community Check-ins": { English: "Check on vulnerable residents during heatwaves.", Nepali: "рдЧрд░реНрдореАрдХреЛ рд▓рд╣рд░рдорд╛ рдЬреЛрдЦрд┐рдордорд╛ рд░рд╣реЗрдХрд╛ рдмрд╛рд╕рд┐рдиреНрджрд╛рд╣рд░реВрдХреЛ рдЬрд╛рдБрдЪ рдЧрд░реНрдиреБрд╣реЛрд╕реНред" },
"Cooling Device Loans": { English: "Loan fans or cooling devices to residents.", Nepali: "рдмрд╛рд╕рд┐рдиреНрджрд╛рд╣рд░реВрд▓рд╛рдИ рдкрдВрдЦрд╛ рд╡рд╛ рд╢реАрддрд▓рди рдЙрдкрдХрд░рдгрд╣рд░реВ рдЛрдг рджрд┐рдиреБрд╣реЛрд╕реНред" },
"Heat Alert Updates": { English: "Provide regular updates on heatwave conditions.", Nepali: "рдЧрд░реНрдореАрдХреЛ рд▓рд╣рд░ рдЕрд╡рд╕реНрдерд╛рд╣рд░реВрдорд╛ рдирд┐рдпрдорд┐рдд рдЕрдкрдбреЗрдЯрд╣рд░реВ рдкреНрд░рджрд╛рди рдЧрд░реНрдиреБрд╣реЛрд╕реНред" },
"First Aid Stations": { English: "Set up stations for heat-related first aid.", Nepali: "рддрд╛рдк рд╕рдореНрдмрдиреНрдзреА рдкреНрд░рд╛рдердорд┐рдХ рдЙрдкрдЪрд╛рд░рдХрд╛ рд▓рд╛рдЧрд┐ рд╕реНрдЯреЗрд╢рдирд╣рд░реВ рд╕реНрдерд╛рдкрдирд╛ рдЧрд░реНрдиреБрд╣реЛрд╕реНред" },
"Psychological Support": { English: "Offer mental health support for heatwave stress.", Nepali: "рдЧрд░реНрдореАрдХреЛ рд▓рд╣рд░ рддрдирд╛рд╡рдХрд╛ рд▓рд╛рдЧрд┐ рдорд╛рдирд╕рд┐рдХ рд╕реНрд╡рд╛рд╕реНрдереНрдп рд╕рдорд░реНрдерди рдкреНрд░рджрд╛рди рдЧрд░реНрдиреБрд╣реЛрд╕реНред" },
"Water Tanker Deployment": { English: "Deploy tankers to supply water in affected areas.", Nepali: "рдкреНрд░рднрд╛рд╡рд┐рдд рдХреНрд╖реЗрддреНрд░рд╣рд░реВрдорд╛ рдкрд╛рдиреА рдЖрдкреВрд░реНрддрд┐ рдЧрд░реНрди рдЯреНрдпрд╛рдВрдХрд░рд╣рд░реВ рдкрд░рд┐рдЪрд╛рд▓рди рдЧрд░реНрдиреБрд╣реЛрд╕реНред" },
"Rebuild Cooling Systems": { English: "Restore or upgrade air conditioning and cooling infrastructure.", Nepali: "рд╡рд╛рддрд╛рдиреБрдХреВрд▓рди рд░ рд╢реАрддрд▓рди рдкреВрд░реНрд╡рд╛рдзрд╛рд░ рдкреБрдирд░реНрд╕реНрдерд╛рдкрдирд╛ рд╡рд╛ рд╕реБрдзрд╛рд░ рдЧрд░реНрдиреБрд╣реЛрд╕реНред" },
"Health Services": { English: "Provide medical care for heat-related health issues.", Nepali: "рддрд╛рдк рд╕рдореНрдмрдиреНрдзреА рд╕реНрд╡рд╛рд╕реНрдереНрдп рд╕рдорд╕реНрдпрд╛рд╣рд░реВрдХрд╛ рд▓рд╛рдЧрд┐ рдЪрд┐рдХрд┐рддреНрд╕рд╛ рд╕реЗрд╡рд╛ рдкреНрд░рджрд╛рди рдЧрд░реНрдиреБрд╣реЛрд╕реНред" },
"Economic Aid": { English: "Financial assistance to rebuild local Economies.", Nepali: "рд╕реНрдерд╛рдиреАрдп рдЕрд░реНрдерддрдиреНрддреНрд░ рдкреБрдирд░реНрдирд┐рд░реНрдорд╛рдг рдЧрд░реНрди рдЖрд░реНрдерд┐рдХ рд╕рд╣рд╛рдпрддрд╛ред" },
"Mental Health Support": { English: "Counseling services for heatwave survivors' mental health.", Nepali: "рдЧрд░реНрдореАрдХреЛ рд▓рд╣рд░ рдмрд╛рдБрдЪреЗрдХрд╛рд╣рд░реВрдХреЛ рдорд╛рдирд╕рд┐рдХ рд╕реНрд╡рд╛рд╕реНрдереНрдпрдХрд╛ рд▓рд╛рдЧрд┐ рдкрд░рд╛рдорд░реНрд╢ рд╕реЗрд╡рд╛рд╣рд░реВред" },
"Water System Repair": { English: "Fix water supply systems damaged by heatwaves.", Nepali: "рдЧрд░реНрдореАрдХреЛ рд▓рд╣рд░рд▓реЗ рдХреНрд╖рддрд┐рдЧреНрд░рд╕реНрдд рдкрд╛рдиреА рдЖрдкреВрд░реНрддрд┐ рдкреНрд░рдгрд╛рд▓реАрд╣рд░реВ рдорд░реНрдордд рдЧрд░реНрдиреБрд╣реЛрд╕реНред" },
"Business Recovery Grants": { English: "Grants to help businesses recover from heatwave losses.", Nepali: "рдЧрд░реНрдореАрдХреЛ рд▓рд╣рд░ рд╣рд╛рдирд┐рдмрд╛рдЯ рд╡реНрдпрд╡рд╕рд╛рдпрд╣рд░реВ рдкреБрдирд░реНрдкреНрд░рд╛рдкреНрддрд┐рдХрд╛ рд▓рд╛рдЧрд┐ рдЕрдиреБрджрд╛рдиред" },
"Infrastructure Upgrades": { English: "Improve infrastructure to withstand future heatwaves.", Nepali: "рднрд╡рд┐рд╖реНрдпрдХреЛ рдЧрд░реНрдореАрдХреЛ рд▓рд╣рд░ рд╕рд╣рди рдкреВрд░реНрд╡рд╛рдзрд╛рд░ рд╕реБрдзрд╛рд░ рдЧрд░реНрдиреБрд╣реЛрд╕реНред" },
"Public Awareness": { English: "Educate communities to prevent future heatwave impacts.", Nepali: "рднрд╡рд┐рд╖реНрдпрдХреЛ рдЧрд░реНрдореАрдХреЛ рд▓рд╣рд░ рдкреНрд░рднрд╛рд╡ рд░реЛрдХреНрди рд╕рдореБрджрд╛рдпрд╣рд░реВрд▓рд╛рдИ рд╢рд┐рдХреНрд╖рд┐рдд рдЧрд░реНрдиреБрд╣реЛрд╕реНред" },
"Shade Structure Repair": { English: "Repair or replace damaged shade structures.", Nepali: "рдХреНрд╖рддрд┐рдЧреНрд░рд╕реНрдд рдЫрд╛рдпрд╛рджрд╛рд░ рд╕рдВрд░рдЪрдирд╛рд╣рд░реВ рдорд░реНрдордд рд╡рд╛ рдкреНрд░рддрд┐рд╕реНрдерд╛рдкрди рдЧрд░реНрдиреБрд╣реЛрд╕реНред" },
"Community Rebuilding": { English: "Reconstruct community facilities affected by heatwaves.", Nepali: "рдЧрд░реНрдореАрдХреЛ рд▓рд╣рд░рд▓реЗ рдкреНрд░рднрд╛рд╡рд┐рдд рд╕рд╛рдореБрджрд╛рдпрд┐рдХ рд╕реБрд╡рд┐рдзрд╛рд╣рд░реВ рдкреБрдирд░реНрдирд┐рд░реНрдорд╛рдг рдЧрд░реНрдиреБрд╣реЛрд╕реНред" },
"Agricultural Support": { English: "Aid to restore crops and farms affected by heat.", Nepali: "рддрд╛рдкрд▓реЗ рдкреНрд░рднрд╛рд╡рд┐рдд рдмрд╛рд▓реА рд░ рдЦреЗрддрд╣рд░реВ рдкреБрдирд░реНрд╕реНрдерд╛рдкрдирд╛ рдЧрд░реНрди рд╕рд╣рд╛рдпрддрд╛ред" },
"School Restoration": { English: "Repair schools to resume education post-heatwave.", Nepali: "рдЧрд░реНрдореАрдХреЛ рд▓рд╣рд░ рдкрдЫрд┐ рд╢рд┐рдХреНрд╖рд╛ рдкреБрди: рд╕реБрд░реБ рдЧрд░реНрди рд╕реНрдХреВрд▓рд╣рд░реВ рдорд░реНрдордд рдЧрд░реНрдиреБрд╣реЛрд╕реНред" },
"Power Grid Repair": { English: "Restore electricity infrastructure damaged by heat.", Nepali: "рддрд╛рдкрд▓реЗ рдХреНрд╖рддрд┐рдЧреНрд░рд╕реНрдд рд╡рд┐рджреНрдпреБрддреН рдкреВрд░реНрд╡рд╛рдзрд╛рд░ рдкреБрдирд░реНрд╕реНрдерд╛рдкрдирд╛ рдЧрд░реНрдиреБрд╣реЛрд╕реНред" },
"Cooling Device Distribution": { English: "Distribute fans or cooling devices to residents.", Nepali: "рдмрд╛рд╕рд┐рдиреНрджрд╛рд╣рд░реВрд▓рд╛рдИ рдкрдВрдЦрд╛ рд╡рд╛ рд╢реАрддрд▓рди рдЙрдкрдХрд░рдгрд╣рд░реВ рд╡рд┐рддрд░рдг рдЧрд░реНрдиреБрд╣реЛрд╕реНред" },
"Heat-Resistant Materials": { English: "Use durable materials in rebuilding to resist heat.", Nepali: "рддрд╛рдк рдкреНрд░рддрд┐рд░реЛрдз рдЧрд░реНрди рдкреБрдирд░реНрдирд┐рд░реНрдорд╛рдгрдорд╛ рдЯрд┐рдХрд╛рдЙ рд╕рд╛рдордЧреНрд░реАрд╣рд░реВ рдкреНрд░рдпреЛрдЧ рдЧрд░реНрдиреБрд╣реЛрд╕реНред" },
"Green Space Restoration": { English: "Restore parks and green areas to reduce urban heat.", Nepali: "рд╢рд╣рд░реА рддрд╛рдк рдХрдо рдЧрд░реНрди рдкрд╛рд░реНрдХрд╣рд░реВ рд░ рд╣рд░рд┐рдд рдХреНрд╖реЗрддреНрд░рд╣рд░реВ рдкреБрдирд░реНрд╕реНрдерд╛рдкрдирд╛ рдЧрд░реНрдиреБрд╣реЛрд╕реНред" },
"Workforce Retraining": { English: "Train workers for heatwave-resistant livelihoods.", Nepali: "рдЧрд░реНрдореАрдХреЛ рд▓рд╣рд░ рдкреНрд░рддрд┐рд░реЛрдзреА рдЬреАрд╡рд┐рдХреЛрдкрд╛рд░реНрдЬрдирдХрд╛ рд▓рд╛рдЧрд┐ рдХрд╛рдорджрд╛рд░рд╣рд░реВрд▓рд╛рдИ рддрд╛рд▓рд┐рдо рджрд┐рдиреБрд╣реЛрд╕реНред" },
"Sanitation Services": { English: "Restore sanitation systems to prevent health risks.", Nepali: "рд╕реНрд╡рд╛рд╕реНрдереНрдп рдЬреЛрдЦрд┐рдорд╣рд░реВ рд░реЛрдХреНрди рд╕рд░рд╕рдлрд╛рдЗ рдкреНрд░рдгрд╛рд▓реАрд╣рд░реВ рдкреБрдирд░реНрд╕реНрдерд╛рдкрдирд╛ рдЧрд░реНрдиреБрд╣реЛрд╕реНред" },
"Insurance Compensation": { English: "Provide financial compensation for heatwave losses.", Nepali: "рдЧрд░реНрдореАрдХреЛ рд▓рд╣рд░ рд╣рд╛рдирд┐рдХрд╛ рд▓рд╛рдЧрд┐ рдЖрд░реНрдерд┐рдХ рдХреНрд╖рддрд┐рдкреВрд░реНрддрд┐ рдкреНрд░рджрд╛рди рдЧрд░реНрдиреБрд╣реЛрд╕реНред" },
"Urban Heat Mapping": { English: "Map heat-affected areas to guide recovery efforts.", Nepali: "рдкреБрдирд░реНрдкреНрд░рд╛рдкреНрддрд┐ рдкреНрд░рдпрд╛рд╕рд╣рд░реВрдХреЛ рдорд╛рд░реНрдЧрджрд░реНрд╢рди рдЧрд░реНрди рддрд╛рдк рдкреНрд░рднрд╛рд╡рд┐рдд рдХреНрд╖реЗрддреНрд░рд╣рд░реВрдХреЛ рдирдХреНрд╢рд╛рдВрдХрдиред" }
};

function updateLanguage() {
  hazardSelect.querySelectorAll('option').forEach(option => {
    const text = currentLanguage === 'Nepali' ? option.dataset.nepali : option.dataset.english || option.textContent.split(' / ')[0];
    option.textContent = text;
  });
  gameLevelSelect.querySelectorAll('option').forEach(option => {
    const text = currentLanguage === 'Nepali' ? option.dataset.nepali : option.dataset.english || option.textContent.split(' / ')[0];
    option.textContent = text;
  });
  languageSelect.querySelectorAll('option').forEach(option => {
    const text = currentLanguage === 'Nepali' ? option.dataset.nepali : option.dataset.english || option.textContent.split(' / ')[0];
    option.textContent = text;
  });

  startBtn.textContent = currentLanguage === 'Nepali' ? 'рдЦреЗрд▓ рд╕реБрд░реБ рдЧрд░реНрдиреБрд╣реЛрд╕реН' : 'Start Game';
  submitBtn.textContent = currentLanguage === 'Nepali' ? 'рдкреЗрд╢ рдЧрд░реНрдиреБрд╣реЛрд╕реН' : 'Submit';
  resetBtn.textContent = currentLanguage === 'Nepali' ? 'рд░рд┐рд╕реЗрдЯ рдЧрд░реНрдиреБрд╣реЛрд╕реН' : 'Reset';
  rotateHorizontalBtn.textContent = currentLanguage === 'Nepali' ? 'рддреЗрд░реНрд╕реЛ рдШреБрдорд╛рдЙрдиреБрд╣реЛрд╕реН' : 'Rotate Horizontal';
  rotateVerticalBtn.textContent = currentLanguage === 'Nepali' ? 'рдард╛рдбреЛ рдШреБрдорд╛рдЙрдиреБрд╣реЛрд╕реН' : 'Rotate Vertical';
  fullscreenBtn.textContent = currentLanguage === 'Nepali' ? 'рдкреВрд░реНрдг рд╕реНрдХреНрд░рд┐рди' : 'Full Screen';

  const voiceLabel = document.querySelector('label span');
  voiceLabel.textContent = currentLanguage === 'Nepali' ? 'рдЖрд╡рд╛рдЬ' : 'Voice';

  faceTitle.textContent = currentLanguage === 'Nepali' 
    ? 'рдЬреЛрдЦрд┐рдо рдЫрдиреЛрдЯ рдЧрд░реНрдиреБрд╣реЛрд╕реН рд░ рдЦреЗрд▓ рд╕реБрд░реБ рдЧрд░реНрдиреБрд╣реЛрд╕реН' 
    : 'Select hazard and start the game';
  descriptionBox.textContent = currentLanguage === 'Nepali' 
    ? 'рд╡рд┐рд╡рд░рдг рдпрд╣рд╛рдБ рд╣реЗрд░реНрди рдЯрд╛рдЗрд▓рдорд╛ рдХреНрд▓рд┐рдХ рдЧрд░реНрдиреБрд╣реЛрд╕реНред' 
    : 'Click on a tile to see description here.';
  const noteSpan = document.querySelector('.sidebar-right span');
  noteSpan.textContent = currentLanguage === 'Nepali' 
    ? 'рдиреЛрдЯ: рддрдкрд╛рдИрдВрд▓реЗ рдкреНрд░рддреНрдпреЗрдХ рдбреНрд░рдкрдмрдХреНрд╕рдорд╛ рей рдЯрд╛рдЗрд▓рд╣рд░реВ рд░рд╛рдЦреНрди рд╕рдХреНрдиреБрд╣реБрдиреНрдЫред' 
    : 'Note: You can place 3 tiles per dropbox.';

  dropBoxes.forEach(box => {
    box.textContent = faceTitles[box.dataset.face][currentLanguage];
    box.classList.remove('game-started', 'hard-mode');
    if (gameStarted) {
      box.classList.add('game-started');
      if (gameLevelSelect.value === 'Hard') {
        box.classList.add('hard-mode');
      }
    }
  });

  sidebarRight.style.background = '#222';

  cube.querySelectorAll('.tile').forEach(tile => {
    const key = tile.getAttribute('data-key');
    if (key) {
      const action = Object.values(hazardActions).flatMap(hazard => 
        Object.values(hazard).flatMap(category => category)
      ).find(a => a.text.English === key || a.text.Nepali === key);
      if (action) {
        const newKey = action.text[currentLanguage];
        tile.textContent = newKey;
        tile.setAttribute('data-key', newKey);
      }
    }
  });

  document.querySelectorAll('.dropped-tile').forEach(tile => {
    const key = tile.getAttribute('data-key');
    if (key) {
      const action = Object.values(hazardActions).flatMap(hazard => 
        Object.values(hazard).flatMap(category => category)
      ).find(a => a.text.English === key || a.text.Nepali === key);
      if (action) {
        const newKey = action.text[currentLanguage];
        tile.textContent = newKey;
        tile.setAttribute('data-key', newKey);
      }
    }
  });

  document.documentElement.lang = currentLanguage === 'Nepali' ? 'ne' : 'en';
}

function updateCubeRotation() {
  cube.style.transform = `rotateX(${currentRotation.x}deg) rotateY(${currentRotation.y}deg)`;
}

function rotateCube(direction) {
  const angle = 30;
  if (direction === 'horizontal') {
    currentRotation.y += angle;
  } else if (direction === 'vertical') {
    currentRotation.x += angle;
  }
  rotationX = currentRotation.x;
  rotationY = currentRotation.y;
  updateCubeRotation();
}

function resetCube() {
  resetBtn.click();
}

scene.addEventListener('touchstart', (e) => {
  e.preventDefault();
  isDraggingCube = true;
  dragStart = { x: e.touches[0].clientX, y: e.touches[0].clientY };
});

scene.addEventListener('touchmove', (e) => {
  if (!isDraggingCube) return;
  e.preventDefault();
  const dx = e.touches[0].clientX - dragStart.x;
  const dy = e.touches[0].clientY - dragStart.y;
  currentRotation.x = rotationX - dy * 0.3; // Adjusted sensitivity for touch
  currentRotation.y = rotationY + dx * 0.3;
  updateCubeRotation();
});

scene.addEventListener('touchend', () => {
  isDraggingCube = false;
  rotationX = currentRotation.x;
  rotationY = currentRotation.y;
});

scene.addEventListener('mousedown', (e) => {
  isDraggingCube = true;
  dragStart = { x: e.clientX, y: e.clientY };
});

window.addEventListener('mouseup', () => {
  isDraggingCube = false;
  rotationX = currentRotation.x;
  rotationY = currentRotation.y;
});

scene.addEventListener('mousemove', (e) => {
  if (!isDraggingCube) return;
  const dx = e.clientX - dragStart.x;
  const dy = e.clientY - dragStart.y;
  currentRotation.x = rotationX - dy * 0.5;
  currentRotation.y = rotationY + dx * 0.5;
  updateCubeRotation();
});

document.addEventListener('mousedown', () => {
  if (window.speechSynthesis.speaking) {
    window.speechSynthesis.cancel();
  }
});

function shuffleArray(array) {
  const arr = [...array];
  for (let i = arr.length - 1; i > 0; i--) {
    const j = Math.floor(Math.random() * (i + 1));
    [arr[i], arr[j]] = [arr[j], arr[i]];
  }
  return arr;
}

function populateCube() {
  cube.innerHTML = '';
  const isHardMode = gameStarted && gameLevelSelect.value === 'Hard';
  originalPositions = {};

  const faces = ['front', 'back', 'right', 'left', 'top', 'bottom'];
  faces.forEach(face => {
    const faceElement = document.createElement('div');
    faceElement.classList.add('face', face);
    faceElement.classList.toggle('game-started', gameStarted);
    faceElement.classList.toggle('hard-mode', isHardMode);
    cube.appendChild(faceElement);

    const dropBox = document.querySelector(`#drop-${face}`);
    if (dropBox) {
      dropBox.classList.toggle('game-started', gameStarted);
      dropBox.classList.toggle('hard-mode', isHardMode);
      dropBox.textContent = faceTitles[face][currentLanguage];
    }
  });

  for (const face of Object.keys(faceTitles)) {
    const faceDiv = cube.querySelector(`.face.${face}`);
    if (!faceDiv) continue;

    let tilesData = [];
    if (gameStarted) {
      tilesData = shuffleArray(hazardActions[hazardSelect.value][faceTitles[face].English]).slice(0, 9);
      tilesData.forEach(({ text, point }, index) => {
        tilePoints[text[currentLanguage]] = point;
        originalPositions[text[currentLanguage]] = { face, index };
      });
    } else {
      tilesData = Array(9).fill({ text: { English: '', Nepali: '' }, point: 0 });
    }

    tilesData.forEach(({ text }, index) => {
      const tile = document.createElement('div');
      tile.classList.add('tile');
      tile.textContent = text[currentLanguage] || '';
      if (gameStarted && text[currentLanguage] && !gameSubmitted) {
        tile.setAttribute('data-key', text[currentLanguage]);
        tile.setAttribute('draggable', 'false');
        tile.classList.remove('draggable');
        tile.style.cursor = 'default';
      } else {
        tile.style.cursor = 'not-allowed';
      }
      faceDiv.appendChild(tile);
    });
  }

  sidebarRight.style.background = '#222';
  faceTitle.textContent = gameStarted 
    ? (currentLanguage === 'Nepali' 
        ? `рдЦреЗрд▓ рд╕реБрд░реБ рднрдпреЛ: ${hazardSelect.querySelector(`option[value="${hazardSelect.value}"]`).dataset.nepali}` 
        : `Game started for: ${hazardSelect.value}`)
    : (currentLanguage === 'Nepali' 
        ? 'рдЬреЛрдЦрд┐рдо рдЫрдиреЛрдЯ рдЧрд░реНрдиреБрд╣реЛрд╕реН рд░ рдЦреЗрд▓ рд╕реБрд░реБ рдЧрд░реНрдиреБрд╣реЛрд╕реН' 
        : 'Select hazard and start the game');
  descriptionBox.textContent = currentLanguage === 'Nepali' 
    ? 'рд╡рд┐рд╡рд░рдг рдпрд╣рд╛рдБ рд╣реЗрд░реНрди рдЯрд╛рдЗрд▓рдорд╛ рдбрдмрд▓ рдЯреНрдпрд╛рдк рдЧрд░реНрдиреБрд╣реЛрд╕реНред' 
    : 'Double-tap a tile to see description and select.';
  scoreDisplay.textContent = '';
}

function enableTileEvents() {
  const tiles = cube.querySelectorAll('.tile');
  tiles.forEach(tile => {
    let touchCount = 0;
    let lastTouchTime = 0;

    tile.addEventListener('click', (e) => {
      if (!gameStarted || gameSubmitted) return;
      const key = tile.getAttribute('data-key');
      if (!key) return;

      touchCount++;
      const currentTime = new Date().getTime();

      if (touchCount === 1) {
        lastTouchTime = currentTime;
        setTimeout(() => { touchCount = 0; }, 300);
      } else if (touchCount === 2 && currentTime - lastTouchTime < 300) {
        const action = Object.values(hazardActions).flatMap(hazard => 
          Object.values(hazard).flatMap(category => category)
        ).find(a => a.text[currentLanguage] === key);
        descriptionBox.textContent = actionDescriptions[action.text.English][currentLanguage] || key;
        if (voiceToggle.checked) {
          speak(actionDescriptions[action.text.English][currentLanguage] || key);
        }

        if (selectedTile === tile) {
          tile.setAttribute('draggable', 'false');
          tile.classList.remove('draggable', 'selected');
          tile.style.cursor = 'default';
          selectedTile = null;
        } else {
          if (selectedTile) {
            selectedTile.setAttribute('draggable', 'false');
            selectedTile.classList.remove('draggable', 'selected');
            selectedTile.style.cursor = 'default';
          }
          tile.setAttribute('draggable', 'true');
          tile.classList.add('draggable', 'selected');
          tile.style.cursor = 'grab';
          selectedTile = tile;
        }
        touchCount = 0;
      }
    });

    tile.addEventListener('touchstart', (e) => {
      if (!gameStarted || gameSubmitted) return;
      e.preventDefault();
      const key = tile.getAttribute('data-key');
      if (!key) return;

      const currentTime = new Date().getTime();
      if (currentTime - lastTapTime < 300 && lastTappedTile === tile) {
        const action = Object.values(hazardActions).flatMap(hazard => 
          Object.values(hazard).flatMap(category => category)
        ).find(a => a.text[currentLanguage] === key);
        descriptionBox.textContent = actionDescriptions[action.text.English][currentLanguage] || key;
        if (voiceToggle.checked) {
          speak(actionDescriptions[action.text.English][currentLanguage] || key);
        }

        if (selectedTile === tile) {
          tile.setAttribute('draggable', 'false');
          tile.classList.remove('draggable', 'selected');
          tile.style.cursor = 'default';
          selectedTile = null;
        } else {
          if (selectedTile) {
            selectedTile.setAttribute('draggable', 'false');
            selectedTile.classList.remove('draggable', 'selected');
            selectedTile.style.cursor = 'default';
          }
          tile.setAttribute('draggable', 'true');
          tile.classList.add('draggable', 'selected');
          tile.style.cursor = 'grab';
          selectedTile = tile;
        }
        lastTapTime = 0;
        lastTappedTile = null;
      } else {
        lastTapTime = currentTime;
        lastTappedTile = tile;
      }
    });

    tile.addEventListener('touchstart', (e) => {
      if (!gameStarted || gameSubmitted || tile.getAttribute('draggable') !== 'true') return;
      e.stopPropagation();
      tile.style.opacity = '0.5';
    });

    tile.addEventListener('touchmove', (e) => {
      if (!gameStarted || gameSubmitted || tile.getAttribute('draggable') !== 'true') return;
      e.preventDefault();
      const touch = e.touches[0];
      const elementUnder = document.elementFromPoint(touch.clientX, touch.clientY);
      dropBoxes.forEach(box => box.classList.remove('drag-over'));
      if (elementUnder && elementUnder.classList.contains('drop-box')) {
        elementUnder.classList.add('drag-over');
      }
    });

    tile.addEventListener('touchend', (e) => {
      if (!gameStarted || gameSubmitted || tile.getAttribute('draggable') !== 'true') return;
      tile.style.opacity = '1';
      dropBoxes.forEach(box => box.classList.remove('drag-over'));
      const touch = e.changedTouches[0];
      const elementUnder = document.elementFromPoint(touch.clientX, touch.clientY);
      if (elementUnder && elementUnder.classList.contains('drop-box')) {
        const key = tile.getAttribute('data-key');
        if (!key || droppedTilesMap[key]) return;
        const droppedTiles = elementUnder.querySelectorAll('.dropped-tile');
        if (droppedTiles.length >= 3) return;

        const droppedTile = document.createElement('div');
        droppedTile.classList.add('dropped-tile', 'animate-drop');
        droppedTile.textContent = key;
        droppedTile.setAttribute('data-key', key);

        droppedTile.onclick = () => {
          if (gameSubmitted) return;
          delete droppedTilesMap[key];
          droppedTile.remove();
          const { face, index } = originalPositions[key];
          const faceDiv = cube.querySelector(`.face.${face}`);
          const tiles = faceDiv.querySelectorAll('.tile');
          const targetTile = tiles[index];
          if (targetTile && !targetTile.hasAttribute('data-key')) {
            targetTile.textContent = key;
            targetTile.setAttribute('data-key', key);
            targetTile.setAttribute('draggable', 'false');
            tile.classList.remove('draggable');
            targetTile.style.cursor = 'default';
          }
          if (Object.keys(droppedTilesMap).length === 0) {
            submitBtn.disabled = true;
            submitBtn.classList.remove('glow');
          }
        };

        elementUnder.appendChild(droppedTile);
        droppedTilesMap[key] = elementUnder.id;

        tile.textContent = '';
        tile.removeAttribute('data-key');
        tile.setAttribute('draggable', 'false');
        tile.classList.remove('draggable', 'selected');
        tile.style.cursor = 'not-allowed';
        selectedTile = null;

        submitBtn.disabled = false;
        submitBtn.classList.add('glow');

        if (voiceToggle.checked) {
          const faceName = faceTitles[elementUnder.dataset.face][currentLanguage];
          speak(currentLanguage === 'Nepali' ? `${key} рд▓рд╛рдИ ${faceName} рдорд╛ рд░рд╛рдЦрд┐рдПрдХреЛ рдЫ` : `${key} is dropped into ${faceName}`);
        }
      }
    });

    tile.ondragstart = (e) => {
      if (!gameStarted || gameSubmitted) {
        e.preventDefault();
        return;
      }
      if (!tile.classList.contains('draggable')) {
        e.preventDefault();
        return;
      }
      e.dataTransfer.setData('text/plain', tile.getAttribute('data-key'));
      tile.style.opacity = '0.5';
    };

    tile.ondragend = () => {
      tiles.forEach(t => (t.style.opacity = '1'));
    };
  });
}

function attachDropBoxEvents() {
  dropBoxes.forEach(box => {
    box.ondragover = (e) => {
      if (!gameStarted || gameSubmitted) return;
      e.preventDefault();
      box.classList.add('drag-over');
    };
    box.ondragleave = () => {
      box.classList.remove('drag-over');
    };
    box.ondrop = (e) => {
      if (!gameStarted || gameSubmitted) return;
      e.preventDefault();
      box.classList.remove('drag-over');

      const key = e.dataTransfer.getData('text/plain');
      if (!key) return;
      if (droppedTilesMap[key]) return;
      const droppedTiles = box.querySelectorAll('.dropped-tile');
      if (droppedTiles.length >= 3) return;

      const droppedTile = document.createElement('div');
      droppedTile.classList.add('dropped-tile', 'animate-drop');
      droppedTile.textContent = key;
      droppedTile.setAttribute('data-key', key);

      droppedTile.onclick = () => {
        if (gameSubmitted) return;
        delete droppedTilesMap[key];
        droppedTile.remove();

        const { face, index } = originalPositions[key];
        const faceDiv = cube.querySelector(`.face.${face}`);
        const tiles = faceDiv.querySelectorAll('.tile');
        const targetTile = tiles[index];
        if (targetTile && !targetTile.hasAttribute('data-key')) {
          targetTile.textContent = key;
          targetTile.setAttribute('data-key', key);
          targetTile.setAttribute('draggable', 'false');
          targetTile.classList.remove('draggable');
          targetTile.style.cursor = 'default';
        }

        if (Object.keys(droppedTilesMap).length === 0) {
          submitBtn.disabled = true;
          submitBtn.classList.remove('glow');
        }
      };

      box.appendChild(droppedTile);
      droppedTilesMap[key] = box.id;

      const cubeTiles = cube.querySelectorAll('.tile');
      for (const t of cubeTiles) {
        if (t.getAttribute('data-key') === key) {
          t.textContent = '';
          t.removeAttribute('data-key');
          t.setAttribute('draggable', 'false');
          t.classList.remove('draggable');
          t.style.cursor = 'not-allowed';
          break;
        }
      }

      submitBtn.disabled = false;
      submitBtn.classList.add('glow');

      if (voiceToggle.checked) {
        const faceName = faceTitles[box.dataset.face][currentLanguage];
        speak(currentLanguage === 'Nepali' ? `${key} рд▓рд╛рдИ ${faceName} рдорд╛ рд░рд╛рдЦрд┐рдПрдХреЛ рдЫ` : `${key} is dropped into ${faceName}`);
      }
    };

    box.addEventListener('touchstart', (e) => {
      if (!gameStarted || gameSubmitted || !selectedTile) return;
      e.preventDefault();
      const key = selectedTile.getAttribute('data-key');
      if (!key || droppedTilesMap[key]) return;
      const droppedTiles = box.querySelectorAll('.dropped-tile');
      if (droppedTiles.length >= 3) return;

      const droppedTile = document.createElement('div');
      droppedTile.classList.add('dropped-tile', 'animate-drop');
      droppedTile.textContent = key;
      droppedTile.setAttribute('data-key', key);

      droppedTile.onclick = () => {
        if (gameSubmitted) return;
        delete droppedTilesMap[key];
        droppedTile.remove();

        const { face, index } = originalPositions[key];
        const faceDiv = cube.querySelector(`.face.${face}`);
        const tiles = faceDiv.querySelectorAll('.tile');
        const targetTile = tiles[index];
        if (targetTile && !targetTile.hasAttribute('data-key')) {
          targetTile.textContent = key;
          targetTile.setAttribute('data-key', key);
          targetTile.setAttribute('draggable', 'false');
          targetTile.classList.remove('draggable');
          targetTile.style.cursor = 'default';
        }

        if (Object.keys(droppedTilesMap).length === 0) {
          submitBtn.disabled = true;
          submitBtn.classList.remove('glow');
        }
      };

      box.appendChild(droppedTile);
      droppedTilesMap[key] = box.id;

      const cubeTiles = cube.querySelectorAll('.tile');
      for (const t of cubeTiles) {
        if (t === selectedTile) {
          t.textContent = '';
          t.removeAttribute('data-key');
          t.setAttribute('draggable', 'false');
          t.classList.remove('draggable', 'selected');
          t.style.cursor = 'not-allowed';
          break;
        }
      }

      submitBtn.disabled = false;
      submitBtn.classList.add('glow');

      if (voiceToggle.checked) {
        const faceName = faceTitles[box.dataset.face][currentLanguage];
        speak(currentLanguage === 'Nepali' ? `${key} рд▓рд╛рдИ ${faceName} рдорд╛ рд░рд╛рдЦрд┐рдПрдХреЛ рдЫ` : `${key} is dropped into ${faceName}`);
      }

      selectedTile = null;
    });

    box.onclick = (e) => {
      if (!gameStarted || gameSubmitted || !selectedTile) return;
      e.preventDefault();
      const key = selectedTile.getAttribute('data-key');
      if (!key || droppedTilesMap[key]) return;
      const droppedTiles = box.querySelectorAll('.dropped-tile');
      if (droppedTiles.length >= 3) return;

      const droppedTile = document.createElement('div');
      droppedTile.classList.add('dropped-tile', 'animate-drop');
      droppedTile.textContent = key;
      droppedTile.setAttribute('data-key', key);

      droppedTile.onclick = () => {
        if (gameSubmitted) return;
        delete droppedTilesMap[key];
        droppedTile.remove();

        const { face, index } = originalPositions[key];
        const faceDiv = cube.querySelector(`.face.${face}`);
        const tiles = faceDiv.querySelectorAll('.tile');
        const targetTile = tiles[index];
        if (targetTile && !targetTile.hasAttribute('data-key')) {
          targetTile.textContent = key;
          targetTile.setAttribute('data-key', key);
          targetTile.setAttribute('draggable', 'false');
          targetTile.classList.remove('draggable');
          targetTile.style.cursor = 'default';
        }

        if (Object.keys(droppedTilesMap).length === 0) {
          submitBtn.disabled = true;
          submitBtn.classList.remove('glow');
        }
      };

      box.appendChild(droppedTile);
      droppedTilesMap[key] = box.id;

      const cubeTiles = cube.querySelectorAll('.tile');
      for (const t of cubeTiles) {
        if (t === selectedTile) {
          t.textContent = '';
          t.removeAttribute('data-key');
          t.setAttribute('draggable', 'false');
          t.classList.remove('draggable', 'selected');
          t.style.cursor = 'not-allowed';
          break;
        }
      }

      submitBtn.disabled = false;
      submitBtn.classList.add('glow');

      if (voiceToggle.checked) {
        const faceName = faceTitles[box.dataset.face][currentLanguage];
        speak(currentLanguage === 'Nepali' ? `${key} рд▓рд╛рдИ ${faceName} рдорд╛ рд░рд╛рдЦрд┐рдПрдХреЛ рдЫ` : `${key} is dropped into ${faceName}`);
      }

      selectedTile = null;
    };
  });
}

submitBtn.onclick = () => {
  if (!gameStarted || gameSubmitted) return;

  gameSubmitted = true;

  let totalPoints = 0;
  const gameMode = gameLevelSelect.value || "Easy";

  for (const tileText in droppedTilesMap) {
    const dropBoxId = droppedTilesMap[tileText];
    const faceKey = dropBoxId.replace('drop-', '');
    const dropBoxCategory = faceTitles[faceKey].English;

    const tileCategoryEntry = Object.entries(hazardActions[hazardSelect.value]).find(([category, actions]) =>
      actions.some(action => action.text[currentLanguage] === tileText)
    );

    if (!tileCategoryEntry) continue;

    const [tileCategory, actions] = tileCategoryEntry;
    const point = actions.find(action => action.text[currentLanguage] === tileText)?.point || 0;

    if (tileCategory === dropBoxCategory) {
      totalPoints += point;
    } else if (gameMode === "Medium" || gameMode === "Hard") {
      totalPoints -= point;
    }
  }

  let splashScreen = document.querySelector('.splash-screen');
  if (!splashScreen) {
    splashScreen = document.createElement('div');
    splashScreen.classList.add('splash-screen');
    document.body.appendChild(splashScreen);
  }

  splashScreen.innerHTML = `
    <div>${currentLanguage === 'Nepali' ? `рддрдкрд╛рдИрдВрдХреЛ рд╕реНрдХреЛрд░: ${totalPoints}` : `Your Score: ${totalPoints}`}</div>
    <button id="close-splash">${currentLanguage === 'Nepali' ? 'рдмрдиреНрдж рдЧрд░реНрдиреБрд╣реЛрд╕реН' : 'Close'}</button>
  `;

  setTimeout(() => {
    splashScreen.classList.add('show');
  }, 10);

  if (voiceToggle.checked) {
    speak(currentLanguage === 'Nepali' ? `рддрдкрд╛рдИрдВрдХреЛ рдХреБрд▓ рд╕реНрдХреЛрд░ ${totalPoints} рд╣реЛ` : `Your total score is ${totalPoints}`);
  }

  const closeButton = splashScreen.querySelector('#close-splash');
  closeButton.onclick = () => {
    splashScreen.classList.remove('show');
    setTimeout(() => {
      splashScreen.remove();
    }, 500);
  };

  splashScreen.onclick = (e) => {
    if (e.target === splashScreen || e.target === closeButton) {
      splashScreen.classList.remove('show');
      setTimeout(() => {
        splashScreen.remove();
      }, 500);
    }
  };

  visibleScore = true;
  scoreDisplay.textContent = currentLanguage === 'Nepali' ? `рддрдкрд╛рдИрдВрдХреЛ рд╕реНрдХреЛрд░: ${totalPoints}` : `Your Score: ${totalPoints}`;
  faceTitle.textContent = currentLanguage === 'Nepali' 
    ? `рдЦреЗрд▓ рд╕рдорд╛рдкреНрдд рднрдпреЛ: ${hazardSelect.querySelector(`option[value="${hazardSelect.value}"]`).dataset.nepali}`
    : `Game finished for: ${hazardSelect.value}`;

  cube.querySelectorAll('.tile').forEach(tile => {
    tile.setAttribute('draggable', 'false');
    tile.classList.remove('draggable', 'selected');
    tile.style.cursor = 'not-allowed';
    tile.onclick = null;
    tile.ontouchstart = null;
  });

  dropBoxes.forEach(box => {
    box.ondragover = (e) => e.preventDefault();
    box.ondrop = (e) => e.preventDefault();
    box.onclick = null;
    box.ontouchstart = null;
    box.style.cursor = 'default';
  });

  document.querySelectorAll('.dropped-tile').forEach(tile => {
    tile.onclick = null;
  });

  submitBtn.disabled = true;
  submitBtn.classList.remove('glow');
  resetBtn.disabled = false;
  resetBtn.classList.add('glow');
  startBtn.disabled = true;
  startBtn.classList.remove('glow');

  rotateHorizontalBtn.disabled = false;
  rotateVerticalBtn.disabled = false;
};

function startGame() {
  gameStarted = true;
  gameSubmitted = false;
  droppedTilesMap = {};
  tilePoints = {};

  if (voiceToggle.checked) {
    const hazard = hazardSelect.querySelector(`option[value="${hazardSelect.value}"]`).dataset[currentLanguage.toLowerCase()];
    const level = gameLevelSelect.value || "Easy";
    const levelText = gameLevelSelect.querySelector(`option[value="${level}"]`).dataset[currentLanguage.toLowerCase()];
    speak(currentLanguage === 'Nepali' 
      ? `рдЦреЗрд▓ ${hazard} рдХреЛ рд▓рд╛рдЧрд┐ ${levelText} рдореЛрдбрдорд╛ рд╕реБрд░реБ рднрдПрдХреЛ рдЫ` 
      : `Game is started for ${hazardSelect.value} in ${level} mode`);
  }

  populateCube();
  enableTileEvents();
  attachDropBoxEvents();

  submitBtn.disabled = true;
  submitBtn.classList.remove('glow');
  resetBtn.disabled = false;
  resetBtn.classList.add('glow');
  startBtn.disabled = true;
  startBtn.classList.remove('glow');

  descriptionBox.textContent = currentLanguage === 'Nepali' 
    ? 'рд╡рд┐рд╡рд░рдг рдпрд╣рд╛рдБ рд╣реЗрд░реНрди рдЯрд╛рдЗрд▓рдорд╛ рдбрдмрд▓ рдЯреНрдпрд╛рдк рдЧрд░реНрдиреБрд╣реЛрд╕реНред' 
    : 'Double-tap a tile to see description and select.';
  scoreDisplay.textContent = "";
  faceTitle.textContent = currentLanguage === 'Nepali' 
    ? `рдЦреЗрд▓ рд╕реБрд░реБ рднрдпреЛ: ${hazardSelect.querySelector(`option[value="${hazardSelect.value}"]`).dataset.nepali}` 
    : `Game started for: ${hazardSelect.value}`;
}

startBtn.onclick = () => {
  if (!hazardSelect.value) {
    alert(currentLanguage === 'Nepali' ? 'рдХреГрдкрдпрд╛ рдкрд╣рд┐рд▓реЗ рдЬреЛрдЦрд┐рдо рдЫрдиреЛрдЯ рдЧрд░реНрдиреБрд╣реЛрд╕реНред' : 'Please select a hazard first.');
    return;
  }
  const gameMode = gameLevelSelect.value || "Easy";
  const gameModeText = gameLevelSelect.querySelector(`option[value="${gameMode}"]`).dataset[currentLanguage.toLowerCase()];
  let notes = currentLanguage === 'Nepali' ? 'рдЦреЗрд▓ рдирд┐рдпрдорд╣рд░реВ:\n' : 'Game Rules:\n';
  if (gameMode === "Easy") {
    notes += currentLanguage === 'Nepali'
      ? `рддрдкрд╛рдИрдВрд▓реЗ рд╕рдЬрд┐рд▓реЛ рдореЛрдбрдорд╛ рдЦреЗрд▓ рд╕реБрд░реБ рдЧрд░реНрдиреБрднрдпреЛред\nрдЯрд╛рдЗрд▓рдорд╛ рдбрдмрд▓ рдЯреНрдпрд╛рдк рд╡рд╛ рдбрдмрд▓ рдХреНрд▓рд┐рдХ рдЧрд░реЗрд░ рдпрд╕рдХреЛ рд╡рд┐рд╡рд░рдг рд╣реЗрд░реНрдиреБрд╣реЛрд╕реН рд░ рдЫрдиреЛрдЯ рдЧрд░реНрдиреБрд╣реЛрд╕реНред\nрдбреНрд░рдк рдмрдХреНрд╕рдорд╛ рдЯреНрдпрд╛рдк рд╡рд╛ рдХреНрд▓рд┐рдХ рдЧрд░реЗрд░ рдЫрдиреЛрдЯ рдЧрд░рд┐рдПрдХреЛ рдЯрд╛рдЗрд▓ рд░рд╛рдЦреНрдиреБрд╣реЛрд╕реНред\nрдкреНрд░рддреНрдпреЗрдХ рдбреНрд░рдк рдмрдХреНрд╕рдорд╛ рей рдЯрд╛рдЗрд▓рд╣рд░реВ рд░рд╛рдЦреНрди рд╕рдХрд┐рдиреНрдЫред\nрдЗрдЪреНрдЫрд┐рдд рдЯрд╛рдЗрд▓рд╣рд░реВ рд░рд╛рдЦреЗрдкрдЫрд┐, рдЖрдлреНрдиреЛ рд╕реНрдХреЛрд░ рдЬрд╛рдБрдЪ рдЧрд░реНрди 'рдкреЗрд╢ рдЧрд░реНрдиреБрд╣реЛрд╕реН' рдЯреНрдпрд╛рдк рдЧрд░реНрдиреБрд╣реЛрд╕реНред\nрд╕рд╣реА рд░рд╛рдЦрд┐рдПрдХреЛ рдЯрд╛рдЗрд▓рд╣рд░реВрдХреЛ рд╕реНрдХреЛрд░рдХреЛ рдпреЛрдЧ рддрдкрд╛рдИрдВрдХреЛ рдХреБрд▓ рд╕реНрдХреЛрд░ рд╣реЛред`
      : `You have started a game in Easy Mode.\nDouble-tap or double-click a tile to see its description and select it.\nTap or click a drop box to place the selected tile.\nYou can place up to 3 tiles in each drop box.\nOnce you place the desired tiles, tap 'Submit' to check your score.\nThe sum of scores of correctly placed tiles is your total score.`;
  } else if (gameMode === "Medium") {
    notes += currentLanguage === 'Nepali'
      ? `рддрдкрд╛рдИрдВрд▓реЗ рдордзреНрдпрдо рдореЛрдбрдорд╛ рдЦреЗрд▓ рд╕реБрд░реБ рдЧрд░реНрдиреБрднрдпреЛред\nрдЯрд╛рдЗрд▓рдорд╛ рдбрдмрд▓ рдЯреНрдпрд╛рдк рд╡рд╛ рдбрдмрд▓ рдХреНрд▓рд┐рдХ рдЧрд░реЗрд░ рдпрд╕рдХреЛ рд╡рд┐рд╡рд░рдг рд╣реЗрд░реНрдиреБрд╣реЛрд╕реН рд░ рдЫрдиреЛрдЯ рдЧрд░реНрдиреБрд╣реЛрд╕реНред\nрдбреНрд░рдк рдмрдХреНрд╕рдорд╛ рдЯреНрдпрд╛рдк рд╡рд╛ рдХреНрд▓рд┐рдХ рдЧрд░реЗрд░ рдЫрдиреЛрдЯ рдЧрд░рд┐рдПрдХреЛ рдЯрд╛рдЗрд▓ рд░рд╛рдЦреНрдиреБрд╣реЛрд╕реНред\nрдкреНрд░рддреНрдпреЗрдХ рдбреНрд░рдк рдмрдХреНрд╕рдорд╛ рей рдЯрд╛рдЗрд▓рд╣рд░реВ рд░рд╛рдЦреНрди рд╕рдХрд┐рдиреНрдЫред\nрдЗрдЪреНрдЫрд┐рдд рдЯрд╛рдЗрд▓рд╣рд░реВ рд░рд╛рдЦреЗрдкрдЫрд┐, рдЖрдлреНрдиреЛ рд╕реНрдХреЛрд░ рдЬрд╛рдБрдЪ рдЧрд░реНрди 'рдкреЗрд╢ рдЧрд░реНрдиреБрд╣реЛрд╕реН' рдЯреНрдпрд╛рдк рдЧрд░реНрдиреБрд╣реЛрд╕реНред\nрд╕рд╣реА рд░рд╛рдЦрд┐рдПрдХреЛ рдЯрд╛рдЗрд▓рд╣рд░реВрдХреЛ рд╕реНрдХреЛрд░рдХреЛ рдпреЛрдЧ рддрдкрд╛рдИрдВрдХреЛ рдХреБрд▓ рд╕реНрдХреЛрд░ рд╣реЛ, рддрд░ рдЧрд▓рдд рд░рд╛рдЦрд┐рдПрдХреЛ рдЯрд╛рдЗрд▓рд╣рд░реВрдХреЛ рд▓рд╛рдЧрд┐ рдирдХрд╛рд░рд╛рддреНрдордХ рд╕реНрдХреЛрд░рд┐рдЩ рд╣реБрдиреНрдЫред`
      : `You have started a game in Medium Mode.\nDouble-tap or double-click a tile to see its description and select it.\nTap or click a drop box to place the selected tile.\nYou can place up to 3 tiles in each drop box.\nOnce you place the desired tiles, tap 'Submit' to check your score.\nThe sum of scores of correctly placed tiles is your total score, but there is negative scoring for wrongly placed tiles.`;
  } else if (gameMode === "Hard") {
    notes += currentLanguage === 'Nepali'
      ? `рддрдкрд╛рдИрдВрд▓реЗ рдХрдард┐рди рдореЛрдбрдорд╛ рдЦреЗрд▓ рд╕реБрд░реБ рдЧрд░реНрдиреБрднрдпреЛред\nрдЯрд╛рдЗрд▓рдорд╛ рдбрдмрд▓ рдЯреНрдпрд╛рдк рд╡рд╛ рдбрдмрд▓ рдХреНрд▓рд┐рдХ рдЧрд░реЗрд░ рдпрд╕рдХреЛ рд╡рд┐рд╡рд░рдг рд╣реЗрд░реНрдиреБрд╣реЛрд╕реН рд░ рдЫрдиреЛрдЯ рдЧрд░реНрдиреБрд╣реЛрд╕реНред\nрдбреНрд░рдк рдмрдХреНрд╕рдорд╛ рдЯреНрдпрд╛рдк рд╡рд╛ рдХреНрд▓рд┐рдХ рдЧрд░реЗрд░ рдЫрдиреЛрдЯ рдЧрд░рд┐рдПрдХреЛ рдЯрд╛рдЗрд▓ рд░рд╛рдЦреНрдиреБрд╣реЛрд╕реНред\nрдкреНрд░рддреНрдпреЗрдХ рдбреНрд░рдк рдмрдХреНрд╕рдорд╛ рей рдЯрд╛рдЗрд▓рд╣рд░реВ рд░рд╛рдЦреНрди рд╕рдХрд┐рдиреНрдЫред\nрдЗрдЪреНрдЫрд┐рдд рдЯрд╛рдЗрд▓рд╣рд░реВ рд░рд╛рдЦреЗрдкрдЫрд┐, рдЖрдлреНрдиреЛ рд╕реНрдХреЛрд░ рдЬрд╛рдБрдЪ рдЧрд░реНрди 'рдкреЗрд╢ рдЧрд░реНрдиреБрд╣реЛрд╕реН' рдЯреНрдпрд╛рдк рдЧрд░реНрдиреБрд╣реЛрд╕реНред\nрд╕рд╣реА рд░рд╛рдЦрд┐рдПрдХреЛ рдЯрд╛рдЗрд▓рд╣рд░реВрдХреЛ рд╕реНрдХреЛрд░рдХреЛ рдпреЛрдЧ рддрдкрд╛рдИрдВрдХреЛ рдХреБрд▓ рд╕реНрдХреЛрд░ рд╣реЛ, рддрд░ рдЧрд▓рдд рд░рд╛рдЦрд┐рдПрдХреЛ рдЯрд╛рдЗрд▓рд╣рд░реВрдХреЛ рд▓рд╛рдЧрд┐ рдирдХрд╛рд░рд╛рддреНрдордХ рд╕реНрдХреЛрд░рд┐рдЩ рд╣реБрдиреНрдЫред`
      : `You have started a game in Hard Mode.\nDouble-tap or double-click a tile to see its description and select it.\nTap or click a drop box to place the selected tile.\nYou can place up to 3 tiles in each drop box.\nOnce you place the desired tiles, tap 'Submit' to check your score.\nThe sum of scores of correctly placed tiles is your total score, but there is negative scoring for wrongly placed tiles.`;
  }

  let splashScreen = document.querySelector('.splash-screen');
  if (!splashScreen) {
    splashScreen = document.createElement('div');
    splashScreen.classList.add('splash-screen');
    document.body.appendChild(splashScreen);
  }

  splashScreen.innerHTML = `
    <div class="rules-text">${notes}</div>
    <button id="go-btn">${currentLanguage === 'Nepali' ? 'рдЬрд╛рдиреБрд╣реЛрд╕реН' : 'Go'}</button>
  `;

  setTimeout(() => {
    splashScreen.classList.add('show');
  }, 10);

  if (voiceToggle.checked) {
    speak(notes);
  }

  const goButton = splashScreen.querySelector('#go-btn');
  goButton.onclick = () => {
    splashScreen.classList.remove('show');
    setTimeout(() => {
      splashScreen.remove();
      startGame();
    }, 500);
  };

  splashScreen.onclick = (e) => {
    if (e.target === splashScreen || e.target === goButton) {
      splashScreen.classList.remove('show');
      setTimeout(() => {
        splashScreen.remove();
        startGame();
      }, 500);
    }
  };
};

resetBtn.onclick = () => {
  gameStarted = false;
  gameSubmitted = false;
  visibleScore = false;
  droppedTilesMap = {};
  dropBoxes.forEach(box => {
    [...box.querySelectorAll('.dropped-tile')].forEach(tile => tile.remove());
    box.style.cursor = '';
    box.ondragover = (e) => {
      if (!gameStarted || gameSubmitted) return;
      e.preventDefault();
      box.classList.add('drag-over');
    };
    box.ondragleave = () => {
      box.classList.remove('drag-over');
    };
    box.ondrop = (e) => {
      if (!gameStarted || gameSubmitted) return;
      e.preventDefault();
      box.classList.remove('drag-over');

      const key = e.dataTransfer.getData('text/plain');
      if (!key) return;
      if (droppedTilesMap[key]) return;
      const droppedTiles = box.querySelectorAll('.dropped-tile');
      if (droppedTiles.length >= 3) return;

      const droppedTile = document.createElement('div');
      droppedTile.classList.add('dropped-tile', 'animate-drop');
      droppedTile.textContent = key;
      droppedTile.setAttribute('data-key', key);

      droppedTile.onclick = () => {
        if (gameSubmitted) return;
        delete droppedTilesMap[key];
        droppedTile.remove();

        const { face, index } = originalPositions[key];
        const faceDiv = cube.querySelector(`.face.${face}`);
        const tiles = faceDiv.querySelectorAll('.tile');
        const targetTile = tiles[index];
        if (targetTile && !targetTile.hasAttribute('data-key')) {
          targetTile.textContent = key;
          targetTile.setAttribute('data-key', key);
          targetTile.setAttribute('draggable', 'false');
          targetTile.classList.remove('draggable');
          targetTile.style.cursor = 'default';
        }

        if (Object.keys(droppedTilesMap).length === 0) {
          submitBtn.disabled = true;
          submitBtn.classList.remove('glow');
        }
      };

      box.appendChild(droppedTile);
      droppedTilesMap[key] = box.id;

      const cubeTiles = cube.querySelectorAll('.tile');
      for (const t of cubeTiles) {
        if (t.getAttribute('data-key') === key) {
          t.textContent = '';
          t.removeAttribute('data-key');
          t.setAttribute('draggable', 'false');
          t.classList.remove('draggable');
          t.style.cursor = 'not-allowed';
          break;
        }
      }

      submitBtn.disabled = false;
      submitBtn.classList.add('glow');

      if (voiceToggle.checked) {
        const faceName = faceTitles[box.dataset.face][currentLanguage];
        speak(currentLanguage === 'Nepali' ? `${key} рд▓рд╛рдИ ${faceName} рдорд╛ рд░рд╛рдЦрд┐рдПрдХреЛ рдЫ` : `${key} is dropped into ${faceName}`);
      }
    };
  });

  populateCube();
  enableTileEvents();

  submitBtn.disabled = true;
  submitBtn.classList.remove('glow');
  resetBtn.disabled = true;
  resetBtn.classList.remove('glow');
  startBtn.disabled = false;
  startBtn.classList.add('glow');

  descriptionBox.textContent = currentLanguage === 'Nepali' 
    ? 'рд╡рд┐рд╡рд░рдг рдпрд╣рд╛рдБ рд╣реЗрд░реНрди рдЯрд╛рдЗрд▓рдорд╛ рдбрдмрд▓ рдЯреНрдпрд╛рдк рдЧрд░реНрдиреБрд╣реЛрд╕реНред' 
    : 'Double-tap a tile to see description and select.';
  scoreDisplay.textContent = "";
  faceTitle.textContent = currentLanguage === 'Nepali' 
    ? 'рдЬреЛрдЦрд┐рдо рдЫрдиреЛрдЯ рдЧрд░реНрдиреБрд╣реЛрд╕реН рд░ рдЦреЗрд▓ рд╕реБрд░реБ рдЧрд░реНрдиреБрд╣реЛрд╕реН' 
    : 'Select hazard and start the game';

  const splashScreen = document.querySelector('.splash-screen');
  if (splashScreen) {
    splashScreen.classList.remove('show');
    setTimeout(() => {
      splashScreen.remove();
    }, 500);
  }

  rotateHorizontalBtn.disabled = false;
  rotateVerticalBtn.disabled = false;
};

languageSelect.onchange = () => {
  currentLanguage = languageSelect.value;
  updateLanguage();
  if (voiceToggle.checked) {
    speak(currentLanguage === 'Nepali' 
      ? `рднрд╛рд╖рд╛ ${languageSelect.querySelector(`option[value="${currentLanguage}"]`).dataset.nepali} рдорд╛ рдкрд░рд┐рд╡рд░реНрддрди рдЧрд░рд┐рдпреЛред` 
      : `Language changed to ${currentLanguage}.`);
  }
};

function showTooltip() {
  let tooltip = gameLevelSelect.querySelector('.tooltip');
  if (!tooltip) {
    tooltip = document.createElement('div');
    tooltip.classList.add('tooltip');
    gameLevelSelect.appendChild(tooltip);
  }
  const mode = gameLevelSelect.value || "";
  switch (mode) {
    case "Easy":
      tooltip.textContent = currentLanguage === 'Nepali'
        ? "рд╕рдЬрд┐рд▓реЛ рдореЛрдбрдорд╛, рд╕рд╣реА рдбреНрд░рдк рдмрдХреНрд╕рдорд╛ рд░рд╛рдЦрд┐рдПрдХреЛ рдЯрд╛рдЗрд▓рд╣рд░реВрдХреЛ рд╕реНрдХреЛрд░ рдорд╛рддреНрд░ рдЧрдгрдирд╛ рд╣реБрдиреНрдЫред"
        : "In easy mode, scores of tiles dropped in correct drop box will only count.";
      break;
    case "Medium":
      tooltip.textContent = currentLanguage === 'Nepali'
        ? "рдордзреНрдпрдо рдореЛрдбрдорд╛, рдЧрд▓рдд рдбреНрд░рдк рдмрдХреНрд╕рдорд╛ рд░рд╛рдЦрд┐рдПрдХреЛ рдЯрд╛рдЗрд▓рд╣рд░реВрдХреЛ рд╕реНрдХреЛрд░ рдирдХрд╛рд░рд╛рддреНрдордХ рдЧрдгрдирд╛ рд╣реБрдиреНрдЫред"
        : "In medium mode, scores of tiles dropped in wrong drop box will be counted negative.";
      break;
    case "Hard":
      tooltip.textContent = currentLanguage === 'Nepali'
        ? "рдХрдард┐рди рдореЛрдбрдорд╛, рд╕рдмреИ рдЯрд╛рдЗрд▓рд╣рд░реВ рд░ рдбреНрд░рдк рдмрдХреНрд╕рд╣рд░реВрдХреЛ рд░рдВрдЧ рд╕рдорд╛рди рд╣реБрдиреНрдЫ рд░ рдЧрд▓рдд рдЯрд╛рдЗрд▓ рд░рд╛рдЦреНрджрд╛ рдирдХрд╛рд░рд╛рддреНрдордХ рдЕрдВрдХрди рд╣реБрдиреНрдЫред"
        : "In hard mode, all tiles and drop box will have same colors and there will be negative marking for wrong tile drop.";
      break;
    default:
      tooltip.textContent = currentLanguage === 'Nepali'
        ? "рдЦреЗрд▓ рдореЛрдб рдЫрдиреЛрдЯ рдЧрд░реНрдиреБрд╣реЛрд╕реНред"
        : "Select a game mode to see details.";
      break;
  }
}

gameLevelSelect.onchange = showTooltip;
gameLevelSelect.onmouseover = showTooltip;
gameLevelSelect.onmouseout = () => {
  const tooltip = gameLevelSelect.querySelector('.tooltip');
  if (tooltip) {
    tooltip.style.opacity = '0';
    tooltip.style.visibility = 'hidden';
  }
};

function speak(text) {
  if (!window.speechSynthesis) return;
  const utterance = new SpeechSynthesisUtterance(text);
  utterance.lang = currentLanguage === 'Nepali' ? 'ne-NP' : 'en-US';
  speechSynthesis.speak(utterance);
}

hamburgerToggle.onclick = () => {
  sidebarLeft.classList.toggle('collapsed');
  if (voiceToggle.checked) {
    const isCollapsed = sidebarLeft.classList.contains('collapsed');
    speak(currentLanguage === 'Nepali' 
      ? isCollapsed ? 'рд╕рд╛рдЗрдбрдмрд╛рд░ рдмрдиреНрдж' : 'рд╕рд╛рдЗрдбрдмрд╛рд░ рдЦреБрд▓рд╛' 
      : isCollapsed ? 'Sidebar collapsed' : 'Sidebar expanded');
  }
};

fullscreenBtn.onclick = () => {
  const isFullScreen = document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement;
  if (!isFullScreen) {
    const elem = document.documentElement;
    if (elem.requestFullscreen) {
      elem.requestFullscreen();
    } else if (elem.webkitRequestFullscreen) {
      elem.webkitRequestFullscreen();
    } else if (elem.mozRequestFullScreen) {
      elem.mozRequestFullScreen();
    } else if (elem.msRequestFullscreen) {
      elem.msRequestFullscreen();
    }
    fullscreenBtn.textContent = currentLanguage === 'Nepali' ? 'рдкреВрд░реНрдг рд╕реНрдХреНрд░рд┐рдирдмрд╛рдЯ рдмрд╛рд╣рд┐рд░ рдирд┐рд╕реНрдХрдиреБрд╣реЛрд╕реН' : 'Exit Full Screen';
    if (voiceToggle.checked) {
      speak(currentLanguage === 'Nepali' ? 'рдкреВрд░реНрдг рд╕реНрдХреНрд░рд┐рди рдореЛрдбрдорд╛ рдкреНрд░рд╡реЗрд╢ рдЧрд░рд┐рдпреЛ' : 'Entered full screen mode');
    }
  } else {
    if (document.exitFullscreen) {
      document.exitFullscreen();
    } else if (document.webkitExitFullscreen) {
      document.webkitExitFullscreen();
    } else if (document.mozCancelFullScreen) {
      document.mozCancelFullScreen();
    } else if (document.msExitFullscreen) {
      document.msExitFullscreen();
    }
    fullscreenBtn.textContent = currentLanguage === 'Nepali' ? 'рдкреВрд░реНрдг рд╕реНрдХреНрд░рд┐рди' : 'Full Screen';
    if (voiceToggle.checked) {
      speak(currentLanguage === 'Nepali' ? 'рдкреВрд░реНрдг рд╕реНрдХреНрд░рд┐рди рдореЛрдбрдмрд╛рдЯ рдмрд╛рд╣рд┐рд░ рдирд┐рд╕реНрдХрд┐рдпреЛ' : 'Exited full screen mode');
    }
  }
};

document.addEventListener('fullscreenchange', () => {
  if (!document.fullscreenElement) {
    fullscreenBtn.textContent = currentLanguage === 'Nepali' ? 'рдкреВрд░реНрдг рд╕реНрдХреНрд░рд┐рди' : 'Full Screen';
  } else {
    fullscreenBtn.textContent = currentLanguage === 'Nepali' ? 'рдкреВрд░реНрдг рд╕реНрдХреНрд░рд┐рдирдмрд╛рдЯ рдмрд╛рд╣рд┐рд░ рдирд┐рд╕реНрдХрдиреБрд╣реЛрд╕реН' : 'Exit Full Screen';
  }
});
document.addEventListener('webkitfullscreenchange', () => {
  if (!document.webkitFullscreenElement) {
    fullscreenBtn.textContent = currentLanguage === 'Nepali' ? 'рдкреВрд░реНрдг рд╕реНрдХреНрд░рд┐рди' : 'Full Screen';
  } else {
    fullscreenBtn.textContent = currentLanguage === 'Nepali' ? 'рдкреВрд░реНрдг рд╕реНрдХреНрд░рд┐рдирдмрд╛рдЯ рдмрд╛рд╣рд┐рд░ рдирд┐рд╕реНрдХрдиреБрд╣реЛрд╕реН' : 'Exit Full Screen';
  }
});
document.addEventListener('mozfullscreenchange', () => {
  if (!document.mozFullScreenElement) {
    fullscreenBtn.textContent = currentLanguage === 'Nepali' ? 'рдкреВрд░реНрдг рд╕реНрдХреНрд░рд┐рди' : 'Full Screen';
  } else {
    fullscreenBtn.textContent = currentLanguage === 'Nepali' ? 'рдкреВрд░реНрдг рд╕реНрдХреНрд░рд┐рдирдмрд╛рдЯ рдмрд╛рд╣рд┐рд░ рдирд┐рд╕реНрдХрдиреБрд╣реЛрд╕реН' : 'Exit Full Screen';
  }
});
document.addEventListener('msfullscreenchange', () => {
  if (!document.msFullscreenElement) {
    fullscreenBtn.textContent = currentLanguage === 'Nepali' ? 'рдкреВрд░реНрдг рд╕реНрдХреНрд░рд┐рди' : 'Full Screen';
  } else {
    fullscreenBtn.textContent = currentLanguage === 'Nepali' ? 'рдкреВрд░реНрдг рд╕реНрдХреНрд░рд┐рдирдмрд╛рдЯ рдмрд╛рд╣рд┐рд░ рдирд┐рд╕реНрдХрдиреБрд╣реЛрд╕реН' : 'Exit Full Screen';
  }
});

langEnglishBtn.onclick = () => {
  currentLanguage = 'English';
  languageSelect.value = 'English';
  updateLanguage();
  languageSplash.style.display = 'none';
  container.style.display = 'flex';
  if (voiceToggle.checked) {
    speak('Game interface set to English');
  }
};

langNepaliBtn.onclick = () => {
  currentLanguage = 'Nepali';
  languageSelect.value = 'Nepali';
  updateLanguage();
  languageSplash.style.display = 'none';
  container.style.display = 'flex';
  if (voiceToggle.checked) {
    speak('рдЦреЗрд▓ рдЗрдиреНрдЯрд░рдлреЗрд╕ рдиреЗрдкрд╛рд▓реАрдорд╛ рд╕реЗрдЯ рдЧрд░рд┐рдпреЛ');
  }
};

populateCube();
enableTileEvents();
attachDropBoxEvents();
resetBtn.disabled = true;
resetBtn.classList.remove('glow');
submitBtn.disabled = true;
submitBtn.classList.remove('glow');
startBtn.classList.add('glow');
updateCubeRotation();
showTooltip();